{
  "version": 3,
  "sources": ["../../fancy-canvas/size.mjs", "../../fancy-canvas/device-pixel-ratio.mjs", "../../fancy-canvas/canvas-element-bitmap-size.mjs", "../../fancy-canvas/canvas-rendering-target.mjs", "../../lightweight-charts/dist/lightweight-charts.development.mjs"],
  "sourcesContent": ["export function size(_a) {\n    var width = _a.width, height = _a.height;\n    if (width < 0) {\n        throw new Error('Negative width is not allowed for Size');\n    }\n    if (height < 0) {\n        throw new Error('Negative height is not allowed for Size');\n    }\n    return {\n        width: width,\n        height: height,\n    };\n}\nexport function equalSizes(first, second) {\n    return (first.width === second.width) &&\n        (first.height === second.height);\n}\n", "var Observable = /** @class */ (function () {\n    function Observable(win) {\n        var _this = this;\n        this._resolutionListener = function () { return _this._onResolutionChanged(); };\n        this._resolutionMediaQueryList = null;\n        this._observers = [];\n        this._window = win;\n        this._installResolutionListener();\n    }\n    Observable.prototype.dispose = function () {\n        this._uninstallResolutionListener();\n        this._window = null;\n    };\n    Object.defineProperty(Observable.prototype, \"value\", {\n        get: function () {\n            return this._window.devicePixelRatio;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Observable.prototype.subscribe = function (next) {\n        var _this = this;\n        var observer = { next: next };\n        this._observers.push(observer);\n        return {\n            unsubscribe: function () {\n                _this._observers = _this._observers.filter(function (o) { return o !== observer; });\n            },\n        };\n    };\n    Observable.prototype._installResolutionListener = function () {\n        if (this._resolutionMediaQueryList !== null) {\n            throw new Error('Resolution listener is already installed');\n        }\n        var dppx = this._window.devicePixelRatio;\n        this._resolutionMediaQueryList = this._window.matchMedia(\"all and (resolution: \".concat(dppx, \"dppx)\"));\n        // IE and some versions of Edge do not support addEventListener/removeEventListener, and we are going to use the deprecated addListener/removeListener\n        this._resolutionMediaQueryList.addListener(this._resolutionListener);\n    };\n    Observable.prototype._uninstallResolutionListener = function () {\n        if (this._resolutionMediaQueryList !== null) {\n            // IE and some versions of Edge do not support addEventListener/removeEventListener, and we are going to use the deprecated addListener/removeListener\n            this._resolutionMediaQueryList.removeListener(this._resolutionListener);\n            this._resolutionMediaQueryList = null;\n        }\n    };\n    Observable.prototype._reinstallResolutionListener = function () {\n        this._uninstallResolutionListener();\n        this._installResolutionListener();\n    };\n    Observable.prototype._onResolutionChanged = function () {\n        var _this = this;\n        this._observers.forEach(function (observer) { return observer.next(_this._window.devicePixelRatio); });\n        this._reinstallResolutionListener();\n    };\n    return Observable;\n}());\nexport function createObservable(win) {\n    return new Observable(win);\n}\n", "import { equalSizes, size } from \"./size.mjs\";\nimport { createObservable as createDevicePixelRatioObservable } from \"./device-pixel-ratio.mjs\";\nvar DevicePixelContentBoxBinding = /** @class */ (function () {\n    function DevicePixelContentBoxBinding(canvasElement, transformBitmapSize, options) {\n        var _a;\n        this._canvasElement = null;\n        this._bitmapSizeChangedListeners = [];\n        this._suggestedBitmapSize = null;\n        this._suggestedBitmapSizeChangedListeners = [];\n        // devicePixelRatio approach\n        this._devicePixelRatioObservable = null;\n        // ResizeObserver approach\n        this._canvasElementResizeObserver = null;\n        this._canvasElement = canvasElement;\n        this._canvasElementClientSize = size({\n            width: this._canvasElement.clientWidth,\n            height: this._canvasElement.clientHeight,\n        });\n        this._transformBitmapSize = transformBitmapSize !== null && transformBitmapSize !== void 0 ? transformBitmapSize : (function (size) { return size; });\n        this._allowResizeObserver = (_a = options === null || options === void 0 ? void 0 : options.allowResizeObserver) !== null && _a !== void 0 ? _a : true;\n        this._chooseAndInitObserver();\n        // we MAY leave the constuctor without any bitmap size observation mechanics initialized\n    }\n    DevicePixelContentBoxBinding.prototype.dispose = function () {\n        var _a, _b;\n        if (this._canvasElement === null) {\n            throw new Error('Object is disposed');\n        }\n        (_a = this._canvasElementResizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._canvasElementResizeObserver = null;\n        (_b = this._devicePixelRatioObservable) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._devicePixelRatioObservable = null;\n        this._suggestedBitmapSizeChangedListeners.length = 0;\n        this._bitmapSizeChangedListeners.length = 0;\n        this._canvasElement = null;\n    };\n    Object.defineProperty(DevicePixelContentBoxBinding.prototype, \"canvasElement\", {\n        get: function () {\n            if (this._canvasElement === null) {\n                throw new Error('Object is disposed');\n            }\n            return this._canvasElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DevicePixelContentBoxBinding.prototype, \"canvasElementClientSize\", {\n        get: function () {\n            return this._canvasElementClientSize;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DevicePixelContentBoxBinding.prototype, \"bitmapSize\", {\n        get: function () {\n            return size({\n                width: this.canvasElement.width,\n                height: this.canvasElement.height,\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Use this function to change canvas element client size until binding is disposed\n     * @param clientSize New client size for bound HTMLCanvasElement\n     */\n    DevicePixelContentBoxBinding.prototype.resizeCanvasElement = function (clientSize) {\n        this._canvasElementClientSize = size(clientSize);\n        this.canvasElement.style.width = \"\".concat(this._canvasElementClientSize.width, \"px\");\n        this.canvasElement.style.height = \"\".concat(this._canvasElementClientSize.height, \"px\");\n        this._invalidateBitmapSize();\n    };\n    DevicePixelContentBoxBinding.prototype.subscribeBitmapSizeChanged = function (listener) {\n        this._bitmapSizeChangedListeners.push(listener);\n    };\n    DevicePixelContentBoxBinding.prototype.unsubscribeBitmapSizeChanged = function (listener) {\n        this._bitmapSizeChangedListeners = this._bitmapSizeChangedListeners.filter(function (l) { return l !== listener; });\n    };\n    Object.defineProperty(DevicePixelContentBoxBinding.prototype, \"suggestedBitmapSize\", {\n        get: function () {\n            return this._suggestedBitmapSize;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DevicePixelContentBoxBinding.prototype.subscribeSuggestedBitmapSizeChanged = function (listener) {\n        this._suggestedBitmapSizeChangedListeners.push(listener);\n    };\n    DevicePixelContentBoxBinding.prototype.unsubscribeSuggestedBitmapSizeChanged = function (listener) {\n        this._suggestedBitmapSizeChangedListeners = this._suggestedBitmapSizeChangedListeners.filter(function (l) { return l !== listener; });\n    };\n    DevicePixelContentBoxBinding.prototype.applySuggestedBitmapSize = function () {\n        if (this._suggestedBitmapSize === null) {\n            // nothing to apply\n            return;\n        }\n        var oldSuggestedSize = this._suggestedBitmapSize;\n        this._suggestedBitmapSize = null;\n        this._resizeBitmap(oldSuggestedSize);\n        this._emitSuggestedBitmapSizeChanged(oldSuggestedSize, this._suggestedBitmapSize);\n    };\n    DevicePixelContentBoxBinding.prototype._resizeBitmap = function (newSize) {\n        var oldSize = this.bitmapSize;\n        if (equalSizes(oldSize, newSize)) {\n            return;\n        }\n        this.canvasElement.width = newSize.width;\n        this.canvasElement.height = newSize.height;\n        this._emitBitmapSizeChanged(oldSize, newSize);\n    };\n    DevicePixelContentBoxBinding.prototype._emitBitmapSizeChanged = function (oldSize, newSize) {\n        var _this = this;\n        this._bitmapSizeChangedListeners.forEach(function (listener) { return listener.call(_this, oldSize, newSize); });\n    };\n    DevicePixelContentBoxBinding.prototype._suggestNewBitmapSize = function (newSize) {\n        var oldSuggestedSize = this._suggestedBitmapSize;\n        var finalNewSize = size(this._transformBitmapSize(newSize, this._canvasElementClientSize));\n        var newSuggestedSize = equalSizes(this.bitmapSize, finalNewSize) ? null : finalNewSize;\n        if (oldSuggestedSize === null && newSuggestedSize === null) {\n            return;\n        }\n        if (oldSuggestedSize !== null && newSuggestedSize !== null\n            && equalSizes(oldSuggestedSize, newSuggestedSize)) {\n            return;\n        }\n        this._suggestedBitmapSize = newSuggestedSize;\n        this._emitSuggestedBitmapSizeChanged(oldSuggestedSize, newSuggestedSize);\n    };\n    DevicePixelContentBoxBinding.prototype._emitSuggestedBitmapSizeChanged = function (oldSize, newSize) {\n        var _this = this;\n        this._suggestedBitmapSizeChangedListeners.forEach(function (listener) { return listener.call(_this, oldSize, newSize); });\n    };\n    DevicePixelContentBoxBinding.prototype._chooseAndInitObserver = function () {\n        var _this = this;\n        if (!this._allowResizeObserver) {\n            this._initDevicePixelRatioObservable();\n            return;\n        }\n        isDevicePixelContentBoxSupported()\n            .then(function (isSupported) {\n            return isSupported ?\n                _this._initResizeObserver() :\n                _this._initDevicePixelRatioObservable();\n        });\n    };\n    // devicePixelRatio approach\n    DevicePixelContentBoxBinding.prototype._initDevicePixelRatioObservable = function () {\n        var _this = this;\n        if (this._canvasElement === null) {\n            // it looks like we are already dead\n            return;\n        }\n        var win = canvasElementWindow(this._canvasElement);\n        if (win === null) {\n            throw new Error('No window is associated with the canvas');\n        }\n        this._devicePixelRatioObservable = createDevicePixelRatioObservable(win);\n        this._devicePixelRatioObservable.subscribe(function () { return _this._invalidateBitmapSize(); });\n        this._invalidateBitmapSize();\n    };\n    DevicePixelContentBoxBinding.prototype._invalidateBitmapSize = function () {\n        var _a, _b;\n        if (this._canvasElement === null) {\n            // it looks like we are already dead\n            return;\n        }\n        var win = canvasElementWindow(this._canvasElement);\n        if (win === null) {\n            return;\n        }\n        var ratio = (_b = (_a = this._devicePixelRatioObservable) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : win.devicePixelRatio;\n        var canvasRects = this._canvasElement.getClientRects();\n        var newSize = \n        // eslint-disable-next-line no-negated-condition\n        canvasRects[0] !== undefined ?\n            predictedBitmapSize(canvasRects[0], ratio) :\n            size({\n                width: this._canvasElementClientSize.width * ratio,\n                height: this._canvasElementClientSize.height * ratio,\n            });\n        this._suggestNewBitmapSize(newSize);\n    };\n    // ResizeObserver approach\n    DevicePixelContentBoxBinding.prototype._initResizeObserver = function () {\n        var _this = this;\n        if (this._canvasElement === null) {\n            // it looks like we are already dead\n            return;\n        }\n        this._canvasElementResizeObserver = new ResizeObserver(function (entries) {\n            var entry = entries.find(function (entry) { return entry.target === _this._canvasElement; });\n            if (!entry || !entry.devicePixelContentBoxSize || !entry.devicePixelContentBoxSize[0]) {\n                return;\n            }\n            var entrySize = entry.devicePixelContentBoxSize[0];\n            var newSize = size({\n                width: entrySize.inlineSize,\n                height: entrySize.blockSize,\n            });\n            _this._suggestNewBitmapSize(newSize);\n        });\n        this._canvasElementResizeObserver.observe(this._canvasElement, { box: 'device-pixel-content-box' });\n    };\n    return DevicePixelContentBoxBinding;\n}());\nexport function bindTo(canvasElement, target) {\n    if (target.type === 'device-pixel-content-box') {\n        return new DevicePixelContentBoxBinding(canvasElement, target.transform, target.options);\n    }\n    throw new Error('Unsupported binding target');\n}\nfunction canvasElementWindow(canvasElement) {\n    // According to DOM Level 2 Core specification, ownerDocument should never be null for HTMLCanvasElement\n    // see https://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#node-ownerDoc\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return canvasElement.ownerDocument.defaultView;\n}\nfunction isDevicePixelContentBoxSupported() {\n    return new Promise(function (resolve) {\n        var ro = new ResizeObserver(function (entries) {\n            resolve(entries.every(function (entry) { return 'devicePixelContentBoxSize' in entry; }));\n            ro.disconnect();\n        });\n        ro.observe(document.body, { box: 'device-pixel-content-box' });\n    })\n        .catch(function () { return false; });\n}\nfunction predictedBitmapSize(canvasRect, ratio) {\n    return size({\n        width: Math.round(canvasRect.left * ratio + canvasRect.width * ratio) -\n            Math.round(canvasRect.left * ratio),\n        height: Math.round(canvasRect.top * ratio + canvasRect.height * ratio) -\n            Math.round(canvasRect.top * ratio),\n    });\n}\n", "/**\n * @experimental\n */\nvar CanvasRenderingTarget2D = /** @class */ (function () {\n    function CanvasRenderingTarget2D(context, mediaSize, bitmapSize) {\n        if (mediaSize.width === 0 || mediaSize.height === 0) {\n            throw new TypeError('Rendering target could only be created on a media with positive width and height');\n        }\n        this._mediaSize = mediaSize;\n        // !Number.isInteger(bitmapSize.width) || !Number.isInteger(bitmapSize.height)\n        if (bitmapSize.width === 0 || bitmapSize.height === 0) {\n            throw new TypeError('Rendering target could only be created using a bitmap with positive integer width and height');\n        }\n        this._bitmapSize = bitmapSize;\n        this._context = context;\n    }\n    CanvasRenderingTarget2D.prototype.useMediaCoordinateSpace = function (f) {\n        try {\n            this._context.save();\n            // do not use resetTransform to support old versions of Edge\n            this._context.setTransform(1, 0, 0, 1, 0, 0);\n            this._context.scale(this._horizontalPixelRatio, this._verticalPixelRatio);\n            return f({\n                context: this._context,\n                mediaSize: this._mediaSize,\n            });\n        }\n        finally {\n            this._context.restore();\n        }\n    };\n    CanvasRenderingTarget2D.prototype.useBitmapCoordinateSpace = function (f) {\n        try {\n            this._context.save();\n            // do not use resetTransform to support old versions of Edge\n            this._context.setTransform(1, 0, 0, 1, 0, 0);\n            return f({\n                context: this._context,\n                mediaSize: this._mediaSize,\n                bitmapSize: this._bitmapSize,\n                horizontalPixelRatio: this._horizontalPixelRatio,\n                verticalPixelRatio: this._verticalPixelRatio,\n            });\n        }\n        finally {\n            this._context.restore();\n        }\n    };\n    Object.defineProperty(CanvasRenderingTarget2D.prototype, \"_horizontalPixelRatio\", {\n        get: function () {\n            return this._bitmapSize.width / this._mediaSize.width;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CanvasRenderingTarget2D.prototype, \"_verticalPixelRatio\", {\n        get: function () {\n            return this._bitmapSize.height / this._mediaSize.height;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CanvasRenderingTarget2D;\n}());\nexport { CanvasRenderingTarget2D };\n/**\n * @experimental\n */\nexport function createCanvasRenderingTarget2D(binding, contextOptions) {\n    var mediaSize = binding.canvasElementClientSize;\n    var bitmapSize = binding.bitmapSize;\n    var context = binding.canvasElement.getContext('2d', contextOptions);\n    if (context === null) {\n        throw new Error('Could not get 2d drawing context from bound canvas element. Has the canvas already been set to a different context mode?');\n    }\n    return new CanvasRenderingTarget2D(context, mediaSize, bitmapSize);\n}\n/**\n * @experimental\n */\nexport function tryCreateCanvasRenderingTarget2D(binding, contextOptions) {\n    var mediaSize = binding.canvasElementClientSize;\n    if (mediaSize.width === 0 || mediaSize.height === 0) {\n        return null;\n    }\n    var bitmapSize = binding.bitmapSize;\n    if (bitmapSize.width === 0 || bitmapSize.height === 0) {\n        return null;\n    }\n    var context = binding.canvasElement.getContext('2d', contextOptions);\n    if (context === null) {\n        return null;\n    }\n    return new CanvasRenderingTarget2D(context, mediaSize, bitmapSize);\n}\n", "/*!\n * @license\n * TradingView Lightweight Charts™ v4.1.4\n * Copyright (c) 2024 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\nconst candlestickStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    wickVisible: true,\n    borderVisible: true,\n    borderColor: '#378658',\n    borderUpColor: '#26a69a',\n    borderDownColor: '#ef5350',\n    wickColor: '#737375',\n    wickUpColor: '#26a69a',\n    wickDownColor: '#ef5350',\n};\nconst barStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    openVisible: true,\n    thinBars: true,\n};\nconst lineStyleDefaults = {\n    color: '#2196f3',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst areaStyleDefaults = {\n    topColor: 'rgba( 46, 220, 135, 0.4)',\n    bottomColor: 'rgba( 40, 221, 100, 0)',\n    invertFilledArea: false,\n    lineColor: '#33D778',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst baselineStyleDefaults = {\n    baseValue: {\n        type: 'price',\n        price: 0,\n    },\n    topFillColor1: 'rgba(38, 166, 154, 0.28)',\n    topFillColor2: 'rgba(38, 166, 154, 0.05)',\n    topLineColor: 'rgba(38, 166, 154, 1)',\n    bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n    bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n    bottomLineColor: 'rgba(239, 83, 80, 1)',\n    lineWidth: 3,\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst histogramStyleDefaults = {\n    color: '#26a69a',\n    base: 0,\n};\nconst customStyleDefaults = {\n    color: '#2196f3',\n};\nconst seriesOptionsDefaults = {\n    title: '',\n    visible: true,\n    lastValueVisible: true,\n    priceLineVisible: true,\n    priceLineSource: 0 /* PriceLineSource.LastBar */,\n    priceLineWidth: 1,\n    priceLineColor: '',\n    priceLineStyle: 2 /* LineStyle.Dashed */,\n    baseLineVisible: true,\n    baseLineWidth: 1,\n    baseLineColor: '#B2B5BE',\n    baseLineStyle: 0 /* LineStyle.Solid */,\n    priceFormat: {\n        type: 'price',\n        precision: 2,\n        minMove: 0.01,\n    },\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n    /**\n     * A line.\n     */\n    LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * A stepped line.\n     */\n    LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n    /**\n     * A curved line.\n     */\n    LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n    /**\n     * A solid line.\n     */\n    LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * A dotted line.\n     */\n    LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n    /**\n     * A dashed line.\n     */\n    LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n    /**\n     * A dashed line with bigger dashes.\n     */\n    LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n    /**\n     * A dotted line with more space between dots.\n     */\n    LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n    const dashPatterns = {\n        [0 /* LineStyle.Solid */]: [],\n        [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n        [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n        [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n        [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth],\n    };\n    const dashPattern = dashPatterns[style];\n    ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(left, y + correction);\n    ctx.lineTo(right, y + correction);\n    ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(x + correction, top);\n    ctx.lineTo(x + correction, bottom);\n    ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n    ctx.save();\n    if (ctx.lineWidth % 2) {\n        ctx.translate(0.5, 0.5);\n    }\n    drawFunction();\n    ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n    }\n}\nfunction ensureDefined(value) {\n    if (value === undefined) {\n        throw new Error('Value is undefined');\n    }\n    return value;\n}\nfunction ensureNotNull(value) {\n    if (value === null) {\n        throw new Error('Value is null');\n    }\n    return value;\n}\nfunction ensure(value) {\n    return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) { }\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n    // The order of properties in this Record is not important for the internal logic.\n    // It's just GZIPped better when props follows this order.\n    // Please add new colors to the end of the record.\n    khaki: '#f0e68c',\n    azure: '#f0ffff',\n    aliceblue: '#f0f8ff',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gainsboro: '#dcdcdc',\n    gray: '#808080',\n    green: '#008000',\n    honeydew: '#f0fff0',\n    floralwhite: '#fffaf0',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lemonchiffon: '#fffacd',\n    hotpink: '#ff69b4',\n    lightyellow: '#ffffe0',\n    greenyellow: '#adff2f',\n    lightgoldenrodyellow: '#fafad2',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    lightcyan: '#e0ffff',\n    magenta: '#f0f',\n    maroon: '#800000',\n    olive: '#808000',\n    orange: '#ffa500',\n    oldlace: '#fdf5e6',\n    mediumblue: '#0000cd',\n    transparent: '#0000',\n    lime: '#0f0',\n    lightpink: '#ffb6c1',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    midnightblue: '#191970',\n    orchid: '#da70d6',\n    mediumorchid: '#ba55d3',\n    mediumturquoise: '#48d1cc',\n    orangered: '#ff4500',\n    royalblue: '#4169e1',\n    powderblue: '#b0e0e6',\n    red: '#f00',\n    coral: '#ff7f50',\n    turquoise: '#40e0d0',\n    white: '#fff',\n    whitesmoke: '#f5f5f5',\n    wheat: '#f5deb3',\n    teal: '#008080',\n    steelblue: '#4682b4',\n    bisque: '#ffe4c4',\n    aquamarine: '#7fffd4',\n    aqua: '#0ff',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    springgreen: '#00ff7f',\n    antiquewhite: '#faebd7',\n    burlywood: '#deb887',\n    brown: '#a52a2a',\n    beige: '#f5f5dc',\n    chocolate: '#d2691e',\n    chartreuse: '#7fff00',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cadetblue: '#5f9ea0',\n    tomato: '#ff6347',\n    fuchsia: '#f0f',\n    blue: '#00f',\n    salmon: '#fa8072',\n    blanchedalmond: '#ffebcd',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    thistle: '#d8bfd8',\n    tan: '#d2b48c',\n    cyan: '#0ff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    blueviolet: '#8a2be2',\n    black: '#000',\n    darkmagenta: '#8b008b',\n    darkslateblue: '#483d8b',\n    darkkhaki: '#bdb76b',\n    darkorchid: '#9932cc',\n    darkorange: '#ff8c00',\n    darkgreen: '#006400',\n    darkred: '#8b0000',\n    dodgerblue: '#1e90ff',\n    darkslategray: '#2f4f4f',\n    dimgray: '#696969',\n    deepskyblue: '#00bfff',\n    firebrick: '#b22222',\n    forestgreen: '#228b22',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    lavenderblush: '#fff0f5',\n    feldspar: '#d19275',\n    indianred: '#cd5c5c',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightskyblue: '#87cefa',\n    lightslategray: '#789',\n    lightslateblue: '#8470ff',\n    snow: '#fffafa',\n    lightseagreen: '#20b2aa',\n    lightsalmon: '#ffa07a',\n    darksalmon: '#e9967a',\n    darkviolet: '#9400d3',\n    mediumpurple: '#9370d8',\n    mediumaquamarine: '#66cdaa',\n    skyblue: '#87ceeb',\n    lavender: '#e6e6fa',\n    lightsteelblue: '#b0c4de',\n    mediumvioletred: '#c71585',\n    mintcream: '#f5fffa',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    olivedrab: '#6b8e23',\n    palevioletred: '#d87093',\n    violetred: '#d02090',\n    yellow: '#ff0',\n    yellowgreen: '#9acd32',\n    lawngreen: '#7cfc00',\n    pink: '#ffc0cb',\n    paleturquoise: '#afeeee',\n    palegoldenrod: '#eee8aa',\n    darkolivegreen: '#556b2f',\n    darkseagreen: '#8fbc8f',\n    darkturquoise: '#00ced1',\n    peachpuff: '#ffdab9',\n    deeppink: '#ff1493',\n    violet: '#ee82ee',\n    palegreen: '#98fb98',\n    mediumseagreen: '#3cb371',\n    peru: '#cd853f',\n    saddlebrown: '#8b4513',\n    sandybrown: '#f4a460',\n    rosybrown: '#bc8f8f',\n    purple: '#800080',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    papayawhip: '#ffefd5',\n    mediumslateblue: '#7b68ee',\n    plum: '#dda0dd',\n    mediumspringgreen: '#00fa9a',\n};\nfunction normalizeRgbComponent(component) {\n    if (component < 0) {\n        return 0;\n    }\n    if (component > 255) {\n        return 255;\n    }\n    // NaN values are treated as 0\n    return (Math.round(component) || 0);\n}\nfunction normalizeAlphaComponent(component) {\n    if (component <= 0 || component > 1) {\n        return Math.min(Math.max(component, 0), 1);\n    }\n    // limit the precision of all numbers to at most 4 digits in fractional part\n    return Math.round(component * 10000) / 10000;\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d*\\.?\\d+)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n    colorString = colorString.toLowerCase();\n    // eslint-disable-next-line no-restricted-syntax\n    if (colorString in namedColorRgbHexStrings) {\n        colorString = namedColorRgbHexStrings[colorString];\n    }\n    {\n        const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 10)),\n                normalizeRgbComponent(parseInt(matches[2], 10)),\n                normalizeRgbComponent(parseInt(matches[3], 10)),\n                normalizeAlphaComponent((matches.length < 5 ? 1 : parseFloat(matches[4]))),\n            ];\n        }\n    }\n    {\n        const matches = hexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16)),\n                normalizeRgbComponent(parseInt(matches[2], 16)),\n                normalizeRgbComponent(parseInt(matches[3], 16)),\n                1,\n            ];\n        }\n    }\n    {\n        const matches = shortHexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[2], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[3], 16) * 0x11),\n                1,\n            ];\n        }\n    }\n    throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n    // Originally, the NTSC RGB to YUV formula\n    // perfected by @eugene-korobko's black magic\n    const redComponentGrayscaleWeight = 0.199;\n    const greenComponentGrayscaleWeight = 0.687;\n    const blueComponentGrayscaleWeight = 0.114;\n    return (redComponentGrayscaleWeight * rgbValue[0] +\n        greenComponentGrayscaleWeight * rgbValue[1] +\n        blueComponentGrayscaleWeight * rgbValue[2]);\n}\nfunction applyAlpha(color, alpha) {\n    // special case optimization\n    if (color === 'transparent') {\n        return color;\n    }\n    const originRgba = colorStringToRgba(color);\n    const originAlpha = originRgba[3];\n    return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n    const rgb = colorStringToRgba(backgroundColor);\n    return {\n        _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n        _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white',\n    };\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n    const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n    const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n    const resultRgba = [\n        normalizeRgbComponent(topR + percent * (bottomR - topR)),\n        normalizeRgbComponent(topG + percent * (bottomG - topG)),\n        normalizeRgbComponent(topB + percent * (bottomB - topB)),\n        normalizeAlphaComponent(topA + percent * (bottomA - topA)),\n    ];\n    return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\n\nclass Delegate {\n    constructor() {\n        this._private__listeners = [];\n    }\n    _internal_subscribe(callback, linkedObject, singleshot) {\n        const listener = {\n            _internal_callback: callback,\n            _internal_linkedObject: linkedObject,\n            _internal_singleshot: singleshot === true,\n        };\n        this._private__listeners.push(listener);\n    }\n    _internal_unsubscribe(callback) {\n        const index = this._private__listeners.findIndex((listener) => callback === listener._internal_callback);\n        if (index > -1) {\n            this._private__listeners.splice(index, 1);\n        }\n    }\n    _internal_unsubscribeAll(linkedObject) {\n        this._private__listeners = this._private__listeners.filter((listener) => listener._internal_linkedObject !== linkedObject);\n    }\n    _internal_fire(param1, param2, param3) {\n        const listenersSnapshot = [...this._private__listeners];\n        this._private__listeners = this._private__listeners.filter((listener) => !listener._internal_singleshot);\n        listenersSnapshot.forEach((listener) => listener._internal_callback(param1, param2, param3));\n    }\n    _internal_hasListeners() {\n        return this._private__listeners.length > 0;\n    }\n    _internal_destroy() {\n        this._private__listeners = [];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n    for (const src of sources) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const i in src) {\n            if (src[i] === undefined) {\n                continue;\n            }\n            if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n                dst[i] = src[i];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                merge(dst[i], src[i]);\n            }\n        }\n    }\n    return dst;\n}\nfunction isNumber(value) {\n    return (typeof value === 'number') && (isFinite(value));\n}\nfunction isInteger(value) {\n    return (typeof value === 'number') && ((value % 1) === 0);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction clone(object) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const o = object;\n    if (!o || 'object' !== typeof o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return o;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let c;\n    if (Array.isArray(o)) {\n        c = [];\n    }\n    else {\n        c = {};\n    }\n    let p;\n    let v;\n    // eslint-disable-next-line no-restricted-syntax\n    for (p in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n        if (o.hasOwnProperty(p)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            v = o[p];\n            if (v && 'object' === typeof v) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = clone(v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = v;\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return c;\n}\nfunction notNull(t) {\n    return t !== null;\n}\nfunction undefinedIfNull(t) {\n    return (t === null) ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n    if (style !== undefined) {\n        style = `${style} `;\n    }\n    else {\n        style = '';\n    }\n    if (family === undefined) {\n        family = defaultFontFamily;\n    }\n    return `${style}${size}px ${family}`;\n}\n\nclass PriceAxisRendererOptionsProvider {\n    constructor(chartModel) {\n        this._private__rendererOptions = {\n            _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n            _internal_tickLength: 5 /* RendererConstants.TickLength */,\n            _internal_fontSize: NaN,\n            _internal_font: '',\n            _internal_fontFamily: '',\n            _internal_color: '',\n            _internal_paneBackgroundColor: '',\n            _internal_paddingBottom: 0,\n            _internal_paddingInner: 0,\n            _internal_paddingOuter: 0,\n            _internal_paddingTop: 0,\n            _internal_baselineOffset: 0,\n        };\n        this._private__chartModel = chartModel;\n    }\n    _internal_options() {\n        const rendererOptions = this._private__rendererOptions;\n        const currentFontSize = this._private__fontSize();\n        const currentFontFamily = this._private__fontFamily();\n        if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n            rendererOptions._internal_fontSize = currentFontSize;\n            rendererOptions._internal_fontFamily = currentFontFamily;\n            rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n            rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n            rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n            rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_baselineOffset = 0;\n        }\n        rendererOptions._internal_color = this._private__textColor();\n        rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n        return this._private__rendererOptions;\n    }\n    _private__textColor() {\n        return this._private__chartModel._internal_options().layout.textColor;\n    }\n    _private__paneBackgroundColor() {\n        return this._private__chartModel._internal_backgroundTopColor();\n    }\n    _private__fontSize() {\n        return this._private__chartModel._internal_options().layout.fontSize;\n    }\n    _private__fontFamily() {\n        return this._private__chartModel._internal_options().layout.fontFamily;\n    }\n}\n\nclass CompositeRenderer {\n    constructor() {\n        this._private__renderers = [];\n    }\n    _internal_setRenderers(renderers) {\n        this._private__renderers = renderers;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__renderers.forEach((r) => {\n            r._internal_draw(target, isHovered, hitTestData);\n        });\n    }\n}\n\nclass BitmapCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useBitmapCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n}\n\nclass PaneRendererMarks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n            return;\n        }\n        const visibleRange = this._internal__data._internal_visibleRange;\n        const data = this._internal__data;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const draw = (radiusMedia) => {\n            ctx.beginPath();\n            for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n                const point = data._internal_items[i];\n                const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n                const centerY = point._internal_y * verticalPixelRatio;\n                const radius = radiusMedia * verticalPixelRatio + correction;\n                ctx.moveTo(centerX, centerY);\n                ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n            }\n            ctx.fill();\n        };\n        if (data._internal_lineWidth > 0) {\n            ctx.fillStyle = data._internal_backColor;\n            draw(data._internal_radius + data._internal_lineWidth);\n        }\n        ctx.fillStyle = data._internal_lineColor;\n        draw(data._internal_radius);\n    }\n}\n\nfunction createEmptyMarkerData() {\n    return {\n        _internal_items: [{\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_time: 0,\n                _internal_price: 0,\n            }],\n        _internal_lineColor: '',\n        _internal_backColor: '',\n        _internal_radius: 0,\n        _internal_lineWidth: 0,\n        _internal_visibleRange: null,\n    };\n}\nconst rangeForSinglePoint = { from: 0, to: 1 };\nclass CrosshairMarksPaneView {\n    constructor(chartModel, crosshair) {\n        this._private__compositeRenderer = new CompositeRenderer();\n        this._private__markersRenderers = [];\n        this._private__markersData = [];\n        this._private__invalidated = true;\n        this._private__chartModel = chartModel;\n        this._private__crosshair = crosshair;\n        this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    _internal_update(updateType) {\n        const serieses = this._private__chartModel._internal_serieses();\n        if (serieses.length !== this._private__markersRenderers.length) {\n            this._private__markersData = serieses.map(createEmptyMarkerData);\n            this._private__markersRenderers = this._private__markersData.map((data) => {\n                const res = new PaneRendererMarks();\n                res._internal_setData(data);\n                return res;\n            });\n            this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n        }\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__compositeRenderer;\n    }\n    _private__updateImpl() {\n        const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */;\n        const serieses = this._private__chartModel._internal_serieses();\n        const timePointIndex = this._private__crosshair._internal_appliedIndex();\n        const timeScale = this._private__chartModel._internal_timeScale();\n        serieses.forEach((s, index) => {\n            var _a;\n            const data = this._private__markersData[index];\n            const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n            if (forceHidden || seriesData === null || !s._internal_visible()) {\n                data._internal_visibleRange = null;\n                return;\n            }\n            const firstValue = ensureNotNull(s._internal_firstValue());\n            data._internal_lineColor = seriesData._internal_backgroundColor;\n            data._internal_radius = seriesData._internal_radius;\n            data._internal_lineWidth = seriesData._internal_borderWidth;\n            data._internal_items[0]._internal_price = seriesData._internal_price;\n            data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n            data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n            data._internal_items[0]._internal_time = timePointIndex;\n            data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n            data._internal_visibleRange = rangeForSinglePoint;\n        });\n    }\n}\n\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n        const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n        if (!vertLinesVisible && !horzLinesVisible) {\n            return;\n        }\n        const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        ctx.lineCap = 'butt';\n        if (vertLinesVisible && x >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n            drawVerticalLine(ctx, x, 0, bitmapSize.height);\n        }\n        if (horzLinesVisible && y >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n            drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n        }\n    }\n}\n\nclass CrosshairPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_vertLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_horzLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_x: 0,\n            _internal_y: 0,\n        };\n        this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const visible = this._private__source._internal_visible();\n        const pane = ensureNotNull(this._private__source._internal_pane());\n        const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n        const data = this._private__rendererData;\n        if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n            data._internal_horzLine._internal_visible = false;\n            data._internal_vertLine._internal_visible = false;\n            return;\n        }\n        data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n        data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n        data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n        data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n        data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n        data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n        data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n        data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n        data._internal_x = this._private__source._internal_appliedX();\n        data._internal_y = this._private__source._internal_appliedY();\n    }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n    // horizontal (top and bottom) edges\n    ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n    ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n    // vertical (left and right) edges\n    ctx.fillRect(x, y, borderWidth, height);\n    ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n    return borderRadius.map((x) => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n    /**\n     * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n     * be able to switch to the native version soon.\n     */\n    ctx.beginPath();\n    if (ctx.roundRect) {\n        ctx.roundRect(x, y, w, h, radii);\n        return;\n    }\n    /*\n     * Deprecate the rest in v5.\n     */\n    ctx.lineTo(x + w - radii[1], y);\n    if (radii[1] !== 0) {\n        ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n    }\n    ctx.lineTo(x + w, y + h - radii[2]);\n    if (radii[2] !== 0) {\n        ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n    }\n    ctx.lineTo(x + radii[3], y + h);\n    if (radii[3] !== 0) {\n        ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n    }\n    ctx.lineTo(x, y + radii[0]);\n    if (radii[0] !== 0) {\n        ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n    }\n}\n/**\n * Draws a rounded rect with a border.\n *\n * This function assumes that the colors will be solid, without\n * any alpha. (This allows us to fix a rendering artefact.)\n *\n * @param outerBorderRadius - The radius of the border (outer edge)\n */\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, outerBorderRadius = [0, 0, 0, 0], borderColor = '') {\n    ctx.save();\n    if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n        drawRoundRect(ctx, left, top, width, height, outerBorderRadius);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n        return;\n    }\n    const halfBorderWidth = borderWidth / 2;\n    const radii = changeBorderRadius(outerBorderRadius, -halfBorderWidth);\n    drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, radii);\n    if (backgroundColor !== 'transparent') {\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n    }\n    if (borderColor !== 'transparent') {\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = borderColor;\n        ctx.closePath();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    const gradient = ctx.createLinearGradient(0, 0, 0, h);\n    gradient.addColorStop(0, topColor);\n    gradient.addColorStop(1, bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\n\nclass PriceAxisViewRenderer {\n    constructor(data, commonData) {\n        this._internal_setData(data, commonData);\n    }\n    _internal_setData(data, commonData) {\n        this._private__data = data;\n        this._private__commonData = commonData;\n    }\n    _internal_height(rendererOptions, useSecondLine) {\n        if (!this._private__data._internal_visible) {\n            return 0;\n        }\n        return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n    }\n    _internal_draw(target, rendererOptions, textWidthCache, align) {\n        if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textColor = this._private__data._internal_color;\n        const backgroundColor = this._private__commonData._internal_background;\n        const geometry = target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            ctx.font = rendererOptions._internal_font;\n            const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n            const gb = geom._internal_bitmap;\n            const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n                /*\n                 labelBackgroundColor (and labelBorderColor) will always be a solid color (no alpha) [see generateContrastColors in color.ts].\n                 Therefore we can draw the rounded label using simplified code (drawRoundRectWithBorder) that doesn't need to ensure the background and the border don't overlap.\n                */\n                if (geom._internal_alignRight) {\n                    drawRoundRectWithBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n                }\n                else {\n                    drawRoundRectWithBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n                }\n            };\n            // draw border\n            // draw label background\n            drawLabelBody(backgroundColor, 'transparent');\n            // draw tick\n            if (this._private__data._internal_tickVisible) {\n                ctx.fillStyle = textColor;\n                ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n            }\n            // draw label border above the tick\n            drawLabelBody('transparent', backgroundColor);\n            // draw separator\n            if (this._private__data._internal_borderVisible) {\n                ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n                ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n            }\n            return geom;\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const gm = geometry._internal_media;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = textColor;\n            ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n        });\n    }\n    _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n        var _a;\n        const { context: ctx, bitmapSize, mediaSize, horizontalPixelRatio, verticalPixelRatio } = scope;\n        const tickSize = (this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick) ? rendererOptions._internal_tickLength : 0;\n        const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n        const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n        const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n        const paddingInner = rendererOptions._internal_paddingInner;\n        const paddingOuter = rendererOptions._internal_paddingOuter;\n        const text = this._private__data._internal_text;\n        const actualTextHeight = rendererOptions._internal_fontSize;\n        const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n        const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n        const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n        const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n        const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n        let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n        if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n            totalHeightBitmap += 1;\n        }\n        const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n        const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n        // tick overlaps scale border\n        const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n        const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n        const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n        const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n        const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n        const alignRight = align === 'right';\n        const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n        const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n        let xOutsideBitmap;\n        let xTickBitmap;\n        let xText;\n        if (alignRight) {\n            // 2               1\n            //\n            //              6  5\n            //\n            // 3               4\n            xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n            xTickBitmap = xInsideBitmap - tickSizeBitmap;\n            xText = xInside - tickSize - paddingInner - horzBorder;\n        }\n        else {\n            // 1               2\n            //\n            // 6  5\n            //\n            // 4               3\n            xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n            xTickBitmap = xInsideBitmap + tickSizeBitmap;\n            xText = xInside + tickSize + paddingInner;\n        }\n        return {\n            _internal_alignRight: alignRight,\n            _internal_bitmap: {\n                _internal_yTop: yTopBitmap,\n                _internal_yMid: yMidBitmap,\n                _internal_yBottom: yBottomBitmap,\n                _internal_totalWidth: totalWidthBitmap,\n                _internal_totalHeight: totalHeightBitmap,\n                // TODO: it is better to have different horizontal and vertical radii\n                _internal_radius: 2 * horizontalPixelRatio,\n                _internal_horzBorder: horzBorderBitmap,\n                _internal_xOutside: xOutsideBitmap,\n                _internal_xInside: xInsideBitmap,\n                _internal_xTick: xTickBitmap,\n                _internal_tickHeight: tickHeightBitmap,\n                _internal_right: bitmapSize.width,\n            },\n            _internal_media: {\n                _internal_yTop: yTopBitmap / verticalPixelRatio,\n                _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n                _internal_xText: xText,\n                _internal_textMidCorrection: textMidCorrection,\n            },\n        };\n    }\n}\n\nclass PriceAxisView {\n    constructor(ctor) {\n        this._private__commonRendererData = {\n            _internal_coordinate: 0,\n            _internal_background: '#000',\n            _internal_additionalPaddingBottom: 0,\n            _internal_additionalPaddingTop: 0,\n        };\n        this._private__axisRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: true,\n            _internal_moveTextToInvisibleTick: false,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: false,\n            _internal_separatorVisible: false,\n        };\n        this._private__paneRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: false,\n            _internal_moveTextToInvisibleTick: true,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: true,\n            _internal_separatorVisible: true,\n        };\n        this._private__invalidated = true;\n        this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n    }\n    _internal_text() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_text;\n    }\n    _internal_coordinate() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__commonRendererData._internal_coordinate;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_height(rendererOptions, useSecondLine = false) {\n        return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n    }\n    _internal_getFixedCoordinate() {\n        return this._private__commonRendererData._internal_fixedCoordinate || 0;\n    }\n    _internal_setFixedCoordinate(value) {\n        this._private__commonRendererData._internal_fixedCoordinate = value;\n    }\n    _internal_isVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n    }\n    _internal_isAxisLabelVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible;\n    }\n    _internal_renderer(priceScale) {\n        this._private__updateRendererDataIfNeeded();\n        // force update tickVisible state from price scale options\n        // because we don't have and we can't have price axis in other methods\n        // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n        this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__axisRenderer;\n    }\n    _internal_paneRenderer() {\n        this._private__updateRendererDataIfNeeded();\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__paneRenderer;\n    }\n    _private__updateRendererDataIfNeeded() {\n        if (this._private__invalidated) {\n            this._private__axisRendererData._internal_tickVisible = true;\n            this._private__paneRendererData._internal_tickVisible = false;\n            this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n        }\n    }\n}\n\nclass CrosshairPriceAxisView extends PriceAxisView {\n    constructor(source, priceScale, valueProvider) {\n        super();\n        this._private__source = source;\n        this._private__priceScale = priceScale;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__source._internal_options().horzLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || (firstValue === null)) {\n            return;\n        }\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        commonRendererData._internal_background = colors._internal_background;\n        axisRendererData._internal_color = colors._internal_foreground;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        const value = this._private__valueProvider(this._private__priceScale);\n        commonRendererData._internal_coordinate = value._internal_coordinate;\n        axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n        axisRendererData._internal_visible = true;\n    }\n}\n\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n    constructor() {\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_draw(target, rendererOptions) {\n        if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textWidth = target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = rendererOptions._internal_font;\n            return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n        });\n        if (textWidth <= 0) {\n            return;\n        }\n        const horzMargin = rendererOptions._internal_paddingHorizontal;\n        const labelWidth = textWidth + 2 * horzMargin;\n        const labelWidthHalf = labelWidth / 2;\n        const timeScaleWidth = this._private__data._internal_width;\n        let coordinate = this._private__data._internal_coordinate;\n        let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (x1 < 0) {\n            coordinate = coordinate + Math.abs(0 - x1);\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        else if (x1 + labelWidth > timeScaleWidth) {\n            coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        const x2 = x1 + labelWidth;\n        const y1 = 0;\n        const y2 = Math.ceil(y1 +\n            rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingBottom);\n        target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n            const data = ensureNotNull(this._private__data);\n            ctx.fillStyle = data._internal_background;\n            const x1scaled = Math.round(x1 * horizontalPixelRatio);\n            const y1scaled = Math.round(y1 * verticalPixelRatio);\n            const x2scaled = Math.round(x2 * horizontalPixelRatio);\n            const y2scaled = Math.round(y2 * verticalPixelRatio);\n            const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n            ctx.beginPath();\n            ctx.moveTo(x1scaled, y1scaled);\n            ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n            ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n            ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n            ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n            ctx.lineTo(x2scaled, y1scaled);\n            ctx.fill();\n            if (data._internal_tickVisible) {\n                const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n                const tickTop = y1scaled;\n                const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n                ctx.fillStyle = data._internal_color;\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n            }\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const data = ensureNotNull(this._private__data);\n            const yText = y1 +\n                rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = data._internal_color;\n            const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n            ctx.translate(x1 + horzMargin, yText + textYCorrection);\n            ctx.fillText(data._internal_text, 0, 0);\n        });\n    }\n}\n\nclass CrosshairTimeAxisView {\n    constructor(crosshair, model, valueProvider) {\n        this._private__invalidated = true;\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_background: '#4c525e',\n            _internal_color: 'white',\n            _internal_text: '',\n            _internal_width: 0,\n            _internal_coordinate: NaN,\n            _internal_tickVisible: true,\n        };\n        this._private__crosshair = crosshair;\n        this._private__model = model;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        this._private__renderer._internal_setData(this._private__rendererData);\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const data = this._private__rendererData;\n        data._internal_visible = false;\n        if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__crosshair._internal_options().vertLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        data._internal_width = timeScale._internal_width();\n        const value = this._private__valueProvider();\n        if (value === null) {\n            return;\n        }\n        data._internal_coordinate = value._internal_coordinate;\n        const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n        data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n        data._internal_visible = true;\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        data._internal_background = colors._internal_background;\n        data._internal_color = colors._internal_foreground;\n        data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n    }\n}\n\nclass DataSource {\n    constructor() {\n        this._internal__priceScale = null;\n        this._private__zorder = 0;\n    }\n    _internal_zorder() {\n        return this._private__zorder;\n    }\n    _internal_setZorder(zorder) {\n        this._private__zorder = zorder;\n    }\n    _internal_priceScale() {\n        return this._internal__priceScale;\n    }\n    _internal_setPriceScale(priceScale) {\n        this._internal__priceScale = priceScale;\n    }\n    _internal_labelPaneViews(pane) {\n        return [];\n    }\n    _internal_timeAxisViews() {\n        return [];\n    }\n    _internal_visible() {\n        return true;\n    }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n    /**\n     * This mode allows crosshair to move freely on the chart.\n     */\n    CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n    /**\n     * This mode disables rendering of the crosshair.\n     */\n    CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__pane = null;\n        this._private__price = NaN;\n        this._private__index = 0;\n        this._private__visible = true;\n        this._private__priceAxisViews = new Map();\n        this._private__subscribed = false;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n        this._private__model = model;\n        this._private__options = options;\n        this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n        const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n            return (priceScale) => {\n                const coordinate = rawCoordinateProvider();\n                const rawPrice = rawPriceProvider();\n                if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n                    // price must be defined\n                    return { _internal_price: rawPrice, _internal_coordinate: coordinate };\n                }\n                else {\n                    // always convert from coordinate\n                    const firstValue = ensureNotNull(priceScale._internal_firstValue());\n                    const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n                    return { _internal_price: price, _internal_coordinate: coordinate };\n                }\n            };\n        };\n        const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n            return () => {\n                const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n                const coordinate = rawCoordinateProvider();\n                if (!time || !Number.isFinite(coordinate)) {\n                    return null;\n                }\n                return {\n                    _internal_time: time,\n                    _internal_coordinate: coordinate,\n                };\n            };\n        };\n        // for current position always return both price and coordinate\n        this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n        const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n        this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n        this._private__paneView = new CrosshairPaneView(this);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_saveOriginCoord(x, y) {\n        this._private__originX = x;\n        this._private__originY = y;\n    }\n    _internal_clearOriginCoord() {\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n    }\n    _internal_originCoordX() {\n        return this._private__originX;\n    }\n    _internal_originCoordY() {\n        return this._private__originY;\n    }\n    _internal_setPosition(index, price, pane) {\n        if (!this._private__subscribed) {\n            this._private__subscribed = true;\n        }\n        this._private__visible = true;\n        this._private__tryToUpdateViews(index, price, pane);\n    }\n    _internal_appliedIndex() {\n        return this._private__index;\n    }\n    _internal_appliedX() {\n        return this._private__x;\n    }\n    _internal_appliedY() {\n        return this._private__y;\n    }\n    _internal_visible() {\n        return this._private__visible;\n    }\n    _internal_clearPosition() {\n        this._private__visible = false;\n        this._private__setIndexToLastSeriesBarIndex();\n        this._private__price = NaN;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__pane = null;\n        this._internal_clearOriginCoord();\n    }\n    _internal_paneViews(pane) {\n        return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n    }\n    _internal_horzLineVisible(pane) {\n        return pane === this._private__pane && this._private__options.horzLine.visible;\n    }\n    _internal_vertLineVisible() {\n        return this._private__options.vertLine.visible;\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (!this._private__visible || this._private__pane !== pane) {\n            this._private__priceAxisViews.clear();\n        }\n        const views = [];\n        if (this._private__pane === pane) {\n            views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n        }\n        return views;\n    }\n    _internal_timeAxisViews() {\n        return this._private__visible ? [this._private__timeAxisView] : [];\n    }\n    _internal_pane() {\n        return this._private__pane;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n        this._private__priceAxisViews.forEach((value) => value._internal_update());\n        this._private__timeAxisView._internal_update();\n        this._private__markersPaneView._internal_update();\n    }\n    _private__priceScaleByPane(pane) {\n        if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n            return pane._internal_defaultPriceScale();\n        }\n        return null;\n    }\n    _private__tryToUpdateViews(index, price, pane) {\n        if (this._private__tryToUpdateData(index, price, pane)) {\n            this._internal_updateAllViews();\n        }\n    }\n    _private__tryToUpdateData(newIndex, newPrice, newPane) {\n        const oldX = this._private__x;\n        const oldY = this._private__y;\n        const oldPrice = this._private__price;\n        const oldIndex = this._private__index;\n        const oldPane = this._private__pane;\n        const priceScale = this._private__priceScaleByPane(newPane);\n        this._private__index = newIndex;\n        this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n        this._private__pane = newPane;\n        const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n        if (priceScale !== null && firstValue !== null) {\n            this._private__price = newPrice;\n            this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n        }\n        else {\n            this._private__price = NaN;\n            this._private__y = NaN;\n        }\n        return (oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index ||\n            oldPrice !== this._private__price || oldPane !== this._private__pane);\n    }\n    _private__setIndexToLastSeriesBarIndex() {\n        const lastIndexes = this._private__model._internal_serieses()\n            .map((s) => s._internal_bars()._internal_lastIndex())\n            .filter(notNull);\n        const lastBarIndex = (lastIndexes.length === 0) ? null : Math.max(...lastIndexes);\n        this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n    }\n    _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n        let view = map.get(priceScale);\n        if (view === undefined) {\n            view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n            map.set(priceScale, view);\n        }\n        return view;\n    }\n}\n\nfunction isDefaultPriceScale(priceScaleId) {\n    return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n    if (beforeValue === undefined) {\n        return newValue;\n    }\n    const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n    const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n    return { _internal_level: level, _internal_autoScale: autoScale };\n}\nclass InvalidateMask {\n    constructor(globalLevel) {\n        this._private__invalidatedPanes = new Map();\n        this._private__timeScaleInvalidations = [];\n        this._private__globalLevel = globalLevel;\n    }\n    _internal_invalidatePane(paneIndex, invalidation) {\n        const prevValue = this._private__invalidatedPanes.get(paneIndex);\n        const newValue = mergePaneInvalidation(prevValue, invalidation);\n        this._private__invalidatedPanes.set(paneIndex, newValue);\n    }\n    _internal_fullInvalidation() {\n        return this._private__globalLevel;\n    }\n    _internal_invalidateForPane(paneIndex) {\n        const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n        if (paneInvalidation === undefined) {\n            return {\n                _internal_level: this._private__globalLevel,\n            };\n        }\n        return {\n            _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n            _internal_autoScale: paneInvalidation._internal_autoScale,\n        };\n    }\n    _internal_setFitContent() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 0 /* TimeScaleInvalidationType.FitContent */ }];\n    }\n    _internal_applyRange(range) {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */, _internal_value: range }];\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 5 /* TimeScaleInvalidationType.Animation */, _internal_value: animation });\n    }\n    _internal_stopTimeScaleAnimation() {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */ });\n    }\n    _internal_resetTimeScale() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 4 /* TimeScaleInvalidationType.Reset */ }];\n    }\n    _internal_setBarSpacing(barSpacing) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */, _internal_value: barSpacing });\n    }\n    _internal_setRightOffset(offset) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */, _internal_value: offset });\n    }\n    _internal_timeScaleInvalidations() {\n        return this._private__timeScaleInvalidations;\n    }\n    _internal_merge(other) {\n        for (const tsInvalidation of other._private__timeScaleInvalidations) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation);\n        }\n        this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n        other._private__invalidatedPanes.forEach((invalidation, index) => {\n            this._internal_invalidatePane(index, invalidation);\n        });\n    }\n    static _internal_light() {\n        return new InvalidateMask(2 /* InvalidationLevel.Light */);\n    }\n    static _internal_full() {\n        return new InvalidateMask(3 /* InvalidationLevel.Full */);\n    }\n    _private__applyTimeScaleInvalidation(invalidation) {\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                this._internal_setFitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                this._internal_applyRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                this._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                this._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                this._internal_resetTimeScale();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                this._internal_setTimeScaleAnimation(invalidation._internal_value);\n                break;\n            case 6 /* TimeScaleInvalidationType.StopAnimation */:\n                this._private__removeTimeScaleAnimation();\n        }\n    }\n    _private__removeTimeScaleAnimation() {\n        const index = this._private__timeScaleInvalidations.findIndex((inv) => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n        if (index !== -1) {\n            this._private__timeScaleInvalidations.splice(index, 1);\n        }\n    }\n}\n\nconst formatterOptions = {\n    _internal_decimalSign: '.',\n    _internal_decimalSignFractional: '\\'',\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n    if (!isNumber(value)) {\n        return 'n/a';\n    }\n    if (!isInteger(length)) {\n        throw new TypeError('invalid length');\n    }\n    if (length < 0 || length > 16) {\n        throw new TypeError('invalid length');\n    }\n    if (length === 0) {\n        return value.toString();\n    }\n    const dummyString = '0000000000000000';\n    return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n    constructor(priceScale, minMove) {\n        if (!minMove) {\n            minMove = 1;\n        }\n        if (!isNumber(priceScale) || !isInteger(priceScale)) {\n            priceScale = 100;\n        }\n        if (priceScale < 0) {\n            throw new TypeError('invalid base');\n        }\n        this._private__priceScale = priceScale;\n        this._private__minMove = minMove;\n        this._private__calculateDecimal();\n    }\n    format(price) {\n        // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n        // we should use it because it has the same width as plus sign +\n        const sign = price < 0 ? '\\u2212' : '';\n        price = Math.abs(price);\n        return sign + this._private__formatAsDecimal(price);\n    }\n    _private__calculateDecimal() {\n        // check if this._base is power of 10\n        // for double fractional _fractionalLength if for the main fractional only\n        this._internal__fractionalLength = 0;\n        if (this._private__priceScale > 0 && this._private__minMove > 0) {\n            let base = this._private__priceScale;\n            while (base > 1) {\n                base /= 10;\n                this._internal__fractionalLength++;\n            }\n        }\n    }\n    _private__formatAsDecimal(price) {\n        const base = this._private__priceScale / this._private__minMove;\n        let intPart = Math.floor(price);\n        let fracString = '';\n        const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n        if (base > 1) {\n            let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n            if (fracPart >= base) {\n                fracPart -= base;\n                intPart += 1;\n            }\n            fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n        }\n        else {\n            // should round int part to min move\n            intPart = Math.round(intPart * base) / base;\n            // if min move > 1, fractional part is always = 0\n            if (fracLength > 0) {\n                fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n            }\n        }\n        return intPart.toFixed(0) + fracString;\n    }\n}\n\nclass PercentageFormatter extends PriceFormatter {\n    constructor(priceScale = 100) {\n        super(priceScale);\n    }\n    format(price) {\n        return `${super.format(price)}%`;\n    }\n}\n\nclass VolumeFormatter {\n    constructor(precision) {\n        this._private__precision = precision;\n    }\n    format(vol) {\n        let sign = '';\n        if (vol < 0) {\n            sign = '-';\n            vol = -vol;\n        }\n        if (vol < 995) {\n            return sign + this._private__formatNumber(vol);\n        }\n        else if (vol < 999995) {\n            return sign + this._private__formatNumber(vol / 1000) + 'K';\n        }\n        else if (vol < 999999995) {\n            vol = 1000 * Math.round(vol / 1000);\n            return sign + this._private__formatNumber(vol / 1000000) + 'M';\n        }\n        else {\n            vol = 1000000 * Math.round(vol / 1000000);\n            return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n        }\n    }\n    _private__formatNumber(value) {\n        let res;\n        const priceScale = Math.pow(10, this._private__precision);\n        value = Math.round(value * priceScale) / priceScale;\n        if (value >= 1e-15 && value < 1) {\n            res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n        }\n        else {\n            res = String(value);\n        }\n        return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n    }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n    if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n        return;\n    }\n    const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n    const firstItem = items[visibleRange.from];\n    let currentStyle = styleGetter(renderingScope, firstItem);\n    let currentStyleFirstItem = firstItem;\n    if (visibleRange.to - visibleRange.from < 2) {\n        const halfBarWidth = barWidth / 2;\n        ctx.beginPath();\n        const item1 = { _internal_x: firstItem._internal_x - halfBarWidth, _internal_y: firstItem._internal_y };\n        const item2 = { _internal_x: firstItem._internal_x + halfBarWidth, _internal_y: firstItem._internal_y };\n        ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n        ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n        finishStyledArea(renderingScope, currentStyle, item1, item2);\n    }\n    else {\n        const changeStyle = (newStyle, currentItem) => {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n            ctx.beginPath();\n            currentStyle = newStyle;\n            currentStyleFirstItem = currentItem;\n        };\n        let currentItem = currentStyleFirstItem;\n        ctx.beginPath();\n        ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n        for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n            currentItem = items[i];\n            const itemStyle = styleGetter(renderingScope, currentItem);\n            switch (lineType) {\n                case 0 /* LineType.Simple */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 1 /* LineType.WithSteps */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    if (itemStyle !== currentStyle) {\n                        changeStyle(itemStyle, currentItem);\n                        ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    }\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 2 /* LineType.Curved */: {\n                    const [cp1, cp2] = getControlPoints(items, i - 1, i);\n                    ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                }\n            }\n            if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n                changeStyle(itemStyle, currentItem);\n                ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            }\n        }\n        if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n        }\n    }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n    return { _internal_x: p1._internal_x - p2._internal_x, _internal_y: p1._internal_y - p2._internal_y };\n}\nfunction add(p1, p2) {\n    return { _internal_x: p1._internal_x + p2._internal_x, _internal_y: p1._internal_y + p2._internal_y };\n}\nfunction divide(p1, n) {\n    return { _internal_x: p1._internal_x / n, _internal_y: p1._internal_y / n };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n    const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n    const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n    const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n    const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n    return [cp1, cp2];\n}\n\nfunction finishStyledArea$1(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n    const { context, horizontalPixelRatio, verticalPixelRatio } = scope;\n    context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.closePath();\n    context.fillStyle = style;\n    context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        var _a;\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_lineType: lineType } = this._internal__data;\n        const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'round';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        // walk lines with width=1 to have more accurate gradient's filling\n        ctx.lineWidth = 1;\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n    }\n}\n\nfunction clamp(value, minVal, maxVal) {\n    return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n    if (value < 0) {\n        return false;\n    }\n    for (let current = value; current > 1; current /= 10) {\n        if ((current % 10) !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n    return (x2 - x1) <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n    return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n    if (arr.length < 1) {\n        throw Error('array is empty');\n    }\n    let minVal = arr[0];\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < minVal) {\n            minVal = arr[i];\n        }\n    }\n    return minVal;\n}\nfunction ceiledEven(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 !== 0) ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 === 0) ? ceiled - 1 : ceiled;\n}\n\nclass GradientStyleCache {\n    _internal_get(scope, params) {\n        const cachedParams = this._private__params;\n        const { _internal_topColor1: topColor1, _internal_topColor2: topColor2, _internal_bottomColor1: bottomColor1, _internal_bottomColor2: bottomColor2, _internal_bottom: bottom, _internal_baseLevelCoordinate: baseLevelCoordinate } = params;\n        if (this._private__cachedValue === undefined ||\n            cachedParams === undefined ||\n            cachedParams._internal_topColor1 !== topColor1 ||\n            cachedParams._internal_topColor2 !== topColor2 ||\n            cachedParams._internal_bottomColor1 !== bottomColor1 ||\n            cachedParams._internal_bottomColor2 !== bottomColor2 ||\n            cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate ||\n            cachedParams._internal_bottom !== bottom) {\n            const gradient = scope.context.createLinearGradient(0, 0, 0, bottom);\n            gradient.addColorStop(0, topColor1);\n            if (baseLevelCoordinate != null) {\n                const baselinePercent = clamp(baseLevelCoordinate * scope.verticalPixelRatio / bottom, 0, 1);\n                gradient.addColorStop(baselinePercent, topColor2);\n                gradient.addColorStop(baselinePercent, bottomColor1);\n            }\n            gradient.addColorStop(1, bottomColor2);\n            this._private__cachedValue = gradient;\n            this._private__params = params;\n        }\n        return this._private__cachedValue;\n    }\n}\n\nclass PaneRendererArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topColor,\n            _internal_topColor2: '',\n            _internal_bottomColor1: '',\n            _internal_bottomColor2: item._internal_bottomColor,\n            _internal_bottom: renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n    const { horizontalPixelRatio, verticalPixelRatio, context } = renderingScope;\n    let prevStyle = null;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    const radius = pointMarkersRadius * verticalPixelRatio + correction;\n    for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = items[i];\n        if (point) {\n            const style = styleGetter(renderingScope, point);\n            if (style !== prevStyle) {\n                context.beginPath();\n                if (prevStyle !== null) {\n                    context.fill();\n                }\n                context.fillStyle = style;\n                prevStyle = style;\n            }\n            const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n            const centerY = point._internal_y * verticalPixelRatio;\n            context.moveTo(centerX, centerY);\n            context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        }\n    }\n    context.fill();\n}\n\nfunction finishStyledArea(scope, style) {\n    const ctx = scope.context;\n    ctx.strokeStyle = style;\n    ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineType: lineType, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_pointMarkersRadius: pointMarkersRadius } = this._internal__data;\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n        setLineStyle(ctx, lineStyle);\n        ctx.lineJoin = 'round';\n        const styleGetter = this._internal__strokeStyle.bind(this);\n        if (lineType !== undefined) {\n            walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea);\n        }\n        if (pointMarkersRadius) {\n            drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n        }\n    }\n}\n\nclass PaneRendererLine extends PaneRendererLineBase {\n    _internal__strokeStyle(renderingScope, item) {\n        return item._internal_lineColor;\n    }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (compare(arr[mid], value) === lower) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\n\nfunction lowerBoundItemsCompare(item, time) {\n    return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n    return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n    const firstBar = range._internal_left();\n    const lastBar = range._internal_right();\n    const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n    const to = upperBound(items, lastBar, upperBoundItemsCompare);\n    if (!extendedRange) {\n        return { from, to };\n    }\n    let extendedFrom = from;\n    let extendedTo = to;\n    if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n        extendedFrom = from - 1;\n    }\n    if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n        extendedTo = to + 1;\n    }\n    return { from: extendedFrom, to: extendedTo };\n}\n\nclass SeriesPaneViewBase {\n    constructor(series, model, extendedVisibleRange) {\n        this._internal__invalidated = true;\n        this._internal__dataInvalidated = true;\n        this._internal__optionsInvalidated = true;\n        this._internal__items = [];\n        this._internal__itemsVisibleRange = null;\n        this._internal__series = series;\n        this._internal__model = model;\n        this._private__extendedVisibleRange = extendedVisibleRange;\n    }\n    _internal_update(updateType) {\n        this._internal__invalidated = true;\n        if (updateType === 'data') {\n            this._internal__dataInvalidated = true;\n        }\n        if (updateType === 'options') {\n            this._internal__optionsInvalidated = true;\n        }\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        this._private__makeValid();\n        return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n    }\n    _internal__updateOptions() {\n        this._internal__items = this._internal__items.map((item) => (Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time))));\n    }\n    _internal__clearVisibleRange() {\n        this._internal__itemsVisibleRange = null;\n    }\n    _private__makeValid() {\n        if (this._internal__dataInvalidated) {\n            this._internal__fillRawPoints();\n            this._internal__dataInvalidated = false;\n        }\n        if (this._internal__optionsInvalidated) {\n            this._internal__updateOptions();\n            this._internal__optionsInvalidated = false;\n        }\n        if (this._internal__invalidated) {\n            this._private__makeValidImpl();\n            this._internal__invalidated = false;\n        }\n    }\n    _private__makeValidImpl() {\n        const priceScale = this._internal__series._internal_priceScale();\n        const timeScale = this._internal__model._internal_timeScale();\n        this._internal__clearVisibleRange();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return;\n        }\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        if (this._internal__series._internal_bars()._internal_size() === 0) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n        this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n        this._internal__prepareRendererData();\n    }\n}\n\nclass LinePaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, true);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createRawItemBase(time, price) {\n        return {\n            _internal_time: time,\n            _internal_price: price,\n            _internal_x: NaN,\n            _internal_y: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => {\n            const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n            return this._internal__createRawItem(row._internal_index, value, colorer);\n        });\n    }\n}\n\nclass SeriesAreaPaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__areaRenderer = new PaneRendererArea();\n        this._private__lineRenderer = new PaneRendererLine();\n        this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        this._private__areaRenderer._internal_setData({\n            _internal_lineType: options.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_baseLevelCoordinate: null,\n            _internal_invertFilledArea: options.invertFilledArea,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n        this._private__lineRenderer._internal_setData({\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n        });\n    }\n}\n\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n    return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n    const barSpacingSpecialCaseFrom = 2.5;\n    const barSpacingSpecialCaseTo = 4;\n    const barSpacingSpecialCaseCoeff = 3;\n    if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n        return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n    }\n    // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n    const barSpacingReducingCoeff = 0.2;\n    const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n    const res = Math.floor(barSpacing * coeff * pixelRatio);\n    const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n    const optimal = Math.min(res, scaledBarSpacing);\n    return Math.max(Math.floor(pixelRatio), optimal);\n}\n\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__barWidth = 0;\n        this._private__barLineWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    // eslint-disable-next-line complexity\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make bars' width odd\n        // if this value is even, we have to make bars' width even\n        // in order of keeping crosshair-over-bar drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n            if ((lineWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        // if scale is compressed, bar could become less than 1 CSS pixel\n        this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n        let prevColor = null;\n        const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n            const bar = this._private__data._internal_bars[i];\n            if (prevColor !== bar._internal_barColor) {\n                ctx.fillStyle = bar._internal_barColor;\n                prevColor = bar._internal_barColor;\n            }\n            const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n            const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n            const bodyLeft = bodyCenter - bodyWidthHalf;\n            const bodyWidth = this._private__barLineWidth;\n            const bodyRight = bodyLeft + bodyWidth - 1;\n            const high = Math.min(bar._internal_highY, bar._internal_lowY);\n            const low = Math.max(bar._internal_highY, bar._internal_lowY);\n            const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n            const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n            const bodyHeight = Math.max((bodyBottom - bodyTop), this._private__barLineWidth);\n            ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n            const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n            if (drawOpenClose) {\n                if (this._private__data._internal_openVisible) {\n                    const openLeft = bodyCenter - sideWidth;\n                    let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n                    let openBottom = openTop + bodyWidth - 1;\n                    if (openBottom > bodyTop + bodyHeight - 1) {\n                        openBottom = bodyTop + bodyHeight - 1;\n                        openTop = openBottom - bodyWidth + 1;\n                    }\n                    ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n                }\n                const closeRight = bodyCenter + sideWidth;\n                let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n                let closeBottom = closeTop + bodyWidth - 1;\n                if (closeBottom > bodyTop + bodyHeight - 1) {\n                    closeBottom = bodyTop + bodyHeight - 1;\n                    closeTop = closeBottom - bodyWidth + 1;\n                }\n                ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n            }\n        }\n    }\n    _private__calcBarWidth(pixelRatio) {\n        const limit = Math.floor(pixelRatio);\n        return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n    }\n}\n\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, false);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createDefaultItem(time, bar, colorer) {\n        return {\n            _internal_time: time,\n            _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n            _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n            _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n            _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_x: NaN,\n            _internal_openY: NaN,\n            _internal_highY: NaN,\n            _internal_lowY: NaN,\n            _internal_closeY: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => this._internal__createRawItem(row._internal_index, row, colorer));\n    }\n}\n\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererBars();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const barStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_openVisible: barStyleProps.openVisible,\n            _internal_thinBars: barStyleProps.thinBars,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topFillColor1,\n            _internal_topColor2: item._internal_topFillColor2,\n            _internal_bottomColor1: item._internal_bottomFillColor1,\n            _internal_bottomColor2: item._internal_bottomFillColor2,\n            _internal_bottom: renderingScope.bitmapSize.height,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n        });\n    }\n}\n\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n    constructor() {\n        super(...arguments);\n        this._private__strokeCache = new GradientStyleCache();\n    }\n    _internal__strokeStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__strokeCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topLineColor,\n            _internal_topColor2: item._internal_topLineColor,\n            _internal_bottomColor1: item._internal_bottomLineColor,\n            _internal_bottomColor2: item._internal_bottomLineColor,\n            _internal_bottom: renderingScope.bitmapSize.height,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n        });\n    }\n}\n\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n        this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n        this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        const options = this._internal__series._internal_options();\n        const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n        const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n        this._private__baselineAreaRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_invertFilledArea: false,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n        this._private__baselineLineRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n    }\n}\n\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        // scaled with pixelRatio\n        this._private__barWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        const { horizontalPixelRatio } = renderingScope;\n        // now we know pixelRatio and we could calculate barWidth effectively\n        this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make candlesticks' width odd\n        // if this value is even, we have to make candlesticks' width even\n        // in order of keeping crosshair-over-candlesticks drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const wickWidth = Math.floor(horizontalPixelRatio);\n            if ((wickWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        const bars = this._private__data._internal_bars;\n        if (this._private__data._internal_wickVisible) {\n            this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        if (this._private__data._internal_borderVisible) {\n            this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n            this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n    }\n    _private__drawWicks(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevWickColor = '';\n        let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n        wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n        const wickOffset = Math.floor(wickWidth * 0.5);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barWickColor !== prevWickColor) {\n                ctx.fillStyle = bar._internal_barWickColor;\n                prevWickColor = bar._internal_barWickColor;\n            }\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const high = Math.round(bar._internal_highY * verticalPixelRatio);\n            const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n            const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n            let left = scaledX - wickOffset;\n            const right = left + wickWidth - 1;\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            const width = right - left + 1;\n            ctx.fillRect(left, high, width, top - high);\n            ctx.fillRect(left, bottom + 1, width, low - bottom);\n            prevEdge = right;\n        }\n    }\n    _private__calculateBorderWidth(pixelRatio) {\n        let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n        if (this._private__barWidth <= 2 * borderWidth) {\n            borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n        }\n        const res = Math.max(Math.floor(pixelRatio), borderWidth);\n        if (this._private__barWidth <= res * 2) {\n            // do not draw bodies, restore original value\n            return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n        }\n        return res;\n    }\n    _private__drawBorder(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBorderColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barBorderColor !== prevBorderColor) {\n                ctx.fillStyle = bar._internal_barBorderColor;\n                prevBorderColor = bar._internal_barBorderColor;\n            }\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            // this is important to calculate right before patching left\n            const right = left + this._private__barWidth - 1;\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n                fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n            }\n            else {\n                const width = right - left + 1;\n                ctx.fillRect(left, top, width, bottom - top + 1);\n            }\n            prevEdge = right;\n        }\n    }\n    _private__drawCandles(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBarColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            let right = left + this._private__barWidth - 1;\n            if (bar._internal_barColor !== prevBarColor) {\n                const barColor = bar._internal_barColor;\n                ctx.fillStyle = barColor;\n                prevBarColor = barColor;\n            }\n            if (this._private__data._internal_borderVisible) {\n                left += borderWidth;\n                top += borderWidth;\n                right -= borderWidth;\n                bottom -= borderWidth;\n            }\n            if (top > bottom) {\n                continue;\n            }\n            ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n        }\n    }\n}\n\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererCandlesticks();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const candlestickStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_wickVisible: candlestickStyleProps.wickVisible,\n            _internal_borderVisible: candlestickStyleProps.borderVisible,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nclass CustomSeriesPaneRendererWrapper {\n    constructor(sourceRenderer, priceScale) {\n        this._private__sourceRenderer = sourceRenderer;\n        this._private__priceScale = priceScale;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n    }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n    constructor(series, model, paneView) {\n        super(series, model, false);\n        this._private__paneView = paneView;\n        this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), (price) => {\n            const firstValue = series._internal_firstValue();\n            if (firstValue === null) {\n                return null;\n            }\n            return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n        });\n    }\n    _internal_priceValueBuilder(plotRow) {\n        return this._private__paneView.priceValueBuilder(plotRow);\n    }\n    _internal_isWhitespace(data) {\n        return this._private__paneView.isWhitespace(data);\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows()\n            .map((row) => {\n            return Object.assign(Object.assign({ _internal_time: row._internal_index, _internal_x: NaN }, colorer._internal_barStyle(row._internal_index)), { _internal_originalData: row._internal_data });\n        });\n    }\n    _internal__convertToCoordinates(priceScale, timeScale) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__prepareRendererData() {\n        this._private__paneView.update({\n            bars: this._internal__items.map(unwrapItemData),\n            barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            visibleRange: this._internal__itemsVisibleRange,\n        }, this._internal__series._internal_options());\n    }\n}\nfunction unwrapItemData(item) {\n    return {\n        x: item._internal_x,\n        time: item._internal_time,\n        originalData: item._internal_originalData,\n        barColor: item._internal_barColor,\n    };\n}\n\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__precalculatedCache = [];\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n        this._private__precalculatedCache = [];\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        if (!this._private__precalculatedCache.length) {\n            this._private__fillPrecalculatedCache(horizontalPixelRatio);\n        }\n        const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n        const histogramBase = Math.round((this._private__data._internal_histogramBase) * verticalPixelRatio);\n        const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n        const bottomHistogramBase = topHistogramBase + tickWidth;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const y = Math.round(item._internal_y * verticalPixelRatio);\n            ctx.fillStyle = item._internal_barColor;\n            let top;\n            let bottom;\n            if (y <= topHistogramBase) {\n                top = y;\n                bottom = bottomHistogramBase;\n            }\n            else {\n                top = topHistogramBase;\n                bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n            }\n            ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__fillPrecalculatedCache(pixelRatio) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            this._private__precalculatedCache = [];\n            return;\n        }\n        const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n        const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n        this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            // force cast to avoid ensureDefined call\n            const x = Math.round(item._internal_x * pixelRatio);\n            let left;\n            let right;\n            if (columnWidth % 2) {\n                const halfWidth = (columnWidth - 1) / 2;\n                left = x - halfWidth;\n                right = x + halfWidth;\n            }\n            else {\n                // shift pixel to left\n                const halfWidth = columnWidth / 2;\n                left = x - halfWidth;\n                right = x + halfWidth - 1;\n            }\n            this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n                _internal_left: left,\n                _internal_right: right,\n                _internal_roundedCenter: x,\n                _internal_center: (item._internal_x * pixelRatio),\n                _internal_time: item._internal_time,\n            };\n        }\n        // correct positions\n        for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n            if (current._internal_time !== prev._internal_time + 1) {\n                continue;\n            }\n            if (current._internal_left - prev._internal_right !== (spacing + 1)) {\n                // have to align\n                if (prev._internal_roundedCenter > prev._internal_center) {\n                    // prev wasshifted to left, so add pixel to right\n                    prev._internal_right = current._internal_left - spacing - 1;\n                }\n                else {\n                    // extend current to left\n                    current._internal_left = prev._internal_right + spacing + 1;\n                }\n            }\n        }\n        let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            // this could happen if barspacing < 1\n            if (current._internal_right < current._internal_left) {\n                current._internal_right = current._internal_left;\n            }\n            const width = current._internal_right - current._internal_left + 1;\n            minWidth = Math.min(width, minWidth);\n        }\n        if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n            for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n                const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n                const width = current._internal_right - current._internal_left + 1;\n                if (width > minWidth) {\n                    if (current._internal_roundedCenter > current._internal_center) {\n                        current._internal_right -= 1;\n                    }\n                    else {\n                        current._internal_left += 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererHistogram();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nclass SeriesLinePaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererLine();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_lineWidth: options.lineWidth,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n    constructor(size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n        this._private__cache = new Map();\n        this._private__maxSize = size;\n    }\n    _internal_reset() {\n        this._private__actualSize = 0;\n        this._private__cache.clear();\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n    }\n    _internal_measureText(ctx, text, optimizationReplacementRe) {\n        return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n    }\n    _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n        const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n        // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n        return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n    }\n    _private__getMetrics(ctx, text, optimizationReplacementRe) {\n        const re = optimizationReplacementRe || defaultReplacementRe;\n        const cacheString = String(text).replace(re, '0');\n        if (this._private__cache.has(cacheString)) {\n            return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n            delete this._private__tick2Labels[this._private__oldestTick];\n            this._private__cache.delete(oldestValue);\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        ctx.save();\n        ctx.textBaseline = 'middle';\n        const metrics = ctx.measureText(cacheString);\n        ctx.restore();\n        if (metrics.width === 0 && !!text.length) {\n            // measureText can return 0 in FF depending on a canvas size, don't cache it\n            return metrics;\n        }\n        this._private__cache.set(cacheString, { _internal_metrics: metrics, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels[this._private__usageTick] = cacheString;\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return metrics;\n    }\n}\n\nclass PanePriceAxisViewRenderer {\n    constructor(textWidthCache) {\n        this._private__priceAxisViewRenderer = null;\n        this._private__rendererOptions = null;\n        this._private__align = 'right';\n        this._private__textWidthCache = textWidthCache;\n    }\n    _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n        this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n        this._private__rendererOptions = rendererOptions;\n        this._private__align = align;\n    }\n    _internal_draw(target) {\n        if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n            return;\n        }\n        this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n    }\n}\nclass PanePriceAxisView {\n    constructor(priceAxisView, dataSource, chartModel) {\n        this._private__priceAxisView = priceAxisView;\n        this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n        this._private__dataSource = dataSource;\n        this._private__chartModel = chartModel;\n        this._private__fontSize = -1;\n        this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n    }\n    _internal_renderer() {\n        const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n        if (pane === null) {\n            return null;\n        }\n        // this price scale will be used to find label placement only (left, right, none)\n        const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n        if (priceScale === null) {\n            return null;\n        }\n        const position = pane._internal_priceScalePosition(priceScale);\n        if (position === 'overlay') {\n            return null;\n        }\n        const options = this._private__chartModel._internal_priceAxisRendererOptions();\n        if (options._internal_fontSize !== this._private__fontSize) {\n            this._private__fontSize = options._internal_fontSize;\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n        return this._private__renderer;\n    }\n}\n\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_hitTest(x, y) {\n        var _a;\n        if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n            return null;\n        }\n        const { _internal_y: itemY, _internal_lineWidth: lineWidth, _internal_externalId: externalId } = this._private__data;\n        // add a fixed area threshold around line (Y + width) for hit test\n        if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n            return {\n                _internal_hitTestData: this._private__data,\n                _internal_externalId: externalId,\n            };\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        if (this._private__data._internal_visible === false) {\n            return;\n        }\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        if (y < 0 || y > bitmapSize.height) {\n            return;\n        }\n        ctx.lineCap = 'butt';\n        ctx.strokeStyle = this._private__data._internal_color;\n        ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n        setLineStyle(ctx, this._private__data._internal_lineStyle);\n        drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n}\n\nclass SeriesHorizontalLinePaneView {\n    constructor(series) {\n        this._internal__lineRendererData = {\n            _internal_y: 0,\n            _internal_color: 'rgba(0, 0, 0, 0)',\n            _internal_lineWidth: 1,\n            _internal_lineStyle: 0 /* LineStyle.Solid */,\n            _internal_visible: false,\n        };\n        this._internal__lineRenderer = new HorizontalLineRenderer();\n        this._private__invalidated = true;\n        this._internal__series = series;\n        this._internal__model = series._internal_model();\n        this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._internal__lineRenderer;\n    }\n}\n\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        this._internal__lineRendererData._internal_visible = false;\n        const priceScale = this._internal__series._internal_priceScale();\n        const mode = priceScale._internal_mode()._internal_mode;\n        if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n            return;\n        }\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__lineRendererData._internal_visible = true;\n        this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n        this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n        this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n        this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n    }\n}\n\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_data() {\n        return this._private__data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        const data = this._private__data;\n        if (data === null) {\n            return;\n        }\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = data._internal_center.y * verticalPixelRatio;\n        ctx.fillStyle = data._internal_seriesLineColor;\n        ctx.beginPath();\n        // TODO: it is better to have different horizontal and vertical radii\n        const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n        ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.fillStyle = data._internal_fillColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = tickWidth;\n        ctx.strokeStyle = data._internal_strokeColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n    }\n}\n\nconst animationStagesData = [\n    {\n        _internal_start: 0,\n        _internal_end: 0.25 /* Constants.Stage1Period */,\n        _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n        _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n        _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n        _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n        _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */,\n    },\n];\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n    const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n    return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n    return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n    const globalStage = (durationSinceStart % 2600 /* Constants.AnimationPeriod */) / 2600 /* Constants.AnimationPeriod */;\n    let currentStageData;\n    for (const stageData of animationStagesData) {\n        if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n            currentStageData = stageData;\n            break;\n        }\n    }\n    assert(currentStageData !== undefined, 'Last price animation internal logic error');\n    const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n    return {\n        _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n        _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n        _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius),\n    };\n}\nclass SeriesLastPriceAnimationPaneView {\n    constructor(series) {\n        this._private__renderer = new SeriesLastPriceAnimationRenderer();\n        this._private__invalidated = true;\n        this._private__stageInvalidated = true;\n        this._private__startTime = performance.now();\n        this._private__endTime = this._private__startTime - 1;\n        this._private__series = series;\n    }\n    _internal_onDataCleared() {\n        this._private__endTime = this._private__startTime - 1;\n        this._internal_update();\n    }\n    _internal_onNewRealtimeDataReceived() {\n        this._internal_update();\n        if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n            const now = performance.now();\n            const timeToAnimationEnd = this._private__endTime - now;\n            if (timeToAnimationEnd > 0) {\n                if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n                    this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n                }\n                return;\n            }\n            this._private__startTime = now;\n            this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n        }\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_invalidateStage() {\n        this._private__stageInvalidated = true;\n    }\n    _internal_visible() {\n        // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n        return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n    }\n    _internal_animationActive() {\n        switch (this._private__series._internal_options().lastPriceAnimation) {\n            case 0 /* LastPriceAnimationMode.Disabled */:\n                return false;\n            case 1 /* LastPriceAnimationMode.Continuous */:\n                return true;\n            case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n                return performance.now() <= this._private__endTime;\n        }\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n            this._private__stageInvalidated = false;\n        }\n        else if (this._private__stageInvalidated) {\n            this._private__updateRendererDataStage();\n            this._private__stageInvalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        this._private__renderer._internal_setData(null);\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const visibleRange = timeScale._internal_visibleStrictRange();\n        const firstValue = this._private__series._internal_firstValue();\n        if (visibleRange === null || firstValue === null) {\n            return;\n        }\n        const lastValue = this._private__series._internal_lastValueData(true);\n        if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n            return;\n        }\n        const lastValuePoint = {\n            x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n            y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value),\n        };\n        const seriesLineColor = lastValue._internal_color;\n        const seriesLineWidth = this._private__series._internal_options().lineWidth;\n        const data = animationData(this._private__duration(), seriesLineColor);\n        this._private__renderer._internal_setData({\n            _internal_seriesLineColor: seriesLineColor,\n            _internal_seriesLineWidth: seriesLineWidth,\n            _internal_fillColor: data._internal_fillColor,\n            _internal_strokeColor: data._internal_strokeColor,\n            _internal_radius: data._internal_radius,\n            _internal_center: lastValuePoint,\n        });\n    }\n    _private__updateRendererDataStage() {\n        const rendererData = this._private__renderer._internal_data();\n        if (rendererData !== null) {\n            const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n            rendererData._internal_fillColor = data._internal_fillColor;\n            rendererData._internal_strokeColor = data._internal_strokeColor;\n            rendererData._internal_radius = data._internal_radius;\n        }\n    }\n    _private__duration() {\n        return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n    }\n}\n\nfunction size(barSpacing, coeff) {\n    const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n    return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n    switch (shape) {\n        case 'arrowDown':\n        case 'arrowUp':\n            return size(originalSize, 1);\n        case 'circle':\n            return size(originalSize, 0.8);\n        case 'square':\n            return size(originalSize, 0.7);\n    }\n}\nfunction calculateShapeHeight(barSpacing) {\n    return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n    return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction calculateAdjustedMargin(margin, hasSide, hasInBar) {\n    if (hasSide) {\n        return margin;\n    }\n    else if (hasInBar) {\n        return Math.ceil(margin / 2);\n    }\n    return 0;\n}\n\nfunction drawSquare(ctx, coords, size) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = ((squareSize - 1) * coords._internal_pixelRatio) / 2;\n    const left = coords._internal_x - halfSize;\n    const top = coords._internal_y - halfSize;\n    ctx.fillRect(left, top, squareSize * coords._internal_pixelRatio, squareSize * coords._internal_pixelRatio);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    return x >= left && x <= left + squareSize &&\n        y >= top && y <= top + squareSize;\n}\n\nfunction drawArrow(up, ctx, coords, size) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = ((arrowSize - 1) / 2) * coords._internal_pixelRatio;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = ((baseSize - 1) / 2) * coords._internal_pixelRatio;\n    ctx.beginPath();\n    if (up) {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    else {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n    // TODO: implement arrow hit test\n    return hitTestSquare(centerX, centerY, size, x, y);\n}\n\nfunction drawCircle(ctx, coords, size) {\n    const circleSize = shapeSize('circle', size);\n    const halfSize = (circleSize - 1) / 2;\n    ctx.beginPath();\n    ctx.arc(coords._internal_x, coords._internal_y, halfSize * coords._internal_pixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n    const circleSize = shapeSize('circle', size);\n    const tolerance = 2 + circleSize / 2;\n    const xOffset = centerX - x;\n    const yOffset = centerY - y;\n    const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n    return dist <= tolerance;\n}\n\nfunction drawText(ctx, text, x, y, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.save();\n    ctx.scale(horizontalPixelRatio, verticalPixelRatio);\n    ctx.fillText(text, x, y);\n    ctx.restore();\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n    const halfHeight = textHeight / 2;\n    return x >= textX && x <= textX + textWidth &&\n        y >= textY - halfHeight && y <= textY + halfHeight;\n}\n\nclass SeriesMarkersRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__textWidthCache = new TextWidthCache();\n        this._private__fontSize = -1;\n        this._private__fontFamily = '';\n        this._private__font = '';\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_setParams(fontSize, fontFamily) {\n        if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n            this._private__fontSize = fontSize;\n            this._private__fontFamily = fontFamily;\n            this._private__font = makeFont(fontSize, fontFamily);\n            this._private__textWidthCache._internal_reset();\n        }\n    }\n    _internal_hitTest(x, y) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return null;\n        }\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (hitTestItem(item, x, y)) {\n                return {\n                    _internal_hitTestData: item._internal_internalId,\n                    _internal_externalId: item._internal_externalId,\n                };\n            }\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }, isHovered, hitTestData) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        ctx.textBaseline = 'middle';\n        ctx.font = this._private__font;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (item._internal_text !== undefined) {\n                item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n                item._internal_text._internal_height = this._private__fontSize;\n                item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n            }\n            drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio);\n        }\n    }\n}\nfunction bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio) {\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    return {\n        _internal_x: Math.round(item._internal_x * horizontalPixelRatio) + correction,\n        _internal_y: item._internal_y * verticalPixelRatio,\n        _internal_pixelRatio: horizontalPixelRatio,\n    };\n}\nfunction drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.fillStyle = item._internal_color;\n    if (item._internal_text !== undefined) {\n        drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y, horizontalPixelRatio, verticalPixelRatio);\n    }\n    drawShape(item, ctx, bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio));\n}\nfunction drawShape(item, ctx, coordinates) {\n    if (item._internal_size === 0) {\n        return;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            drawArrow(false, ctx, coordinates, item._internal_size);\n            return;\n        case 'arrowUp':\n            drawArrow(true, ctx, coordinates, item._internal_size);\n            return;\n        case 'circle':\n            drawCircle(ctx, coordinates, item._internal_size);\n            return;\n        case 'square':\n            drawSquare(ctx, coordinates, item._internal_size);\n            return;\n    }\n    ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n    if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n        return true;\n    }\n    return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n    if (item._internal_size === 0) {\n        return false;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'arrowUp':\n            return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'circle':\n            return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'square':\n            return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n    }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n    const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n    const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n    const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n    const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n    const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n    const halfSize = shapeSize / 2;\n    rendererItem._internal_size = shapeSize;\n    switch (marker.position) {\n        case 'inBar': {\n            rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n            }\n            return;\n        }\n        case 'aboveBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_aboveBar += shapeSize + shapeMargin;\n            return;\n        }\n        case 'belowBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_belowBar += shapeSize + shapeMargin;\n            return;\n        }\n    }\n    ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n    constructor(series, model) {\n        this._private__invalidated = true;\n        this._private__dataInvalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__autoScaleMargins = null;\n        this._private__markersPositions = null;\n        this._private__renderer = new SeriesMarkersRenderer();\n        this._private__series = series;\n        this._private__model = model;\n        this._private__data = {\n            _internal_items: [],\n            _internal_visibleRange: null,\n        };\n    }\n    _internal_update(updateType) {\n        this._private__invalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        if (updateType === 'data') {\n            this._private__dataInvalidated = true;\n            this._private__markersPositions = null;\n        }\n    }\n    _internal_renderer(addAnchors) {\n        if (!this._private__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__makeValid();\n        }\n        const layout = this._private__model._internal_options().layout;\n        this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n        this._private__renderer._internal_setData(this._private__data);\n        return this._private__renderer;\n    }\n    _internal_autoScaleMargins() {\n        if (this._private__autoScaleMarginsInvalidated) {\n            if (this._private__series._internal_indexedMarkers().length > 0) {\n                const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n                const shapeMargin$1 = shapeMargin(barSpacing);\n                const marginValue = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n                const positions = this._internal__getMarkerPositions();\n                this._private__autoScaleMargins = {\n                    above: calculateAdjustedMargin(marginValue, positions.aboveBar, positions.inBar),\n                    below: calculateAdjustedMargin(marginValue, positions.belowBar, positions.inBar),\n                };\n            }\n            else {\n                this._private__autoScaleMargins = null;\n            }\n            this._private__autoScaleMarginsInvalidated = false;\n        }\n        return this._private__autoScaleMargins;\n    }\n    _internal__getMarkerPositions() {\n        if (this._private__markersPositions === null) {\n            this._private__markersPositions = this._private__series._internal_indexedMarkers().reduce((acc, marker) => {\n                if (!acc[marker.position]) {\n                    acc[marker.position] = true;\n                }\n                return acc;\n            }, {\n                inBar: false,\n                aboveBar: false,\n                belowBar: false,\n            });\n        }\n        return this._private__markersPositions;\n    }\n    _internal__makeValid() {\n        const priceScale = this._private__series._internal_priceScale();\n        const timeScale = this._private__model._internal_timeScale();\n        const seriesMarkers = this._private__series._internal_indexedMarkers();\n        if (this._private__dataInvalidated) {\n            this._private__data._internal_items = seriesMarkers.map((marker) => ({\n                _internal_time: marker.time,\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_size: 0,\n                _internal_shape: marker.shape,\n                _internal_color: marker.color,\n                _internal_internalId: marker._internal_internalId,\n                _internal_externalId: marker.id,\n                _internal_text: undefined,\n            }));\n            this._private__dataInvalidated = false;\n        }\n        const layoutOptions = this._private__model._internal_options().layout;\n        this._private__data._internal_visibleRange = null;\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        if (this._private__data._internal_items.length === 0) {\n            return;\n        }\n        let prevTimeIndex = NaN;\n        const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n        const offsets = {\n            _internal_aboveBar: shapeMargin$1,\n            _internal_belowBar: shapeMargin$1,\n        };\n        this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const marker = seriesMarkers[index];\n            if (marker.time !== prevTimeIndex) {\n                // new bar, reset stack counter\n                offsets._internal_aboveBar = shapeMargin$1;\n                offsets._internal_belowBar = shapeMargin$1;\n                prevTimeIndex = marker.time;\n            }\n            const rendererItem = this._private__data._internal_items[index];\n            rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n            if (marker.text !== undefined && marker.text.length > 0) {\n                rendererItem._internal_text = {\n                    _internal_content: marker.text,\n                    _internal_x: 0,\n                    _internal_y: 0,\n                    _internal_width: 0,\n                    _internal_height: 0,\n                };\n            }\n            const dataAt = this._private__series._internal_dataAt(marker.time);\n            if (dataAt === null) {\n                continue;\n            }\n            fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n        }\n        this._private__invalidated = false;\n    }\n}\n\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = lastValueData._internal_coordinate;\n        data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n        data._internal_lineWidth = seriesOptions.priceLineWidth;\n        data._internal_lineStyle = seriesOptions.priceLineStyle;\n    }\n}\n\nclass SeriesPriceAxisView extends PriceAxisView {\n    constructor(source) {\n        super();\n        this._private__source = source;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const source = this._private__source;\n        if (!source._internal_visible()) {\n            return;\n        }\n        const seriesOptions = source._internal_options();\n        const showSeriesLastValue = seriesOptions.lastValueVisible;\n        const showSymbolLabel = source._internal_title() !== '';\n        const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n        const lastValueData = source._internal_lastValueData(false);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        if (showSeriesLastValue) {\n            axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n            axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n        }\n        if (showSymbolLabel || showPriceAndPercentage) {\n            paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n            paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n        }\n        const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n        const colors = generateContrastColors(lastValueColor);\n        commonRendererData._internal_background = colors._internal_background;\n        commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n        paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n        axisRendererData._internal_borderColor = lastValueColor;\n        axisRendererData._internal_color = colors._internal_foreground;\n        paneRendererData._internal_color = colors._internal_foreground;\n    }\n    _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n        let result = '';\n        const title = this._private__source._internal_title();\n        if (showSymbolLabel && title.length !== 0) {\n            result += `${title} `;\n        }\n        if (showSeriesLastValue && showPriceAndPercentage) {\n            result += this._private__source._internal_priceScale()._internal_isPercentage() ?\n                lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n        }\n        return result.trim();\n    }\n    _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n        if (!showSeriesLastValue) {\n            return '';\n        }\n        if (!showPriceAndPercentage) {\n            return lastValueData._internal_text;\n        }\n        return this._private__source._internal_priceScale()._internal_isPercentage() ?\n            lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n    }\n}\n\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n    const firstFinite = Number.isFinite(valueOne);\n    const secondFinite = Number.isFinite(valueTwo);\n    if (firstFinite && secondFinite) {\n        return method(valueOne, valueTwo);\n    }\n    return !firstFinite && !secondFinite ? fallback : (firstFinite ? valueOne : valueTwo);\n}\nclass PriceRangeImpl {\n    constructor(minValue, maxValue) {\n        this._private__minValue = minValue;\n        this._private__maxValue = maxValue;\n    }\n    _internal_equals(pr) {\n        if (pr === null) {\n            return false;\n        }\n        return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n    }\n    _internal_clone() {\n        return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n    }\n    _internal_minValue() {\n        return this._private__minValue;\n    }\n    _internal_maxValue() {\n        return this._private__maxValue;\n    }\n    _internal_length() {\n        return this._private__maxValue - this._private__minValue;\n    }\n    _internal_isEmpty() {\n        return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n    }\n    _internal_merge(anotherRange) {\n        if (anotherRange === null) {\n            return this;\n        }\n        return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n    }\n    _internal_scaleAroundCenter(coeff) {\n        if (!isNumber(coeff)) {\n            return;\n        }\n        const delta = this._private__maxValue - this._private__minValue;\n        if (delta === 0) {\n            return;\n        }\n        const center = (this._private__maxValue + this._private__minValue) * 0.5;\n        let maxDelta = this._private__maxValue - center;\n        let minDelta = this._private__minValue - center;\n        maxDelta *= coeff;\n        minDelta *= coeff;\n        this._private__maxValue = center + maxDelta;\n        this._private__minValue = center + minDelta;\n    }\n    _internal_shift(delta) {\n        if (!isNumber(delta)) {\n            return;\n        }\n        this._private__maxValue += delta;\n        this._private__minValue += delta;\n    }\n    _internal_toRaw() {\n        return {\n            minValue: this._private__minValue,\n            maxValue: this._private__maxValue,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n    }\n}\n\nclass AutoscaleInfoImpl {\n    constructor(priceRange, margins) {\n        this._private__priceRange = priceRange;\n        this._private__margins = margins || null;\n    }\n    _internal_priceRange() {\n        return this._private__priceRange;\n    }\n    _internal_margins() {\n        return this._private__margins;\n    }\n    _internal_toRaw() {\n        if (this._private__priceRange === null) {\n            return null;\n        }\n        return {\n            priceRange: this._private__priceRange._internal_toRaw(),\n            margins: this._private__margins || undefined,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n    }\n}\n\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    constructor(series, priceLine) {\n        super(series);\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const lineOptions = this._private__priceLine._internal_options();\n        if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = y;\n        data._internal_color = lineOptions.color;\n        data._internal_lineWidth = lineOptions.lineWidth;\n        data._internal_lineStyle = lineOptions.lineStyle;\n        data._internal_externalId = this._private__priceLine._internal_options().id;\n    }\n}\n\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n    constructor(series, priceLine) {\n        super();\n        this._private__series = series;\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const options = this._private__priceLine._internal_options();\n        const labelVisible = options.axisLabelVisible;\n        const showPaneLabel = options.title !== '';\n        const series = this._private__series;\n        if (!labelVisible || !series._internal_visible()) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        if (showPaneLabel) {\n            paneRendererData._internal_text = options.title;\n            paneRendererData._internal_visible = true;\n        }\n        paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n        axisRendererData._internal_text = this._private__formatPrice(options.price);\n        axisRendererData._internal_visible = true;\n        const colors = generateContrastColors(options.axisLabelColor || options.color);\n        commonData._internal_background = colors._internal_background;\n        const textColor = options.axisLabelTextColor || colors._internal_foreground;\n        axisRendererData._internal_color = textColor; // price text\n        paneRendererData._internal_color = textColor; // title text\n        commonData._internal_coordinate = y;\n    }\n    _private__formatPrice(price) {\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return '';\n        }\n        return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n    }\n}\n\nclass CustomPriceLine {\n    constructor(series, options) {\n        this._private__series = series;\n        this._private__options = options;\n        this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n        this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n        this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_update();\n        this._private__series._internal_model()._internal_lightUpdate();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneView() {\n        return this._private__priceLineView;\n    }\n    _internal_labelPaneView() {\n        return this._private__panePriceAxisView;\n    }\n    _internal_priceAxisView() {\n        return this._private__priceAxisView;\n    }\n    _internal_update() {\n        this._private__priceLineView._internal_update();\n        this._private__priceAxisView._internal_update();\n    }\n    _internal_yCoord() {\n        const series = this._private__series;\n        const priceScale = series._internal_priceScale();\n        const timeScale = series._internal_model()._internal_timeScale();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return null;\n        }\n        const firstValue = series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n    }\n}\n\nclass PriceDataSource extends DataSource {\n    constructor(model) {\n        super();\n        this._private__model = model;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n}\n\nconst barStyleFnMap = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n        var _a;\n        const upColor = barStyle.upColor;\n        const downColor = barStyle.downColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c;\n        const upColor = candlestickStyle.upColor;\n        const downColor = candlestickStyle.downColor;\n        const borderUpColor = candlestickStyle.borderUpColor;\n        const borderDownColor = candlestickStyle.borderDownColor;\n        const wickUpColor = candlestickStyle.wickUpColor;\n        const wickDownColor = candlestickStyle.wickDownColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n            _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : (isUp ? borderUpColor : borderDownColor),\n            _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : (isUp ? wickUpColor : wickDownColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : customStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n            _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n            _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n            _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d, _e, _f;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n        return {\n            _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n            _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n            _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n            _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n            _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n            _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n            _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n        var _a, _b;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n            _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color,\n        };\n    },\n};\nclass SeriesBarColorer {\n    constructor(series) {\n        this._private__findBar = (barIndex, precomputedBars) => {\n            if (precomputedBars !== undefined) {\n                return precomputedBars._internal_value;\n            }\n            return this._private__series._internal_bars()._internal_valueAt(barIndex);\n        };\n        this._private__series = series;\n        this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n    }\n    _internal_barStyle(barIndex, precomputedBars) {\n        // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n        // Used to avoid binary search if bars are already known\n        return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n    }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n    /**\n     * Search the nearest left item\n     */\n    MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n    /**\n     * Do not search\n     */\n    MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Search the nearest right item\n     */\n    MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n    constructor() {\n        this._private__items = [];\n        this._private__minMaxCache = new Map();\n        this._private__rowSearchCache = new Map();\n    }\n    // @returns Last row\n    _internal_last() {\n        return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n    }\n    _internal_firstIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n    }\n    _internal_lastIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt((this._private__items.length - 1)) : null;\n    }\n    _internal_size() {\n        return this._private__items.length;\n    }\n    _internal_isEmpty() {\n        return this._internal_size() === 0;\n    }\n    _internal_contains(index) {\n        return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n    }\n    _internal_valueAt(index) {\n        return this._internal_search(index);\n    }\n    _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n        const pos = this._private__search(index, searchMode);\n        if (pos === null) {\n            return null;\n        }\n        return Object.assign(Object.assign({}, this._private__valueAt(pos)), { _internal_index: this._private__indexAt(pos) });\n    }\n    _internal_rows() {\n        return this._private__items;\n    }\n    _internal_minMaxOnRangeCached(start, end, plots) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        for (const plot of plots) {\n            const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n    _internal_setData(plotRows) {\n        this._private__rowSearchCache.clear();\n        this._private__minMaxCache.clear();\n        this._private__items = plotRows;\n    }\n    _private__indexAt(offset) {\n        return this._private__items[offset]._internal_index;\n    }\n    _private__valueAt(offset) {\n        return this._private__items[offset];\n    }\n    _private__search(index, searchMode) {\n        const exactPos = this._private__bsearch(index);\n        if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n            switch (searchMode) {\n                case -1 /* MismatchDirection.NearestLeft */:\n                    return this._private__searchNearestLeft(index);\n                case 1 /* MismatchDirection.NearestRight */:\n                    return this._private__searchNearestRight(index);\n                default:\n                    throw new TypeError('Unknown search mode');\n            }\n        }\n        return exactPos;\n    }\n    _private__searchNearestLeft(index) {\n        let nearestLeftPos = this._private__lowerbound(index);\n        if (nearestLeftPos > 0) {\n            nearestLeftPos = nearestLeftPos - 1;\n        }\n        return (nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index) ? nearestLeftPos : null;\n    }\n    _private__searchNearestRight(index) {\n        const nearestRightPos = this._private__upperbound(index);\n        return (nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos)) ? nearestRightPos : null;\n    }\n    _private__bsearch(index) {\n        const start = this._private__lowerbound(index);\n        if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n            return start;\n        }\n        return null;\n    }\n    _private__lowerbound(index) {\n        return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n    }\n    _private__upperbound(index) {\n        return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n    }\n    _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n        let result = null;\n        for (let i = startIndex; i < endIndexExclusive; i++) {\n            const values = this._private__items[i]._internal_value;\n            const v = values[plotIndex];\n            if (Number.isNaN(v)) {\n                continue;\n            }\n            if (result === null) {\n                result = { _internal_min: v, _internal_max: v };\n            }\n            else {\n                if (v < result._internal_min) {\n                    result._internal_min = v;\n                }\n                if (v > result._internal_max) {\n                    result._internal_max = v;\n                }\n            }\n        }\n        return result;\n    }\n    _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        // assume that bar indexes only increase\n        const firstIndex = ensureNotNull(this._internal_firstIndex());\n        const lastIndex = ensureNotNull(this._internal_lastIndex());\n        const s = Math.max(start, firstIndex);\n        const e = Math.min(end, lastIndex);\n        const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n        const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n        {\n            const startIndex = this._private__lowerbound(s);\n            const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        let minMaxCache = this._private__minMaxCache.get(plotIndex);\n        if (minMaxCache === undefined) {\n            minMaxCache = new Map();\n            this._private__minMaxCache.set(plotIndex, minMaxCache);\n        }\n        // now go cached\n        for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n            const chunkIndex = Math.floor(c / CHUNK_SIZE);\n            let chunkMinMax = minMaxCache.get(chunkIndex);\n            if (chunkMinMax === undefined) {\n                const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n                const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n                chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n                minMaxCache.set(chunkIndex, chunkMinMax);\n            }\n            result = mergeMinMax(result, chunkMinMax);\n        }\n        // tail\n        {\n            const startIndex = this._private__lowerbound(cachedHigh);\n            const endIndex = this._private__upperbound(e); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n}\nfunction mergeMinMax(first, second) {\n    if (first === null) {\n        return second;\n    }\n    else {\n        if (second === null) {\n            return first;\n        }\n        else {\n            // merge MinMax values\n            const min = Math.min(first._internal_min, second._internal_min);\n            const max = Math.max(first._internal_max, second._internal_max);\n            return { _internal_min: min, _internal_max: max };\n        }\n    }\n}\n\nfunction createSeriesPlotList() {\n    return new PlotList();\n}\n\nclass SeriesPrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        var _a, _b;\n        (_b = (_a = this._private__baseRenderer).drawBackground) === null || _b === void 0 ? void 0 : _b.call(_a, target);\n    }\n}\nclass SeriesPrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        var _a;\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (((_a = this._private__cache) === null || _a === void 0 ? void 0 : _a._internal_base) === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this._private__paneView).zOrder) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : 'normal';\n    }\n}\nfunction getAxisViewData(baseView) {\n    var _a, _b, _c, _d, _e;\n    return {\n        _internal_text: baseView.text(),\n        _internal_coordinate: baseView.coordinate(),\n        _internal_fixedCoordinate: (_a = baseView.fixedCoordinate) === null || _a === void 0 ? void 0 : _a.call(baseView),\n        _internal_color: baseView.textColor(),\n        _internal_background: baseView.backColor(),\n        _internal_visible: (_c = (_b = baseView.visible) === null || _b === void 0 ? void 0 : _b.call(baseView)) !== null && _c !== void 0 ? _c : true,\n        _internal_tickVisible: (_e = (_d = baseView.tickVisible) === null || _d === void 0 ? void 0 : _d.call(baseView)) !== null && _e !== void 0 ? _e : true,\n    };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n    constructor(baseView, timeScale) {\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__baseView = baseView;\n        this._private__timeScale = timeScale;\n    }\n    _internal_renderer() {\n        this._private__renderer._internal_setData(Object.assign({ _internal_width: this._private__timeScale._internal_width() }, getAxisViewData(this._private__baseView)));\n        return this._private__renderer;\n    }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n    constructor(baseView, priceScale) {\n        super();\n        this._private__baseView = baseView;\n        this._private__priceScale = priceScale;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        const data = getAxisViewData(this._private__baseView);\n        commonRendererData._internal_background = data._internal_background;\n        axisRendererData._internal_color = data._internal_color;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        commonRendererData._internal_coordinate = data._internal_coordinate;\n        commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n        axisRendererData._internal_text = data._internal_text;\n        axisRendererData._internal_visible = data._internal_visible;\n        axisRendererData._internal_tickVisible = data._internal_tickVisible;\n    }\n}\nclass SeriesPrimitiveWrapper {\n    constructor(primitive, series) {\n        this._private__paneViewsCache = null;\n        this._private__timeAxisViewsCache = null;\n        this._private__priceAxisViewsCache = null;\n        this._private__priceAxisPaneViewsCache = null;\n        this._private__timeAxisPaneViewsCache = null;\n        this._private__primitive = primitive;\n        this._private__series = series;\n    }\n    _internal_primitive() {\n        return this._private__primitive;\n    }\n    _internal_updateAllViews() {\n        var _a, _b;\n        (_b = (_a = this._private__primitive).updateAllViews) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _internal_paneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).paneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__paneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__paneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__paneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).timeAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__timeAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__timeAxisViewsCache._internal_wrapper;\n        }\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const wrapper = base.map((aw) => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n        this._private__timeAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).priceAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__priceAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__priceAxisViewsCache._internal_wrapper;\n        }\n        const priceScale = this._private__series._internal_priceScale();\n        const wrapper = base.map((aw) => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n        this._private__priceAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisPaneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).priceAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__priceAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__priceAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__priceAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisPaneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).timeAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__timeAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__timeAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__timeAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this._private__primitive).autoscaleInfo) === null || _b === void 0 ? void 0 : _b.call(_a, startTimePoint, endTimePoint)) !== null && _c !== void 0 ? _c : null);\n    }\n    _internal_hitTest(x, y) {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this._private__primitive).hitTest) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)) !== null && _c !== void 0 ? _c : null;\n    }\n}\n\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n    primitives.forEach((wrapper) => {\n        extractor(wrapper).forEach((paneView) => {\n            if (paneView._internal_zOrder() !== zOrder) {\n                return;\n            }\n            destination.push(paneView);\n        });\n    });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n    return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n    return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n    return wrapper._internal_timeAxisPaneViews();\n}\nclass Series extends PriceDataSource {\n    constructor(model, options, seriesType, pane, customPaneView) {\n        super(model);\n        this._private__data = createSeriesPlotList();\n        this._private__priceLineView = new SeriesPriceLinePaneView(this);\n        this._private__customPriceLines = [];\n        this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n        this._private__lastPriceAnimationPaneView = null;\n        this._private__barColorerCache = null;\n        this._private__markers = [];\n        this._private__indexedMarkers = [];\n        this._private__animationTimeoutId = null;\n        this._private__primitives = [];\n        this._private__options = options;\n        this._private__seriesType = seriesType;\n        const priceAxisView = new SeriesPriceAxisView(this);\n        this._private__priceAxisViews = [priceAxisView];\n        this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n        if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n            this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n        }\n        this._private__recreateFormatter();\n        this._private__recreatePaneViews(customPaneView);\n    }\n    _internal_destroy() {\n        if (this._private__animationTimeoutId !== null) {\n            clearTimeout(this._private__animationTimeoutId);\n        }\n    }\n    _internal_priceLineColor(lastBarColor) {\n        return this._private__options.priceLineColor || lastBarColor;\n    }\n    _internal_lastValueData(globalLast) {\n        const noDataRes = { _internal_noData: true };\n        const priceScale = this._internal_priceScale();\n        if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n            return noDataRes;\n        }\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        const firstValue = this._internal_firstValue();\n        if (visibleBars === null || firstValue === null) {\n            return noDataRes;\n        }\n        // find range of bars inside range\n        // TODO: make it more optimal\n        let bar;\n        let lastIndex;\n        if (globalLast) {\n            const lastBar = this._private__data._internal_last();\n            if (lastBar === null) {\n                return noDataRes;\n            }\n            bar = lastBar;\n            lastIndex = lastBar._internal_index;\n        }\n        else {\n            const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n            if (endBar === null) {\n                return noDataRes;\n            }\n            bar = this._private__data._internal_valueAt(endBar._internal_index);\n            if (bar === null) {\n                return noDataRes;\n            }\n            lastIndex = endBar._internal_index;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const barColorer = this._internal_barColorer();\n        const style = barColorer._internal_barStyle(lastIndex, { _internal_value: bar });\n        const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n        return {\n            _internal_noData: false,\n            _internal_price: price,\n            _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n            _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n            _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n            _internal_color: style._internal_barColor,\n            _internal_coordinate: coordinate,\n            _internal_index: lastIndex,\n        };\n    }\n    _internal_barColorer() {\n        if (this._private__barColorerCache !== null) {\n            return this._private__barColorerCache;\n        }\n        this._private__barColorerCache = new SeriesBarColorer(this);\n        return this._private__barColorerCache;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        const targetPriceScaleId = options.priceScaleId;\n        if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n            // series cannot do it itself, ask model\n            this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n        }\n        merge(this._private__options, options);\n        if (options.priceFormat !== undefined) {\n            this._private__recreateFormatter();\n            // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n            // thus we need to force the chart to do a full update to apply changes correctly\n            // full update is quite heavy operation in terms of performance\n            // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n            this._internal_model()._internal_fullUpdate();\n        }\n        this._internal_model()._internal_updateSource(this);\n        // a series might affect crosshair by some options (like crosshair markers)\n        // that's why we need to update crosshair as well\n        this._internal_model()._internal_updateCrosshair();\n        this._private__paneView._internal_update('options');\n    }\n    _internal_setData(data, updateInfo) {\n        this._private__data._internal_setData(data);\n        this._private__recalculateMarkers();\n        this._private__paneView._internal_update('data');\n        this._private__markersPaneView._internal_update('data');\n        if (this._private__lastPriceAnimationPaneView !== null) {\n            if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n                this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n            }\n            else if (data.length === 0) {\n                this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n            }\n        }\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_setMarkers(data) {\n        this._private__markers = data;\n        this._private__recalculateMarkers();\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._private__markersPaneView._internal_update('data');\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_markers() {\n        return this._private__markers;\n    }\n    _internal_indexedMarkers() {\n        return this._private__indexedMarkers;\n    }\n    _internal_createPriceLine(options) {\n        const result = new CustomPriceLine(this, options);\n        this._private__customPriceLines.push(result);\n        this._internal_model()._internal_updateSource(this);\n        return result;\n    }\n    _internal_removePriceLine(line) {\n        const index = this._private__customPriceLines.indexOf(line);\n        if (index !== -1) {\n            this._private__customPriceLines.splice(index, 1);\n        }\n        this._internal_model()._internal_updateSource(this);\n    }\n    _internal_seriesType() {\n        return this._private__seriesType;\n    }\n    _internal_firstValue() {\n        const bar = this._internal_firstBar();\n        if (bar === null) {\n            return null;\n        }\n        return {\n            _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_timePoint: bar._internal_time,\n        };\n    }\n    _internal_firstBar() {\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const startTimePoint = visibleBars._internal_left();\n        return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n    }\n    _internal_bars() {\n        return this._private__data;\n    }\n    _internal_dataAt(time) {\n        const prices = this._private__data._internal_valueAt(time);\n        if (prices === null) {\n            return null;\n        }\n        if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n            return {\n                _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n                _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n                _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n                _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */],\n            };\n        }\n        else {\n            return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n        }\n    }\n    _internal_topPaneViews(pane) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n        const animationPaneView = this._private__lastPriceAnimationPaneView;\n        if (animationPaneView === null || !animationPaneView._internal_visible()) {\n            return res;\n        }\n        if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n            this._private__animationTimeoutId = setTimeout(() => {\n                this._private__animationTimeoutId = null;\n                this._internal_model()._internal_cursorUpdate();\n            }, 0);\n        }\n        animationPaneView._internal_invalidateStage();\n        res.unshift(animationPaneView);\n        return res;\n    }\n    _internal_paneViews() {\n        const res = [];\n        if (!this._private__isOverlay()) {\n            res.push(this._private__baseHorizontalLineView);\n        }\n        res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n        const priceLineViews = this._private__customPriceLines.map((line) => line._internal_paneView());\n        res.push(...priceLineViews);\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n        return res;\n    }\n    _internal_bottomPaneViews() {\n        return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n    }\n    _internal_pricePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n    }\n    _internal_timePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _internal_labelPaneViews(pane) {\n        return [\n            this._private__panePriceAxisView,\n            ...this._private__customPriceLines.map((line) => line._internal_labelPaneView()),\n        ];\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n            return [];\n        }\n        const result = [...this._private__priceAxisViews];\n        for (const customPriceLine of this._private__customPriceLines) {\n            result.push(customPriceLine._internal_priceAxisView());\n        }\n        this._private__primitives.forEach((wrapper) => {\n            result.push(...wrapper._internal_priceAxisViews());\n        });\n        return result;\n    }\n    _internal_timeAxisViews() {\n        const res = [];\n        this._private__primitives.forEach((wrapper) => {\n            res.push(...wrapper._internal_timeAxisViews());\n        });\n        return res;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__options.autoscaleInfoProvider !== undefined) {\n            const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n                const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n                return (res === null) ? null : res._internal_toRaw();\n            });\n            return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n        }\n        return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n    }\n    _internal_minMove() {\n        return this._private__options.priceFormat.minMove;\n    }\n    _internal_formatter() {\n        return this._private__formatter;\n    }\n    _internal_updateAllViews() {\n        var _a;\n        this._private__paneView._internal_update();\n        this._private__markersPaneView._internal_update();\n        for (const priceAxisView of this._private__priceAxisViews) {\n            priceAxisView._internal_update();\n        }\n        for (const customPriceLine of this._private__customPriceLines) {\n            customPriceLine._internal_update();\n        }\n        this._private__priceLineView._internal_update();\n        this._private__baseHorizontalLineView._internal_update();\n        (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n        this._private__primitives.forEach((wrapper) => wrapper._internal_updateAllViews());\n    }\n    _internal_priceScale() {\n        return ensureNotNull(super._internal_priceScale());\n    }\n    _internal_markerDataAtIndex(index) {\n        const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') &&\n            this._private__options.crosshairMarkerVisible;\n        if (!getValue) {\n            return null;\n        }\n        const bar = this._private__data._internal_valueAt(index);\n        if (bar === null) {\n            return null;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const radius = this._private__markerRadius();\n        const borderColor = this._private__markerBorderColor();\n        const borderWidth = this._private__markerBorderWidth();\n        const backgroundColor = this._private__markerBackgroundColor(index);\n        return { _internal_price: price, _internal_radius: radius, _internal_borderColor: borderColor, _internal_borderWidth: borderWidth, _internal_backgroundColor: backgroundColor };\n    }\n    _internal_title() {\n        return this._private__options.title;\n    }\n    _internal_visible() {\n        return this._private__options.visible;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n    }\n    _internal_customSeriesPlotValuesBuilder() {\n        if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_priceValueBuilder(data);\n        };\n    }\n    _internal_customSeriesWhitespaceCheck() {\n        if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_isWhitespace(data);\n        };\n    }\n    _private__isOverlay() {\n        const priceScale = this._internal_priceScale();\n        return !isDefaultPriceScale(priceScale._internal_id());\n    }\n    _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n        if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n            return null;\n        }\n        // TODO: refactor this\n        // series data is strongly hardcoded to keep bars\n        const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram'\n            ? [3 /* PlotRowValueIndex.Close */]\n            : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n        const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n        let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n        if (this._internal_seriesType() === 'Histogram') {\n            const base = this._private__options.base;\n            const rangeWithBase = new PriceRangeImpl(base, base);\n            range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n        }\n        let margins = this._private__markersPaneView._internal_autoScaleMargins();\n        this._private__primitives.forEach((primitive) => {\n            const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n            if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.priceRange) {\n                const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n                range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n            }\n            if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.margins) {\n                margins = mergeMargins(margins, primitiveAutoscale.margins);\n            }\n        });\n        return new AutoscaleInfoImpl(range, margins);\n    }\n    _private__markerRadius() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerRadius;\n        }\n        return 0;\n    }\n    _private__markerBorderColor() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n                if (crosshairMarkerBorderColor.length !== 0) {\n                    return crosshairMarkerBorderColor;\n                }\n            }\n        }\n        return null;\n    }\n    _private__markerBorderWidth() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerBorderWidth;\n        }\n        return 0;\n    }\n    _private__markerBackgroundColor(index) {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n                if (crosshairMarkerBackgroundColor.length !== 0) {\n                    return crosshairMarkerBackgroundColor;\n                }\n            }\n        }\n        return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n    }\n    _private__recreateFormatter() {\n        switch (this._private__options.priceFormat.type) {\n            case 'custom': {\n                this._private__formatter = { format: this._private__options.priceFormat.formatter };\n                break;\n            }\n            case 'volume': {\n                this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            case 'percent': {\n                this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            default: {\n                const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n                this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n            }\n        }\n        if (this._internal__priceScale !== null) {\n            this._internal__priceScale._internal_updateFormatter();\n        }\n    }\n    _private__recalculateMarkers() {\n        const timeScale = this._internal_model()._internal_timeScale();\n        if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n            this._private__indexedMarkers = [];\n            return;\n        }\n        const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n        this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n            // the first find index on the time scale (across all series)\n            const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n            // and then search that index inside the series data\n            const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n            const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n            return {\n                time: seriesDataIndex,\n                position: marker.position,\n                shape: marker.shape,\n                color: marker.color,\n                id: marker.id,\n                _internal_internalId: index,\n                text: marker.text,\n                size: marker.size,\n                originalTime: marker.originalTime,\n            };\n        });\n    }\n    _private__recreatePaneViews(customPaneView) {\n        this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n        switch (this._private__seriesType) {\n            case 'Bar': {\n                this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Candlestick': {\n                this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Line': {\n                this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Custom': {\n                this._private__paneView = new SeriesCustomPaneView(this, this._internal_model(), ensureDefined(customPaneView));\n                break;\n            }\n            case 'Area': {\n                this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Baseline': {\n                this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Histogram': {\n                this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n                break;\n            }\n            default: throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n        }\n    }\n    _private__extractPaneViews(extractor, zOrder) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n        return res;\n    }\n}\nfunction mergeMargins(source, additionalMargin) {\n    var _a, _b;\n    return {\n        above: Math.max((_a = source === null || source === void 0 ? void 0 : source.above) !== null && _a !== void 0 ? _a : 0, additionalMargin.above),\n        below: Math.max((_b = source === null || source === void 0 ? void 0 : source.below) !== null && _b !== void 0 ? _b : 0, additionalMargin.below),\n    };\n}\n\nclass Magnet {\n    constructor(options) {\n        this._private__options = options;\n    }\n    _internal_align(price, index, pane) {\n        let res = price;\n        if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n            return res;\n        }\n        const defaultPriceScale = pane._internal_defaultPriceScale();\n        const firstValue = defaultPriceScale._internal_firstValue();\n        if (firstValue === null) {\n            return res;\n        }\n        const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n        // get all serieses from the pane\n        const serieses = pane._internal_dataSources().filter(((ds) => (ds instanceof (Series))));\n        const candidates = serieses.reduce((acc, series) => {\n            if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n                return acc;\n            }\n            const ps = series._internal_priceScale();\n            const bars = series._internal_bars();\n            if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n                return acc;\n            }\n            const bar = bars._internal_valueAt(index);\n            if (bar === null) {\n                return acc;\n            }\n            // convert bar to pixels\n            const firstPrice = ensure(series._internal_firstValue());\n            return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n        }, []);\n        if (candidates.length === 0) {\n            return res;\n        }\n        candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n        const nearest = candidates[0];\n        res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n        return res;\n    }\n}\n\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        ctx.lineWidth = lineWidth;\n        strokeInPixel(ctx, () => {\n            const data = ensureNotNull(this._private__data);\n            if (data._internal_vertLinesVisible) {\n                ctx.strokeStyle = data._internal_vertLinesColor;\n                setLineStyle(ctx, data._internal_vertLineStyle);\n                ctx.beginPath();\n                for (const timeMark of data._internal_timeMarks) {\n                    const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n                    ctx.moveTo(x, -lineWidth);\n                    ctx.lineTo(x, bitmapSize.height + lineWidth);\n                }\n                ctx.stroke();\n            }\n            if (data._internal_horzLinesVisible) {\n                ctx.strokeStyle = data._internal_horzLinesColor;\n                setLineStyle(ctx, data._internal_horzLineStyle);\n                ctx.beginPath();\n                for (const priceMark of data._internal_priceMarks) {\n                    const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n                    ctx.moveTo(-lineWidth, y);\n                    ctx.lineTo(bitmapSize.width + lineWidth, y);\n                }\n                ctx.stroke();\n            }\n        });\n    }\n}\n\nclass GridPaneView {\n    constructor(pane) {\n        this._private__renderer = new GridRenderer();\n        this._private__invalidated = true;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n            const data = {\n                _internal_horzLinesVisible: gridOptions.horzLines.visible,\n                _internal_vertLinesVisible: gridOptions.vertLines.visible,\n                _internal_horzLinesColor: gridOptions.horzLines.color,\n                _internal_vertLinesColor: gridOptions.vertLines.color,\n                _internal_horzLineStyle: gridOptions.horzLines.style,\n                _internal_vertLineStyle: gridOptions.vertLines.style,\n                _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n                // need this conversiom because TimeMark is a part of external interface\n                // and fields inside TimeMark are not minified\n                _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map((tm) => {\n                    return { _internal_coord: tm.coord };\n                }),\n            };\n            this._private__renderer._internal_setData(data);\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n}\n\nclass Grid {\n    constructor(pane) {\n        this._private__paneView = new GridPaneView(pane);\n    }\n    _internal_paneView() {\n        return this._private__paneView;\n    }\n}\n\nconst defLogFormula = {\n    _internal_logicalOffset: 4,\n    _internal_coordOffset: 0.0001,\n};\nfunction fromPercent(value, baseValue) {\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toPercentRange(priceRange, baseValue) {\n    const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n    value -= 100;\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue + 100;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n    const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n    const m = Math.abs(price);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n    return ((price < 0) ? -res : res);\n}\nfunction fromLog(logical, logFormula) {\n    const m = Math.abs(logical);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n    return (logical < 0) ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = toLog(priceRange._internal_minValue(), logFormula);\n    const max = toLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return false;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n    if (range === null) {\n        return defLogFormula;\n    }\n    const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n    if (diff >= 1 || diff < 1e-15) {\n        return defLogFormula;\n    }\n    const digits = Math.ceil(Math.abs(Math.log10(diff)));\n    const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n    const coordOffset = 1 / Math.pow(10, logicalOffset);\n    return {\n        _internal_logicalOffset: logicalOffset,\n        _internal_coordOffset: coordOffset,\n    };\n}\nfunction logFormulasAreSame(f1, f2) {\n    return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\n\nclass PriceTickSpanCalculator {\n    constructor(base, integralDividers) {\n        this._private__base = base;\n        this._private__integralDividers = integralDividers;\n        if (isBaseDecimal(this._private__base)) {\n            this._private__fractionalDividers = [2, 2.5, 2];\n        }\n        else {\n            this._private__fractionalDividers = [];\n            for (let baseRest = this._private__base; baseRest !== 1;) {\n                if ((baseRest % 2) === 0) {\n                    this._private__fractionalDividers.push(2);\n                    baseRest /= 2;\n                }\n                else if ((baseRest % 5) === 0) {\n                    this._private__fractionalDividers.push(2, 2.5);\n                    baseRest /= 5;\n                }\n                else {\n                    throw new Error('unexpected base');\n                }\n                if (this._private__fractionalDividers.length > 100) {\n                    throw new Error('something wrong with base');\n                }\n            }\n        }\n    }\n    _internal_tickSpan(high, low, maxTickSpan) {\n        const minMovement = (this._private__base === 0) ? (0) : (1 / this._private__base);\n        let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n        let index = 0;\n        let c = this._private__integralDividers[0];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // the second part is actual for small with very small values like 1e-10\n            // greaterOrEqual fails for such values\n            const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n            const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n            if (!haveToContinue) {\n                break;\n            }\n            resultTickSpan /= c;\n            c = this._private__integralDividers[++index % this._private__integralDividers.length];\n        }\n        if (resultTickSpan <= (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n            resultTickSpan = minMovement;\n        }\n        resultTickSpan = Math.max(1, resultTickSpan);\n        if ((this._private__fractionalDividers.length > 0) && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n            index = 0;\n            c = this._private__fractionalDividers[0];\n            while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n                resultTickSpan /= c;\n                c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n            }\n        }\n        return resultTickSpan;\n    }\n}\n\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n    constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n        this._private__marks = [];\n        this._private__priceScale = priceScale;\n        this._private__base = base;\n        this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n        this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n    }\n    _internal_tickSpan(high, low) {\n        if (high < low) {\n            throw new Error('high < low');\n        }\n        const scaleHeight = this._private__priceScale._internal_height();\n        const markHeight = this._private__tickMarkHeight();\n        const maxTickSpan = (high - low) * markHeight / scaleHeight;\n        const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n        const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n        const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n        const spans = [];\n        spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n        return min(spans);\n    }\n    _internal_rebuildTickMarks() {\n        const priceScale = this._private__priceScale;\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue === null) {\n            this._private__marks = [];\n            return;\n        }\n        const scaleHeight = priceScale._internal_height();\n        const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n        const top = this._private__coordinateToLogicalFunc(0, firstValue);\n        const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n        const minCoord = extraTopBottomMargin;\n        const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n        const high = Math.max(bottom, top);\n        const low = Math.min(bottom, top);\n        if (high === low) {\n            this._private__marks = [];\n            return;\n        }\n        let span = this._internal_tickSpan(high, low);\n        let mod = high % span;\n        mod += mod < 0 ? span : 0;\n        const sign = (high >= low) ? 1 : -1;\n        let prevCoord = null;\n        let targetIndex = 0;\n        for (let logical = high - mod; logical > low; logical -= span) {\n            const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n            // check if there is place for it\n            // this is required for log scale\n            if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n                continue;\n            }\n            // check if a tick mark is partially visible and skip it if entireTextOnly is true\n            if (coord < minCoord || coord > maxCoord) {\n                continue;\n            }\n            if (targetIndex < this._private__marks.length) {\n                this._private__marks[targetIndex]._internal_coord = coord;\n                this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n            }\n            else {\n                this._private__marks.push({\n                    _internal_coord: coord,\n                    _internal_label: priceScale._internal_formatLogical(logical),\n                });\n            }\n            targetIndex++;\n            prevCoord = coord;\n            if (priceScale._internal_isLog()) {\n                // recalc span\n                span = this._internal_tickSpan(logical * sign, low);\n            }\n        }\n        this._private__marks.length = targetIndex;\n    }\n    _internal_marks() {\n        return this._private__marks;\n    }\n    _private__fontHeight() {\n        return this._private__priceScale._internal_fontSize();\n    }\n    _private__tickMarkHeight() {\n        return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n    }\n}\n\nfunction sortSources(sources) {\n    return sources.slice().sort((s1, s2) => {\n        return (ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder()));\n    });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n    /**\n     * Price scale shows prices. Price range changes linearly.\n     */\n    PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Price scale shows prices. Price range changes logarithmically.\n     */\n    PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n    /**\n     * Price scale shows percentage values according the first visible value of the price scale.\n     * The first visible value is 0% in this mode.\n     */\n    PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n    /**\n     * The same as percentage mode, but the first value is moved to 100.\n     */\n    PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n    constructor(id, options, layoutOptions, localizationOptions) {\n        this._private__height = 0;\n        this._private__internalHeightCache = null;\n        this._private__priceRange = null;\n        this._private__priceRangeSnapshot = null;\n        this._private__invalidatedForRange = { _internal_isValid: false, _internal_visibleBars: null };\n        this._private__marginAbove = 0;\n        this._private__marginBelow = 0;\n        this._private__onMarksChanged = new Delegate();\n        this._private__modeChanged = new Delegate();\n        this._private__dataSources = [];\n        this._private__cachedOrderedSources = null;\n        this._private__marksCache = null;\n        this._private__scaleStartPoint = null;\n        this._private__scrollStartPoint = null;\n        this._private__formatter = defaultPriceFormatter;\n        this._private__logFormula = logFormulaForPriceRange(null);\n        this._private__id = id;\n        this._private__options = options;\n        this._private__layoutOptions = layoutOptions;\n        this._private__localizationOptions = localizationOptions;\n        this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    }\n    _internal_id() {\n        return this._private__id;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_updateFormatter();\n        if (options.mode !== undefined) {\n            this._internal_setMode({ _internal_mode: options.mode });\n        }\n        if (options.scaleMargins !== undefined) {\n            const top = ensureDefined(options.scaleMargins.top);\n            const bottom = ensureDefined(options.scaleMargins.bottom);\n            if (top < 0 || top > 1) {\n                throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n            }\n            if (bottom < 0 || bottom > 1) {\n                throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n            }\n            if (top + bottom > 1) {\n                throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n            }\n            this._private__invalidateInternalHeightCache();\n            this._private__marksCache = null;\n        }\n    }\n    _internal_isAutoScale() {\n        return this._private__options.autoScale;\n    }\n    _internal_isLog() {\n        return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n    }\n    _internal_isPercentage() {\n        return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n    }\n    _internal_isIndexedTo100() {\n        return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n    }\n    _internal_mode() {\n        return {\n            _internal_autoScale: this._private__options.autoScale,\n            _internal_isInverted: this._private__options.invertScale,\n            _internal_mode: this._private__options.mode,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _internal_setMode(newMode) {\n        const oldMode = this._internal_mode();\n        let priceRange = null;\n        if (newMode._internal_autoScale !== undefined) {\n            this._private__options.autoScale = newMode._internal_autoScale;\n        }\n        if (newMode._internal_mode !== undefined) {\n            this._private__options.mode = newMode._internal_mode;\n            if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n                this._private__options.autoScale = true;\n            }\n            // TODO: Remove after making rebuildTickMarks lazy\n            this._private__invalidatedForRange._internal_isValid = false;\n        }\n        // define which scale converted from\n        if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n                priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n                if (priceRange !== null) {\n                    this._internal_setPriceRange(priceRange);\n                }\n            }\n            else {\n                this._private__options.autoScale = true;\n            }\n        }\n        // define which scale converted to\n        if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n            if (priceRange !== null) {\n                this._internal_setPriceRange(priceRange);\n            }\n        }\n        const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n        if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n            this._internal_updateFormatter();\n        }\n        if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n            this._internal_updateFormatter();\n        }\n        if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n            this._private__options.invertScale = newMode._internal_isInverted;\n            this._private__onIsInvertedChanged();\n        }\n        this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n    }\n    _internal_modeChanged() {\n        return this._private__modeChanged;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setHeight(value) {\n        if (this._private__height === value) {\n            return;\n        }\n        this._private__height = value;\n        this._private__invalidateInternalHeightCache();\n        this._private__marksCache = null;\n    }\n    _internal_internalHeight() {\n        if (this._private__internalHeightCache) {\n            return this._private__internalHeightCache;\n        }\n        const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n        this._private__internalHeightCache = res;\n        return res;\n    }\n    _internal_priceRange() {\n        this._private__makeSureItIsValid();\n        return this._private__priceRange;\n    }\n    _internal_setPriceRange(newPriceRange, isForceSetValue) {\n        const oldPriceRange = this._private__priceRange;\n        if (!isForceSetValue &&\n            !(oldPriceRange === null && newPriceRange !== null) &&\n            (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n            return;\n        }\n        this._private__marksCache = null;\n        this._private__priceRange = newPriceRange;\n    }\n    _internal_isEmpty() {\n        this._private__makeSureItIsValid();\n        return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n    }\n    _internal_invertedCoordinate(coordinate) {\n        return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n    }\n    _internal_priceToCoordinate(price, baseValue) {\n        if (this._internal_isPercentage()) {\n            price = toPercent(price, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            price = toIndexedTo100(price, baseValue);\n        }\n        return this._private__logicalToCoordinate(price, baseValue);\n    }\n    _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? points.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const point = points[i];\n            const price = point._internal_price;\n            if (isNaN(price)) {\n                continue;\n            }\n            let logical = price;\n            if (transformFn !== null) {\n                logical = transformFn(point._internal_price, baseValue);\n            }\n            const invCoordinate = bh + hmm * (logical - min);\n            const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            point._internal_y = coordinate;\n        }\n    }\n    _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? pricesList.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const bar = pricesList[i];\n            let openLogical = bar._internal_open;\n            let highLogical = bar._internal_high;\n            let lowLogical = bar._internal_low;\n            let closeLogical = bar._internal_close;\n            if (transformFn !== null) {\n                openLogical = transformFn(bar._internal_open, baseValue);\n                highLogical = transformFn(bar._internal_high, baseValue);\n                lowLogical = transformFn(bar._internal_low, baseValue);\n                closeLogical = transformFn(bar._internal_close, baseValue);\n            }\n            let invCoordinate = bh + hmm * (openLogical - min);\n            let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_openY = coordinate;\n            invCoordinate = bh + hmm * (highLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_highY = coordinate;\n            invCoordinate = bh + hmm * (lowLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_lowY = coordinate;\n            invCoordinate = bh + hmm * (closeLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_closeY = coordinate;\n        }\n    }\n    _internal_coordinateToPrice(coordinate, baseValue) {\n        const logical = this._private__coordinateToLogical(coordinate, baseValue);\n        return this._internal_logicalToPrice(logical, baseValue);\n    }\n    _internal_logicalToPrice(logical, baseValue) {\n        let value = logical;\n        if (this._internal_isPercentage()) {\n            value = fromPercent(value, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            value = fromIndexedTo100(value, baseValue);\n        }\n        return value;\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources) {\n            return this._private__cachedOrderedSources;\n        }\n        let sources = [];\n        for (let i = 0; i < this._private__dataSources.length; i++) {\n            const ds = this._private__dataSources[i];\n            if (ds._internal_zorder() === null) {\n                ds._internal_setZorder(i + 1);\n            }\n            sources.push(ds);\n        }\n        sources = sortSources(sources);\n        this._private__cachedOrderedSources = sources;\n        return this._private__cachedOrderedSources;\n    }\n    _internal_addDataSource(source) {\n        if (this._private__dataSources.indexOf(source) !== -1) {\n            return;\n        }\n        this._private__dataSources.push(source);\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        if (index === -1) {\n            throw new Error('source is not attached to scale');\n        }\n        this._private__dataSources.splice(index, 1);\n        if (this._private__dataSources.length === 0) {\n            this._internal_setMode({\n                _internal_autoScale: true,\n            });\n            // if no sources on price scale let's clear price range cache as well as enabling auto scale\n            this._internal_setPriceRange(null);\n        }\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_firstValue() {\n        // TODO: cache the result\n        let result = null;\n        for (const source of this._private__dataSources) {\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n                result = firstValue;\n            }\n        }\n        return result === null ? null : result._internal_value;\n    }\n    _internal_isInverted() {\n        return this._private__options.invertScale;\n    }\n    _internal_marks() {\n        const firstValueIsNull = this._internal_firstValue() === null;\n        // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n        // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n        // we could display an empty price scale, but this is not good from UX\n        // so in this case we need to keep an previous marks to display them on the scale\n        // as one of possible examples for this situation could be the following:\n        // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n        // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n        if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n            return this._private__marksCache._internal_marks;\n        }\n        this._private__markBuilder._internal_rebuildTickMarks();\n        const marks = this._private__markBuilder._internal_marks();\n        this._private__marksCache = { _internal_marks: marks, _internal_firstValueIsNull: firstValueIsNull };\n        this._private__onMarksChanged._internal_fire();\n        return marks;\n    }\n    _internal_onMarksChanged() {\n        return this._private__onMarksChanged;\n    }\n    _internal_startScale(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        // invert x\n        this._private__scaleStartPoint = this._private__height - x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scaleTo(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._internal_setMode({\n            _internal_autoScale: false,\n        });\n        // invert x\n        x = this._private__height - x;\n        if (x < 0) {\n            x = 0;\n        }\n        let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        scaleCoeff = Math.max(scaleCoeff, 0.1);\n        newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n        this._internal_setPriceRange(newPriceRange);\n    }\n    _internal_endScale() {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_startScroll(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scrollTo(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n        let pixelDelta = x - this._private__scrollStartPoint;\n        if (this._internal_isInverted()) {\n            pixelDelta *= -1;\n        }\n        const priceDelta = pixelDelta * priceUnitsPerPixel;\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        newPriceRange._internal_shift(priceDelta);\n        this._internal_setPriceRange(newPriceRange, true);\n        this._private__marksCache = null;\n    }\n    _internal_endScroll() {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_formatter() {\n        if (!this._private__formatter) {\n            this._internal_updateFormatter();\n        }\n        return this._private__formatter;\n    }\n    _internal_formatPrice(price, firstValue) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(toPercent(price, firstValue));\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n            default:\n                return this._private__formatPrice(price);\n        }\n    }\n    _internal_formatLogical(logical) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(logical);\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(logical);\n            default:\n                return this._private__formatPrice(logical);\n        }\n    }\n    _internal_formatPriceAbsolute(price) {\n        return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n    }\n    _internal_formatPricePercentage(price, baseValue) {\n        price = toPercent(price, baseValue);\n        return this._private__formatPercentage(price, percentageFormatter);\n    }\n    _internal_sourcesForAutoScale() {\n        return this._private__dataSources;\n    }\n    _internal_recalculatePriceRange(visibleBars) {\n        this._private__invalidatedForRange = {\n            _internal_visibleBars: visibleBars,\n            _internal_isValid: false,\n        };\n    }\n    _internal_updateAllViews() {\n        this._private__dataSources.forEach((s) => s._internal_updateAllViews());\n    }\n    _internal_updateFormatter() {\n        this._private__marksCache = null;\n        const formatterSource = this._private__formatterSource();\n        let base = 100;\n        if (formatterSource !== null) {\n            base = Math.round(1 / formatterSource._internal_minMove());\n        }\n        this._private__formatter = defaultPriceFormatter;\n        if (this._internal_isPercentage()) {\n            this._private__formatter = percentageFormatter;\n            base = 100;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            this._private__formatter = new PriceFormatter(100, 1);\n            base = 100;\n        }\n        else {\n            if (formatterSource !== null) {\n                // user\n                this._private__formatter = formatterSource._internal_formatter();\n            }\n        }\n        this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    _internal_invalidateSourcesCache() {\n        this._private__cachedOrderedSources = null;\n    }\n    /**\n     * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n     */\n    _private__formatterSource() {\n        return this._private__dataSources[0] || null;\n    }\n    _private__topMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow\n            : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n    }\n    _private__bottomMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove\n            : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n    }\n    _private__makeSureItIsValid() {\n        if (!this._private__invalidatedForRange._internal_isValid) {\n            this._private__invalidatedForRange._internal_isValid = true;\n            this._private__recalculatePriceRangeImpl();\n        }\n    }\n    _private__invalidateInternalHeightCache() {\n        this._private__internalHeightCache = null;\n    }\n    _private__logicalToCoordinate(logical, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n        const range = ensureNotNull(this._internal_priceRange());\n        const invCoordinate = this._private__bottomMarginPx() +\n            (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n        const coordinate = this._internal_invertedCoordinate(invCoordinate);\n        return coordinate;\n    }\n    _private__coordinateToLogical(coordinate, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        const invCoordinate = this._internal_invertedCoordinate(coordinate);\n        const range = ensureNotNull(this._internal_priceRange());\n        const logical = range._internal_minValue() + range._internal_length() *\n            ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n        return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n    }\n    _private__onIsInvertedChanged() {\n        this._private__marksCache = null;\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    // eslint-disable-next-line complexity\n    _private__recalculatePriceRangeImpl() {\n        const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n        if (visibleBars === null) {\n            return;\n        }\n        let priceRange = null;\n        const sources = this._internal_sourcesForAutoScale();\n        let marginAbove = 0;\n        let marginBelow = 0;\n        for (const source of sources) {\n            if (!source._internal_visible()) {\n                continue;\n            }\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n            let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n            if (sourceRange !== null) {\n                switch (this._private__options.mode) {\n                    case 1 /* PriceScaleMode.Logarithmic */:\n                        sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n                        break;\n                    case 2 /* PriceScaleMode.Percentage */:\n                        sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n                        break;\n                    case 3 /* PriceScaleMode.IndexedTo100 */:\n                        sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n                        break;\n                }\n                if (priceRange === null) {\n                    priceRange = sourceRange;\n                }\n                else {\n                    priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n                }\n                if (autoScaleInfo !== null) {\n                    const margins = autoScaleInfo._internal_margins();\n                    if (margins !== null) {\n                        marginAbove = Math.max(marginAbove, margins.above);\n                        marginBelow = Math.max(marginBelow, margins.below);\n                    }\n                }\n            }\n        }\n        if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n            this._private__marginAbove = marginAbove;\n            this._private__marginBelow = marginBelow;\n            this._private__marksCache = null;\n            this._private__invalidateInternalHeightCache();\n        }\n        if (priceRange !== null) {\n            // keep current range is new is empty\n            if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n                const formatterSource = this._private__formatterSource();\n                const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n                // if price range is degenerated to 1 point let's extend it by 10 min move values\n                // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n                const extendValue = 5 * minMove;\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                }\n                priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n                }\n            }\n            if (this._internal_isLog()) {\n                const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                const newLogFormula = logFormulaForPriceRange(rawRange);\n                if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n                    const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n                    this._private__logFormula = newLogFormula;\n                    priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n                    if (rawSnapshot !== null) {\n                        this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n                    }\n                }\n            }\n            this._internal_setPriceRange(priceRange);\n        }\n        else {\n            // reset empty to default\n            if (this._private__priceRange === null) {\n                this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n                this._private__logFormula = logFormulaForPriceRange(null);\n            }\n        }\n        this._private__invalidatedForRange._internal_isValid = true;\n    }\n    _private__getCoordinateTransformer() {\n        if (this._internal_isPercentage()) {\n            return toPercent;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            return toIndexedTo100;\n        }\n        else if (this._internal_isLog()) {\n            return (price) => toLog(price, this._private__logFormula);\n        }\n        return null;\n    }\n    _private__formatValue(value, formatter, fallbackFormatter) {\n        if (formatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.format(value);\n        }\n        return formatter(value);\n    }\n    _private__formatPrice(price, fallbackFormatter) {\n        return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n    }\n    _private__formatPercentage(percentage, fallbackFormatter) {\n        return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n    }\n}\n\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n    constructor(timeScale, model) {\n        this._private__dataSources = [];\n        this._private__overlaySourcesByScaleId = new Map();\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n        this._private__cachedOrderedSources = null;\n        this._private__destroyed = new Delegate();\n        this._private__timeScale = timeScale;\n        this._private__model = model;\n        this._private__grid = new Grid(this);\n        const options = model._internal_options();\n        this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n        this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n        this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n        this._internal_applyScaleOptions(options);\n    }\n    _internal_applyScaleOptions(options) {\n        if (options.leftPriceScale) {\n            this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n        }\n        if (options.rightPriceScale) {\n            this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n        }\n        if (options.localization) {\n            this._private__leftPriceScale._internal_updateFormatter();\n            this._private__rightPriceScale._internal_updateFormatter();\n        }\n        if (options.overlayPriceScales) {\n            const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n            for (const arr of sourceArrays) {\n                const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n                priceScale._internal_applyOptions(options.overlayPriceScales);\n                if (options.localization) {\n                    priceScale._internal_updateFormatter();\n                }\n            }\n        }\n    }\n    _internal_priceScaleById(id) {\n        switch (id) {\n            case \"left\" /* DefaultPriceScaleId.Left */: {\n                return this._private__leftPriceScale;\n            }\n            case \"right\" /* DefaultPriceScaleId.Right */: {\n                return this._private__rightPriceScale;\n            }\n        }\n        if (this._private__overlaySourcesByScaleId.has(id)) {\n            return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n        }\n        return null;\n    }\n    _internal_destroy() {\n        this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__dataSources.forEach((source) => {\n            if (source._internal_destroy) {\n                source._internal_destroy();\n            }\n        });\n        this._private__destroyed._internal_fire();\n    }\n    _internal_stretchFactor() {\n        return this._private__stretchFactor;\n    }\n    _internal_setStretchFactor(factor) {\n        this._private__stretchFactor = factor;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._internal_updateAllSources();\n    }\n    _internal_setHeight(height) {\n        this._private__height = height;\n        this._private__leftPriceScale._internal_setHeight(height);\n        this._private__rightPriceScale._internal_setHeight(height);\n        // process overlays\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                const priceScale = ds._internal_priceScale();\n                if (priceScale !== null) {\n                    priceScale._internal_setHeight(height);\n                }\n            }\n        });\n        this._internal_updateAllSources();\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_isOverlay(source) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale === null) {\n            return true;\n        }\n        return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n    }\n    _internal_addDataSource(source, targetScaleId, zOrder) {\n        const targetZOrder = (zOrder !== undefined) ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n        this._private__insertDataSource(source, targetScaleId, targetZOrder);\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        assert(index !== -1, 'removeDataSource: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n        if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n            const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n            const overlayIndex = overlaySources.indexOf(source);\n            if (overlayIndex !== -1) {\n                overlaySources.splice(overlayIndex, 1);\n                if (overlaySources.length === 0) {\n                    this._private__overlaySourcesByScaleId.delete(priceScaleId);\n                }\n            }\n        }\n        const priceScale = source._internal_priceScale();\n        // if source has owner, it returns owner's price scale\n        // and it does not have source in their list\n        if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n            priceScale._internal_removeDataSource(source);\n        }\n        if (priceScale !== null) {\n            priceScale._internal_invalidateSourcesCache();\n            this._internal_recalculatePriceScale(priceScale);\n        }\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_priceScalePosition(priceScale) {\n        if (priceScale === this._private__leftPriceScale) {\n            return 'left';\n        }\n        if (priceScale === this._private__rightPriceScale) {\n            return 'right';\n        }\n        return 'overlay';\n    }\n    _internal_leftPriceScale() {\n        return this._private__leftPriceScale;\n    }\n    _internal_rightPriceScale() {\n        return this._private__rightPriceScale;\n    }\n    _internal_startScalePrice(priceScale, x) {\n        priceScale._internal_startScale(x);\n    }\n    _internal_scalePriceTo(priceScale, x) {\n        priceScale._internal_scaleTo(x);\n        // TODO: be more smart and update only affected views\n        this._internal_updateAllSources();\n    }\n    _internal_endScalePrice(priceScale) {\n        priceScale._internal_endScale();\n    }\n    _internal_startScrollPrice(priceScale, x) {\n        priceScale._internal_startScroll(x);\n    }\n    _internal_scrollPriceTo(priceScale, x) {\n        priceScale._internal_scrollTo(x);\n        this._internal_updateAllSources();\n    }\n    _internal_endScrollPrice(priceScale) {\n        priceScale._internal_endScroll();\n    }\n    _internal_updateAllSources() {\n        this._private__dataSources.forEach((source) => {\n            source._internal_updateAllViews();\n        });\n    }\n    _internal_defaultPriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__leftPriceScale;\n        }\n        else if (this._private__dataSources.length !== 0) {\n            priceScale = this._private__dataSources[0]._internal_priceScale();\n        }\n        if (priceScale === null) {\n            priceScale = this._private__rightPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_defaultVisiblePriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible) {\n            priceScale = this._private__leftPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_recalculatePriceScale(priceScale) {\n        if (priceScale === null || !priceScale._internal_isAutoScale()) {\n            return;\n        }\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _internal_resetPriceScale(priceScale) {\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        priceScale._internal_setMode({ _internal_autoScale: true });\n        if (visibleBars !== null) {\n            priceScale._internal_recalculatePriceRange(visibleBars);\n        }\n        this._internal_updateAllSources();\n    }\n    _internal_momentaryAutoScale() {\n        this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n        this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n    }\n    _internal_recalculate() {\n        this._internal_recalculatePriceScale(this._private__leftPriceScale);\n        this._internal_recalculatePriceScale(this._private__rightPriceScale);\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                this._internal_recalculatePriceScale(ds._internal_priceScale());\n            }\n        });\n        this._internal_updateAllSources();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources === null) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_onDestroyed() {\n        return this._private__destroyed;\n    }\n    _internal_grid() {\n        return this._private__grid;\n    }\n    _private__recalculatePriceScaleImpl(priceScale) {\n        // TODO: can use this checks\n        const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n        if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n            const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n            if (visibleBars !== null) {\n                priceScale._internal_recalculatePriceRange(visibleBars);\n            }\n        }\n        priceScale._internal_updateAllViews();\n    }\n    _private__getZOrderMinMax() {\n        const sources = this._internal_orderedSources();\n        if (sources.length === 0) {\n            return { _internal_minZOrder: 0, _internal_maxZOrder: 0 };\n        }\n        let minZOrder = 0;\n        let maxZOrder = 0;\n        for (let j = 0; j < sources.length; j++) {\n            const ds = sources[j];\n            const zOrder = ds._internal_zorder();\n            if (zOrder !== null) {\n                if (zOrder < minZOrder) {\n                    minZOrder = zOrder;\n                }\n                if (zOrder > maxZOrder) {\n                    maxZOrder = zOrder;\n                }\n            }\n        }\n        return { _internal_minZOrder: minZOrder, _internal_maxZOrder: maxZOrder };\n    }\n    _private__insertDataSource(source, priceScaleId, zOrder) {\n        let priceScale = this._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n        }\n        this._private__dataSources.push(source);\n        if (!isDefaultPriceScale(priceScaleId)) {\n            const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n            overlaySources.push(source);\n            this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n        }\n        priceScale._internal_addDataSource(source);\n        source._internal_setPriceScale(priceScale);\n        source._internal_setZorder(zOrder);\n        this._internal_recalculatePriceScale(priceScale);\n        this._private__cachedOrderedSources = null;\n    }\n    _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n        if (oldMode._internal_mode === newMode._internal_mode) {\n            return;\n        }\n        // momentary auto scale if we toggle percentage/indexedTo100 mode\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _private__createPriceScale(id, options) {\n        const actualOptions = Object.assign({ visible: true, autoScale: true }, clone(options));\n        const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n        priceScale._internal_setHeight(this._internal_height());\n        return priceScale;\n    }\n}\n\nclass FormattedLabelsCache {\n    constructor(format, horzScaleBehavior, size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__cache = new Map();\n        this._private__tick2Labels = new Map();\n        this._private__format = format;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__maxSize = size;\n    }\n    _internal_format(tickMark) {\n        const time = tickMark.time;\n        const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n        const tick = this._private__cache.get(cacheKey);\n        if (tick !== undefined) {\n            return tick._internal_string;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n            this._private__tick2Labels.delete(this._private__oldestTick);\n            this._private__cache.delete(ensureDefined(oldestValue));\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        const str = this._private__format(tickMark);\n        this._private__cache.set(cacheKey, { _internal_string: str, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return str;\n    }\n}\n\nclass RangeImpl {\n    constructor(left, right) {\n        assert(left <= right, 'right should be >= left');\n        this._private__left = left;\n        this._private__right = right;\n    }\n    _internal_left() {\n        return this._private__left;\n    }\n    _internal_right() {\n        return this._private__right;\n    }\n    _internal_count() {\n        return this._private__right - this._private__left + 1;\n    }\n    _internal_contains(index) {\n        return this._private__left <= index && index <= this._private__right;\n    }\n    _internal_equals(other) {\n        return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n    }\n}\nfunction areRangesEqual(first, second) {\n    if (first === null || second === null) {\n        return first === second;\n    }\n    return first._internal_equals(second);\n}\n\nclass TickMarks {\n    constructor() {\n        this._private__marksByWeight = new Map();\n        this._private__cache = null;\n        this._private__uniformDistribution = false;\n    }\n    _internal_setUniformDistribution(val) {\n        this._private__uniformDistribution = val;\n        this._private__cache = null;\n    }\n    _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n        this._private__removeMarksSinceIndex(firstChangedPointIndex);\n        this._private__cache = null;\n        for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n            const point = newPoints[index];\n            let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n            if (marksForWeight === undefined) {\n                marksForWeight = [];\n                this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n            }\n            marksForWeight.push({\n                index: index,\n                time: point.time,\n                weight: point.timeWeight,\n                originalTime: point.originalTime,\n            });\n        }\n    }\n    _internal_build(spacing, maxWidth) {\n        const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n        if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n            this._private__cache = {\n                _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n                _internal_maxIndexesPerMark: maxIndexesPerMark,\n            };\n        }\n        return this._private__cache._internal_marks;\n    }\n    _private__removeMarksSinceIndex(sinceIndex) {\n        if (sinceIndex === 0) {\n            this._private__marksByWeight.clear();\n            return;\n        }\n        const weightsToClear = [];\n        this._private__marksByWeight.forEach((marks, timeWeight) => {\n            if (sinceIndex <= marks[0].index) {\n                weightsToClear.push(timeWeight);\n            }\n            else {\n                marks.splice(lowerBound(marks, sinceIndex, (tm) => tm.index < sinceIndex), Infinity);\n            }\n        });\n        for (const weight of weightsToClear) {\n            this._private__marksByWeight.delete(weight);\n        }\n    }\n    _private__buildMarksImpl(maxIndexesPerMark) {\n        let marks = [];\n        for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n            if (!this._private__marksByWeight.get(weight)) {\n                continue;\n            }\n            // Built tickMarks are now prevMarks, and marks it as new array\n            const prevMarks = marks;\n            marks = [];\n            const prevMarksLength = prevMarks.length;\n            let prevMarksPointer = 0;\n            const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n            const currentWeightLength = currentWeight.length;\n            let rightIndex = Infinity;\n            let leftIndex = -Infinity;\n            for (let i = 0; i < currentWeightLength; i++) {\n                const mark = currentWeight[i];\n                const currentIndex = mark.index;\n                // Determine indexes with which current index will be compared\n                // All marks to the right is moved to new array\n                while (prevMarksPointer < prevMarksLength) {\n                    const lastMark = prevMarks[prevMarksPointer];\n                    const lastIndex = lastMark.index;\n                    if (lastIndex < currentIndex) {\n                        prevMarksPointer++;\n                        marks.push(lastMark);\n                        leftIndex = lastIndex;\n                        rightIndex = Infinity;\n                    }\n                    else {\n                        rightIndex = lastIndex;\n                        break;\n                    }\n                }\n                if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n                    // TickMark fits. Place it into new array\n                    marks.push(mark);\n                    leftIndex = currentIndex;\n                }\n                else {\n                    if (this._private__uniformDistribution) {\n                        return prevMarks;\n                    }\n                }\n            }\n            // Place all unused tickMarks into new array;\n            for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n                marks.push(prevMarks[prevMarksPointer]);\n            }\n        }\n        return marks;\n    }\n}\n\nclass TimeScaleVisibleRange {\n    constructor(logicalRange) {\n        this._private__logicalRange = logicalRange;\n    }\n    _internal_strictRange() {\n        if (this._private__logicalRange === null) {\n            return null;\n        }\n        return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n    }\n    _internal_logicalRange() {\n        return this._private__logicalRange;\n    }\n    static _internal_invalid() {\n        return new TimeScaleVisibleRange(null);\n    }\n}\n\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n    constructor(model, options, localizationOptions, horzScaleBehavior) {\n        this._private__width = 0;\n        this._private__baseIndexOrNull = null;\n        this._private__points = [];\n        this._private__scrollStartPoint = null;\n        this._private__scaleStartPoint = null;\n        this._private__tickMarks = new TickMarks();\n        this._private__formattedByWeight = new Map();\n        this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n        this._private__visibleRangeInvalidated = true;\n        this._private__visibleBarsChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__optionsApplied = new Delegate();\n        this._private__commonTransitionStartState = null;\n        this._private__timeMarksCache = null;\n        this._private__labels = [];\n        this._private__options = options;\n        this._private__localizationOptions = localizationOptions;\n        this._private__rightOffset = options.rightOffset;\n        this._private__barSpacing = options.barSpacing;\n        this._private__model = model;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__updateDateTimeFormatter();\n        this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyLocalizationOptions(localizationOptions) {\n        merge(this._private__localizationOptions, localizationOptions);\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_applyOptions(options, localizationOptions) {\n        var _a;\n        merge(this._private__options, options);\n        if (this._private__options.fixLeftEdge) {\n            this._private__doFixLeftEdge();\n        }\n        if (this._private__options.fixRightEdge) {\n            this._private__doFixRightEdge();\n        }\n        // note that bar spacing should be applied before right offset\n        // because right offset depends on bar spacing\n        if (options.barSpacing !== undefined) {\n            this._private__model._internal_setBarSpacing(options.barSpacing);\n        }\n        if (options.rightOffset !== undefined) {\n            this._private__model._internal_setRightOffset(options.rightOffset);\n        }\n        if (options.minBarSpacing !== undefined) {\n            // yes, if we apply min bar spacing then we need to correct bar spacing\n            // the easiest way is to apply it once again\n            this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n        }\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n        this._private__optionsApplied._internal_fire();\n    }\n    _internal_indexToTime(index) {\n        var _a, _b;\n        return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a.time) !== null && _b !== void 0 ? _b : null;\n    }\n    _internal_indexToTimeScalePoint(index) {\n        var _a;\n        return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    _internal_timeToIndex(time, findNearest) {\n        if (this._private__points.length < 1) {\n            // no time points available\n            return null;\n        }\n        if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n            // special case\n            return findNearest ? this._private__points.length - 1 : null;\n        }\n        const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n            return findNearest ? index : null;\n        }\n        return index;\n    }\n    _internal_isEmpty() {\n        return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n    }\n    _internal_hasPoints() {\n        return this._private__points.length > 0;\n    }\n    // strict range: integer indices of the bars in the visible range rounded in more wide direction\n    _internal_visibleStrictRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_strictRange();\n    }\n    _internal_visibleLogicalRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_logicalRange();\n    }\n    _internal_visibleTimeRange() {\n        const visibleBars = this._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const range = {\n            from: visibleBars._internal_left(),\n            to: visibleBars._internal_right(),\n        };\n        return this._internal_timeRangeForLogicalRange(range);\n    }\n    _internal_timeRangeForLogicalRange(range) {\n        const from = Math.round(range.from);\n        const to = Math.round(range.to);\n        const firstIndex = ensureNotNull(this._private__firstIndex());\n        const lastIndex = ensureNotNull(this._private__lastIndex());\n        return {\n            from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n            to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to))),\n        };\n    }\n    _internal_logicalRangeForTimeRange(range) {\n        return {\n            from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n            to: ensureNotNull(this._internal_timeToIndex(range.to, true)),\n        };\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_setWidth(newWidth) {\n        if (!isFinite(newWidth) || newWidth <= 0) {\n            return;\n        }\n        if (this._private__width === newWidth) {\n            return;\n        }\n        // when we change the width and we need to correct visible range because of fixing left edge\n        // we need to check the previous visible range rather than the new one\n        // because it might be updated by changing width, bar spacing, etc\n        // but we need to try to keep the same range\n        const previousVisibleRange = this._internal_visibleLogicalRange();\n        const oldWidth = this._private__width;\n        this._private__width = newWidth;\n        this._private__visibleRangeInvalidated = true;\n        if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n            // recalculate bar spacing\n            const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n            this._private__barSpacing = newBarSpacing;\n        }\n        // if time scale is scrolled to the end of data and we have fixed right edge\n        // keep left edge instead of right\n        // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n        if (this._private__options.fixLeftEdge) {\n            // note that logical left range means not the middle of a bar (it's the left border)\n            if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n                const delta = oldWidth - newWidth;\n                // reduce  _rightOffset means move right\n                // we could move more than required - this will be fixed by _correctOffset()\n                this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n        // updating bar spacing should be first because right offset depends on it\n        this._private__correctBarSpacing();\n        this._private__correctOffset();\n    }\n    _internal_indexToCoordinate(index) {\n        if (this._internal_isEmpty() || !isInteger(index)) {\n            return 0;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const deltaFromRight = baseIndex + this._private__rightOffset - index;\n        const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n        return coordinate;\n    }\n    _internal_indexesToCoordinates(points, visibleRange) {\n        const baseIndex = this._internal_baseIndex();\n        const indexFrom = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const indexTo = (visibleRange === undefined) ? points.length : visibleRange.to;\n        for (let i = indexFrom; i < indexTo; i++) {\n            const index = points[i]._internal_time;\n            const deltaFromRight = baseIndex + this._private__rightOffset - index;\n            const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n            points[i]._internal_x = coordinate;\n        }\n    }\n    _internal_coordinateToIndex(x) {\n        return Math.ceil(this._private__coordinateToFloatIndex(x));\n    }\n    _internal_setRightOffset(offset) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__rightOffset = offset;\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_barSpacing() {\n        return this._private__barSpacing;\n    }\n    _internal_setBarSpacing(newBarSpacing) {\n        this._private__setBarSpacing(newBarSpacing);\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_rightOffset() {\n        return this._private__rightOffset;\n    }\n    // eslint-disable-next-line complexity\n    _internal_marks() {\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        if (this._private__timeMarksCache !== null) {\n            return this._private__timeMarksCache;\n        }\n        const spacing = this._private__barSpacing;\n        const fontSize = this._private__model._internal_options().layout.fontSize;\n        const pixelsPer8Characters = (fontSize + 4) * 5;\n        const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n        const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n        const indexPerLabel = Math.round(maxLabelWidth / spacing);\n        const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n        const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n        const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n        const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n        const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n        const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n        const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n        const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n        const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n        let targetIndex = 0;\n        for (const tm of items) {\n            if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n                continue;\n            }\n            let label;\n            if (targetIndex < this._private__labels.length) {\n                label = this._private__labels[targetIndex];\n                label.coord = this._internal_indexToCoordinate(tm.index);\n                label.label = this._private__formatLabel(tm);\n                label.weight = tm.weight;\n            }\n            else {\n                label = {\n                    needAlignCoordinate: false,\n                    coord: this._internal_indexToCoordinate(tm.index),\n                    label: this._private__formatLabel(tm),\n                    weight: tm.weight,\n                };\n                this._private__labels.push(label);\n            }\n            if (this._private__barSpacing > (maxLabelWidth / 2) && !isAllScalingAndScrollingDisabled) {\n                // if there is enough space then let's show all tick marks as usual\n                label.needAlignCoordinate = false;\n            }\n            else {\n                // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n                // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n                label.needAlignCoordinate = (isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel) || (isRightEdgeFixed && tm.index >= indexOfSecondLastLabel);\n            }\n            targetIndex++;\n        }\n        this._private__labels.length = targetIndex;\n        this._private__timeMarksCache = this._private__labels;\n        return this._private__labels;\n    }\n    _internal_restoreDefault() {\n        this._private__visibleRangeInvalidated = true;\n        this._internal_setBarSpacing(this._private__options.barSpacing);\n        this._internal_setRightOffset(this._private__options.rightOffset);\n    }\n    _internal_setBaseIndex(baseIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__baseIndexOrNull = baseIndex;\n        this._private__correctOffset();\n        this._private__doFixLeftEdge();\n    }\n    /**\n     * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n     *\n     * @param zoomPoint - X coordinate of the point to apply the zoom.\n     * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n     * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n     * Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoom(zoomPoint, scale) {\n        const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n        const barSpacing = this._internal_barSpacing();\n        const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n        // zoom in/out bar spacing\n        this._internal_setBarSpacing(newBarSpacing);\n        if (!this._private__options.rightBarStaysOnScroll) {\n            // and then correct right offset to move index under zoomPoint back to its coordinate\n            this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n        }\n    }\n    _internal_startScale(x) {\n        if (this._private__scrollStartPoint) {\n            this._internal_endScroll();\n        }\n        if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scaleStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scaleTo(x) {\n        if (this._private__commonTransitionStartState === null) {\n            return;\n        }\n        const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n        const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n        if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n            return;\n        }\n        this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n    }\n    _internal_endScale() {\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_startScroll(x) {\n        if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scrollTo(x) {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n        this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n        this._private__visibleRangeInvalidated = true;\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n    }\n    _internal_endScroll() {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_scrollToRealTime() {\n        this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n    }\n    _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n        if (!isFinite(offset)) {\n            throw new RangeError('offset is required and must be finite number');\n        }\n        if (!isFinite(animationDuration) || animationDuration <= 0) {\n            throw new RangeError('animationDuration (optional) must be finite positive number');\n        }\n        const source = this._private__rightOffset;\n        const animationStart = performance.now();\n        this._private__model._internal_setTimeScaleAnimation({\n            _internal_finished: (time) => (time - animationStart) / animationDuration >= 1,\n            _internal_getPosition: (time) => {\n                const animationProgress = (time - animationStart) / animationDuration;\n                const finishAnimation = animationProgress >= 1;\n                return finishAnimation ? offset : source + (offset - source) * animationProgress;\n            },\n        });\n    }\n    _internal_update(newPoints, firstChangedPointIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__points = newPoints;\n        this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n        this._private__correctOffset();\n    }\n    _internal_visibleBarsChanged() {\n        return this._private__visibleBarsChanged;\n    }\n    _internal_logicalRangeChanged() {\n        return this._private__logicalRangeChanged;\n    }\n    _internal_optionsApplied() {\n        return this._private__optionsApplied;\n    }\n    _internal_baseIndex() {\n        // null is used to known that baseIndex is not set yet\n        // so in methods which should known whether it is set or not\n        // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n        // see minRightOffset for example\n        return this._private__baseIndexOrNull || 0;\n    }\n    _internal_setVisibleRange(range) {\n        const length = range._internal_count();\n        this._private__setBarSpacing(this._private__width / length);\n        this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n        this._private__correctOffset();\n        this._private__visibleRangeInvalidated = true;\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_fitContent() {\n        const first = this._private__firstIndex();\n        const last = this._private__lastIndex();\n        if (first === null || last === null) {\n            return;\n        }\n        this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n    }\n    _internal_setLogicalRange(range) {\n        const barRange = new RangeImpl(range.from, range.to);\n        this._internal_setVisibleRange(barRange);\n    }\n    _internal_formatDateTime(timeScalePoint) {\n        if (this._private__localizationOptions.timeFormatter !== undefined) {\n            return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n        }\n        return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n    }\n    _private__isAllScalingAndScrollingDisabled() {\n        const { handleScroll, handleScale } = this._private__model._internal_options();\n        return !handleScroll.horzTouchDrag\n            && !handleScroll.mouseWheel\n            && !handleScroll.pressedMouseMove\n            && !handleScroll.vertTouchDrag\n            && !handleScale.axisDoubleClickReset.time\n            && !handleScale.axisPressedMouseMove.time\n            && !handleScale.mouseWheel\n            && !handleScale.pinch;\n    }\n    _private__firstIndex() {\n        return this._private__points.length === 0 ? null : 0;\n    }\n    _private__lastIndex() {\n        return this._private__points.length === 0 ? null : (this._private__points.length - 1);\n    }\n    _private__rightOffsetForCoordinate(x) {\n        return (this._private__width - 1 - x) / this._private__barSpacing;\n    }\n    _private__coordinateToFloatIndex(x) {\n        const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n        const baseIndex = this._internal_baseIndex();\n        const index = baseIndex + this._private__rightOffset - deltaFromRight;\n        // JavaScript uses very strange rounding\n        // we need rounding to avoid problems with calculation errors\n        return Math.round(index * 1000000) / 1000000;\n    }\n    _private__setBarSpacing(newBarSpacing) {\n        const oldBarSpacing = this._private__barSpacing;\n        this._private__barSpacing = newBarSpacing;\n        this._private__correctBarSpacing();\n        // this._barSpacing might be changed in _correctBarSpacing\n        if (oldBarSpacing !== this._private__barSpacing) {\n            this._private__visibleRangeInvalidated = true;\n            this._private__resetTimeMarksCache();\n        }\n    }\n    _private__updateVisibleRange() {\n        if (!this._private__visibleRangeInvalidated) {\n            return;\n        }\n        this._private__visibleRangeInvalidated = false;\n        if (this._internal_isEmpty()) {\n            this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n            return;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const newBarsLength = this._private__width / this._private__barSpacing;\n        const rightBorder = this._private__rightOffset + baseIndex;\n        const leftBorder = rightBorder - newBarsLength + 1;\n        const logicalRange = new RangeImpl(leftBorder, rightBorder);\n        this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n    }\n    _private__correctBarSpacing() {\n        const minBarSpacing = this._private__minBarSpacing();\n        if (this._private__barSpacing < minBarSpacing) {\n            this._private__barSpacing = minBarSpacing;\n            this._private__visibleRangeInvalidated = true;\n        }\n        if (this._private__width !== 0) {\n            // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n            const maxBarSpacing = this._private__width * 0.5;\n            if (this._private__barSpacing > maxBarSpacing) {\n                this._private__barSpacing = maxBarSpacing;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n    }\n    _private__minBarSpacing() {\n        // if both options are enabled then limit bar spacing so that zooming-out is not possible\n        // if it would cause either the first or last points to move too far from an edge\n        if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n            return this._private__width / this._private__points.length;\n        }\n        return this._private__options.minBarSpacing;\n    }\n    _private__correctOffset() {\n        // block scrolling of to future\n        const maxRightOffset = this._private__maxRightOffset();\n        if (this._private__rightOffset > maxRightOffset) {\n            this._private__rightOffset = maxRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n        // block scrolling of to past\n        const minRightOffset = this._private__minRightOffset();\n        if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n            this._private__rightOffset = minRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__minRightOffset() {\n        const firstIndex = this._private__firstIndex();\n        const baseIndex = this._private__baseIndexOrNull;\n        if (firstIndex === null || baseIndex === null) {\n            return null;\n        }\n        const barsEstimation = this._private__options.fixLeftEdge\n            ? this._private__width / this._private__barSpacing\n            : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n        return firstIndex - baseIndex - 1 + barsEstimation;\n    }\n    _private__maxRightOffset() {\n        return this._private__options.fixRightEdge\n            ? 0\n            : (this._private__width / this._private__barSpacing) - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    }\n    _private__saveCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = {\n            _internal_barSpacing: this._internal_barSpacing(),\n            _internal_rightOffset: this._internal_rightOffset(),\n        };\n    }\n    _private__clearCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = null;\n    }\n    _private__formatLabel(tickMark) {\n        let formatter = this._private__formattedByWeight.get(tickMark.weight);\n        if (formatter === undefined) {\n            formatter = new FormattedLabelsCache((mark) => {\n                return this._private__formatLabelImpl(mark);\n            }, this._private__horzScaleBehavior);\n            this._private__formattedByWeight.set(tickMark.weight, formatter);\n        }\n        return formatter._internal_format(tickMark);\n    }\n    _private__formatLabelImpl(tickMark) {\n        return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n    }\n    _private__setVisibleRange(newVisibleRange) {\n        const oldVisibleRange = this._private__visibleRange;\n        this._private__visibleRange = newVisibleRange;\n        if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n            this._private__visibleBarsChanged._internal_fire();\n        }\n        if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n            this._private__logicalRangeChanged._internal_fire();\n        }\n        // TODO: reset only coords in case when this._visibleBars has not been changed\n        this._private__resetTimeMarksCache();\n    }\n    _private__resetTimeMarksCache() {\n        this._private__timeMarksCache = null;\n    }\n    _private__invalidateTickMarks() {\n        this._private__resetTimeMarksCache();\n        this._private__formattedByWeight.clear();\n    }\n    _private__updateDateTimeFormatter() {\n        this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n    }\n    _private__doFixLeftEdge() {\n        if (!this._private__options.fixLeftEdge) {\n            return;\n        }\n        const firstIndex = this._private__firstIndex();\n        if (firstIndex === null) {\n            return;\n        }\n        const visibleRange = this._internal_visibleStrictRange();\n        if (visibleRange === null) {\n            return;\n        }\n        const delta = visibleRange._internal_left() - firstIndex;\n        if (delta < 0) {\n            const leftEdgeOffset = this._private__rightOffset - delta - 1;\n            this._internal_setRightOffset(leftEdgeOffset);\n        }\n        this._private__correctBarSpacing();\n    }\n    _private__doFixRightEdge() {\n        this._private__correctOffset();\n        this._private__correctBarSpacing();\n    }\n}\n\nclass MediaCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n    }\n    _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) { }\n}\n\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__metricsCache = new Map();\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) { }\n    _internal__drawBackgroundImpl(renderingScope) {\n        if (!this._private__data._internal_visible) {\n            return;\n        }\n        const { context: ctx, mediaSize } = renderingScope;\n        let textHeight = 0;\n        for (const line of this._private__data._internal_lines) {\n            if (line._internal_text.length === 0) {\n                continue;\n            }\n            ctx.font = line._internal_font;\n            const textWidth = this._private__metrics(ctx, line._internal_text);\n            if (textWidth > mediaSize.width) {\n                line._internal_zoom = mediaSize.width / textWidth;\n            }\n            else {\n                line._internal_zoom = 1;\n            }\n            textHeight += line._internal_lineHeight * line._internal_zoom;\n        }\n        let vertOffset = 0;\n        switch (this._private__data._internal_vertAlign) {\n            case 'top':\n                vertOffset = 0;\n                break;\n            case 'center':\n                vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n                break;\n            case 'bottom':\n                vertOffset = Math.max((mediaSize.height - textHeight), 0);\n                break;\n        }\n        ctx.fillStyle = this._private__data._internal_color;\n        for (const line of this._private__data._internal_lines) {\n            ctx.save();\n            let horzOffset = 0;\n            switch (this._private__data._internal_horzAlign) {\n                case 'left':\n                    ctx.textAlign = 'left';\n                    horzOffset = line._internal_lineHeight / 2;\n                    break;\n                case 'center':\n                    ctx.textAlign = 'center';\n                    horzOffset = mediaSize.width / 2;\n                    break;\n                case 'right':\n                    ctx.textAlign = 'right';\n                    horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n                    break;\n            }\n            ctx.translate(horzOffset, vertOffset);\n            ctx.textBaseline = 'top';\n            ctx.font = line._internal_font;\n            ctx.scale(line._internal_zoom, line._internal_zoom);\n            ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n            ctx.restore();\n            vertOffset += line._internal_lineHeight * line._internal_zoom;\n        }\n    }\n    _private__metrics(ctx, text) {\n        const fontCache = this._private__fontCache(ctx.font);\n        let result = fontCache.get(text);\n        if (result === undefined) {\n            result = ctx.measureText(text).width;\n            fontCache.set(text, result);\n        }\n        return result;\n    }\n    _private__fontCache(font) {\n        let fontCache = this._private__metricsCache.get(font);\n        if (fontCache === undefined) {\n            fontCache = new Map();\n            this._private__metricsCache.set(font, fontCache);\n        }\n        return fontCache;\n    }\n}\n\nclass WatermarkPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_color: '',\n            _internal_lines: [],\n            _internal_vertAlign: 'center',\n            _internal_horzAlign: 'center',\n        };\n        this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const options = this._private__source._internal_options();\n        const data = this._private__rendererData;\n        data._internal_visible = options.visible;\n        if (!data._internal_visible) {\n            return;\n        }\n        data._internal_color = options.color;\n        data._internal_horzAlign = options.horzAlign;\n        data._internal_vertAlign = options.vertAlign;\n        data._internal_lines = [\n            {\n                _internal_text: options.text,\n                _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n                _internal_lineHeight: options.fontSize * 1.2,\n                _internal_vertOffset: 0,\n                _internal_zoom: 0,\n            },\n        ];\n    }\n}\n\nclass Watermark extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__options = options;\n        this._private__paneView = new WatermarkPaneView(this);\n    }\n    _internal_priceAxisViews() {\n        return [];\n    }\n    _internal_paneViews() {\n        return [this._private__paneView];\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n    /**\n     * Tracking Mode will be deactivated on touch end event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n    /**\n     * Tracking Mode will be deactivated on the next tap event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n    constructor(invalidateHandler, options, horzScaleBehavior) {\n        this._private__panes = [];\n        this._private__serieses = [];\n        this._private__width = 0;\n        this._private__hoveredSource = null;\n        this._private__priceScalesOptionsChanged = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__gradientColorsCache = null;\n        this._private__invalidateHandler = invalidateHandler;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n        this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n        this._private__crosshair = new Crosshair(this, options.crosshair);\n        this._private__magnet = new Magnet(options.crosshair);\n        this._private__watermark = new Watermark(this, options.watermark);\n        this._internal_createPane();\n        this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    }\n    _internal_fullUpdate() {\n        this._private__invalidate(InvalidateMask._internal_full());\n    }\n    _internal_lightUpdate() {\n        this._private__invalidate(InvalidateMask._internal_light());\n    }\n    _internal_cursorUpdate() {\n        this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n    }\n    _internal_updateSource(source) {\n        const inv = this._private__invalidationMaskForSource(source);\n        this._private__invalidate(inv);\n    }\n    _internal_hoveredSource() {\n        return this._private__hoveredSource;\n    }\n    _internal_setHoveredSource(source) {\n        const prevSource = this._private__hoveredSource;\n        this._private__hoveredSource = source;\n        if (prevSource !== null) {\n            this._internal_updateSource(prevSource._internal_source);\n        }\n        if (source !== null) {\n            this._internal_updateSource(source._internal_source);\n        }\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._private__panes.forEach((p) => p._internal_applyScaleOptions(options));\n        if (options.timeScale !== undefined) {\n            this._private__timeScale._internal_applyOptions(options.timeScale);\n        }\n        if (options.localization !== undefined) {\n            this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n        }\n        if (options.leftPriceScale || options.rightPriceScale) {\n            this._private__priceScalesOptionsChanged._internal_fire();\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n        this._internal_fullUpdate();\n    }\n    _internal_applyPriceScaleOptions(priceScaleId, options) {\n        if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n            this._internal_applyOptions({\n                leftPriceScale: options,\n            });\n            return;\n        }\n        else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n            this._internal_applyOptions({\n                rightPriceScale: options,\n            });\n            return;\n        }\n        const res = this._internal_findPriceScale(priceScaleId);\n        if (res === null) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n            }\n        }\n        res._internal_priceScale._internal_applyOptions(options);\n        this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    _internal_findPriceScale(priceScaleId) {\n        for (const pane of this._private__panes) {\n            const priceScale = pane._internal_priceScaleById(priceScaleId);\n            if (priceScale !== null) {\n                return {\n                    _internal_pane: pane,\n                    _internal_priceScale: priceScale,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_timeScale() {\n        return this._private__timeScale;\n    }\n    _internal_panes() {\n        return this._private__panes;\n    }\n    _internal_watermarkSource() {\n        return this._private__watermark;\n    }\n    _internal_crosshairSource() {\n        return this._private__crosshair;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_setPaneHeight(pane, height) {\n        pane._internal_setHeight(height);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._private__timeScale._internal_setWidth(this._private__width);\n        this._private__panes.forEach((pane) => pane._internal_setWidth(width));\n        this._internal_recalculateAllPanes();\n    }\n    _internal_createPane(index) {\n        const pane = new Pane(this._private__timeScale, this);\n        if (index !== undefined) {\n            this._private__panes.splice(index, 0, pane);\n        }\n        else {\n            // adding to the end - common case\n            this._private__panes.push(pane);\n        }\n        const actualIndex = (index === undefined) ? this._private__panes.length - 1 : index;\n        // we always do autoscaling on the creation\n        // if autoscale option is true, it is ok, just recalculate by invalidation mask\n        // if autoscale option is false, autoscale anyway on the first draw\n        // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n        const mask = InvalidateMask._internal_full();\n        mask._internal_invalidatePane(actualIndex, {\n            _internal_level: 0 /* InvalidationLevel.None */,\n            _internal_autoScale: true,\n        });\n        this._private__invalidate(mask);\n        return pane;\n    }\n    _internal_startScalePrice(pane, priceScale, x) {\n        pane._internal_startScalePrice(priceScale, x);\n    }\n    _internal_scalePriceTo(pane, priceScale, x) {\n        pane._internal_scalePriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScalePrice(pane, priceScale) {\n        pane._internal_endScalePrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScrollPrice(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_startScrollPrice(priceScale, x);\n    }\n    _internal_scrollPriceTo(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_scrollPriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScrollPrice(pane, priceScale) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_endScrollPrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_resetPriceScale(pane, priceScale) {\n        pane._internal_resetPriceScale(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScaleTime(position) {\n        this._private__timeScale._internal_startScale(position);\n    }\n    /**\n     * Zoom in/out the chart (depends on scale value).\n     *\n     * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n     * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoomTime(pointX, scale) {\n        const timeScale = this._internal_timeScale();\n        if (timeScale._internal_isEmpty() || scale === 0) {\n            return;\n        }\n        const timeScaleWidth = timeScale._internal_width();\n        pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n        timeScale._internal_zoom(pointX, scale);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_scrollChart(x) {\n        this._internal_startScrollTime(0);\n        this._internal_scrollTimeTo(x);\n        this._internal_endScrollTime();\n    }\n    _internal_scaleTimeTo(x) {\n        this._private__timeScale._internal_scaleTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScaleTime() {\n        this._private__timeScale._internal_endScale();\n        this._internal_lightUpdate();\n    }\n    _internal_startScrollTime(x) {\n        this._private__timeScale._internal_startScroll(x);\n    }\n    _internal_scrollTimeTo(x) {\n        this._private__timeScale._internal_scrollTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScrollTime() {\n        this._private__timeScale._internal_endScroll();\n        this._internal_lightUpdate();\n    }\n    _internal_serieses() {\n        return this._private__serieses;\n    }\n    _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n        this._private__crosshair._internal_saveOriginCoord(x, y);\n        let price = NaN;\n        let index = this._private__timeScale._internal_coordinateToIndex(x);\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        if (visibleBars !== null) {\n            index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n        }\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue !== null) {\n            price = priceScale._internal_coordinateToPrice(y, firstValue);\n        }\n        price = this._private__magnet._internal_align(price, index, pane);\n        this._private__crosshair._internal_setPosition(index, price, pane);\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), { x, y }, event);\n        }\n    }\n    // A position provided external (not from an internal event listener)\n    _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n        const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n        const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n        this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n    }\n    _internal_clearCurrentPosition(skipEvent) {\n        const crosshair = this._internal_crosshairSource();\n        crosshair._internal_clearPosition();\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(null, null, null);\n        }\n    }\n    _internal_updateCrosshair() {\n        // apply magnet\n        const pane = this._private__crosshair._internal_pane();\n        if (pane !== null) {\n            const x = this._private__crosshair._internal_originCoordX();\n            const y = this._private__crosshair._internal_originCoordY();\n            this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n        }\n        this._private__crosshair._internal_updateAllViews();\n    }\n    _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n        const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n        if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n            this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n        }\n        const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n        const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n        // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n        // (and actually we cannot)\n        if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n            const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n            const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n            const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n            const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n            const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n            const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n            const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n            if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n                const compensationShift = newBaseIndex - currentBaseIndex;\n                this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n            }\n        }\n        this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n    }\n    _internal_recalculatePane(pane) {\n        if (pane !== null) {\n            pane._internal_recalculate();\n        }\n    }\n    _internal_paneForSource(source) {\n        const pane = this._private__panes.find((p) => p._internal_orderedSources().includes(source));\n        return pane === undefined ? null : pane;\n    }\n    _internal_recalculateAllPanes() {\n        this._private__watermark._internal_updateAllViews();\n        this._private__panes.forEach((p) => p._internal_recalculate());\n        this._internal_updateCrosshair();\n    }\n    _internal_destroy() {\n        this._private__panes.forEach((p) => p._internal_destroy());\n        this._private__panes.length = 0;\n        // to avoid memleaks\n        this._private__options.localization.priceFormatter = undefined;\n        this._private__options.localization.percentageFormatter = undefined;\n        this._private__options.localization.timeFormatter = undefined;\n    }\n    _internal_rendererOptionsProvider() {\n        return this._private__rendererOptionsProvider;\n    }\n    _internal_priceAxisRendererOptions() {\n        return this._private__rendererOptionsProvider._internal_options();\n    }\n    _internal_priceScalesOptionsChanged() {\n        return this._private__priceScalesOptionsChanged;\n    }\n    _internal_createSeries(seriesType, options, customPaneView) {\n        const pane = this._private__panes[0];\n        const series = this._private__createSeries(options, seriesType, pane, customPaneView);\n        this._private__serieses.push(series);\n        if (this._private__serieses.length === 1) {\n            // call fullUpdate to recalculate chart's parts geometry\n            this._internal_fullUpdate();\n        }\n        else {\n            this._internal_lightUpdate();\n        }\n        return series;\n    }\n    _internal_removeSeries(series) {\n        const pane = this._internal_paneForSource(series);\n        const seriesIndex = this._private__serieses.indexOf(series);\n        assert(seriesIndex !== -1, 'Series not found');\n        this._private__serieses.splice(seriesIndex, 1);\n        ensureNotNull(pane)._internal_removeDataSource(series);\n        if (series._internal_destroy) {\n            series._internal_destroy();\n        }\n    }\n    _internal_moveSeriesToScale(series, targetScaleId) {\n        const pane = ensureNotNull(this._internal_paneForSource(series));\n        pane._internal_removeDataSource(series);\n        // check if targetScaleId exists\n        const target = this._internal_findPriceScale(targetScaleId);\n        if (target === null) {\n            // new scale on the same pane\n            const zOrder = series._internal_zorder();\n            pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n        else {\n            // if move to the new scale of the same pane, keep zorder\n            // if move to new pane\n            const zOrder = (target._internal_pane === pane) ? series._internal_zorder() : undefined;\n            target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n    }\n    _internal_fitContent() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setFitContent();\n        this._private__invalidate(mask);\n    }\n    _internal_setTargetLogicalRange(range) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_applyRange(range);\n        this._private__invalidate(mask);\n    }\n    _internal_resetTimeScale() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_resetTimeScale();\n        this._private__invalidate(mask);\n    }\n    _internal_setBarSpacing(spacing) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setBarSpacing(spacing);\n        this._private__invalidate(mask);\n    }\n    _internal_setRightOffset(offset) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setRightOffset(offset);\n        this._private__invalidate(mask);\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setTimeScaleAnimation(animation);\n        this._private__invalidate(mask);\n    }\n    _internal_stopTimeScaleAnimation() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_stopTimeScaleAnimation();\n        this._private__invalidate(mask);\n    }\n    _internal_defaultVisiblePriceScaleId() {\n        return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n    }\n    _internal_backgroundBottomColor() {\n        return this._private__backgroundBottomColor;\n    }\n    _internal_backgroundTopColor() {\n        return this._private__backgroundTopColor;\n    }\n    _internal_backgroundColorAtYPercentFromTop(percent) {\n        const bottomColor = this._private__backgroundBottomColor;\n        const topColor = this._private__backgroundTopColor;\n        if (bottomColor === topColor) {\n            // solid background\n            return bottomColor;\n        }\n        // gradient background\n        // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n        percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n        if (this._private__gradientColorsCache === null ||\n            this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n            this._private__gradientColorsCache = {\n                _internal_topColor: topColor,\n                _internal_bottomColor: bottomColor,\n                _internal_colors: new Map(),\n            };\n        }\n        else {\n            const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n        const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n        this._private__gradientColorsCache._internal_colors.set(percent, result);\n        return result;\n    }\n    _private__paneInvalidationMask(pane, level) {\n        const inv = new InvalidateMask(level);\n        if (pane !== null) {\n            const index = this._private__panes.indexOf(pane);\n            inv._internal_invalidatePane(index, {\n                _internal_level: level,\n            });\n        }\n        return inv;\n    }\n    _private__invalidationMaskForSource(source, invalidateType) {\n        if (invalidateType === undefined) {\n            invalidateType = 2 /* InvalidationLevel.Light */;\n        }\n        return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n    }\n    _private__invalidate(mask) {\n        if (this._private__invalidateHandler) {\n            this._private__invalidateHandler(mask);\n        }\n        this._private__panes.forEach((pane) => pane._internal_grid()._internal_paneView()._internal_update());\n    }\n    _private__createSeries(options, seriesType, pane, customPaneView) {\n        const series = new Series(this, options, seriesType, pane, customPaneView);\n        const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n        pane._internal_addDataSource(series, targetScaleId);\n        if (!isDefaultPriceScale(targetScaleId)) {\n            // let's apply that options again to apply margins\n            series._internal_applyOptions(options);\n        }\n        return series;\n    }\n    _private__getBackgroundColor(side) {\n        const layoutOptions = this._private__options.layout;\n        if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n            return side === 0 /* BackgroundColorSide.Top */ ?\n                layoutOptions.background.topColor :\n                layoutOptions.background.bottomColor;\n        }\n        return layoutOptions.background.color;\n    }\n}\n\nfunction fillUpDownCandlesticksColors(options) {\n    if (options.borderColor !== undefined) {\n        options.borderUpColor = options.borderColor;\n        options.borderDownColor = options.borderColor;\n    }\n    if (options.wickColor !== undefined) {\n        options.wickUpColor = options.wickColor;\n        options.wickDownColor = options.wickColor;\n    }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n    /**\n     * Animation is always disabled\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n     * Animation is always enabled.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n    /**\n     * Animation is active after new data.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n    if (minMove >= 1) {\n        return 0;\n    }\n    let i = 0;\n    for (; i < 8; i++) {\n        const intPart = Math.round(minMove);\n        const fractPart = Math.abs(intPart - minMove);\n        if (fractPart < 1e-8) {\n            return i;\n        }\n        minMove = minMove * 10;\n    }\n    return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n    /**\n     * Use the last bar data.\n     */\n    PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n    /**\n     * Use the last visible data of the chart viewport.\n     */\n    PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n    /** Solid color */\n    ColorType[\"Solid\"] = \"solid\";\n    /** Vertical gradient color */\n    ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n    return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n    return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n    /**\n     * The start of the year (e.g. it's the first tick mark in a year).\n     */\n    TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n    /**\n     * The start of the month (e.g. it's the first tick mark in a month).\n     */\n    TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n    /**\n     * A day of the month.\n     */\n    TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n    /**\n     * A time without seconds.\n     */\n    TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n    /**\n     * A time with seconds.\n     */\n    TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\n\nconst getMonth = (date) => date.getUTCMonth() + 1;\nconst getDay = (date) => date.getUTCDate();\nconst getYear = (date) => date.getUTCFullYear();\nconst dd = (date) => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'long' });\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'short' });\nconst MM = (date) => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = (date) => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = (date) => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n    return format\n        .replace(/yyyy/g, yyyy(date))\n        .replace(/yy/g, yy(date))\n        .replace(/MMMM/g, MMMM(date, locale))\n        .replace(/MMM/g, MMM(date, locale))\n        .replace(/MM/g, MM(date))\n        .replace(/dd/g, dd(date));\n}\n\nclass DateFormatter {\n    constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n        this._private__dateFormat = dateFormat;\n        this._private__locale = locale;\n    }\n    _internal_format(date) {\n        return formatDate(date, this._private__dateFormat, this._private__locale);\n    }\n}\n\nclass TimeFormatter {\n    constructor(format) {\n        this._private__formatStr = format || '%h:%m:%s';\n    }\n    _internal_format(date) {\n        return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).\n            replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).\n            replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n    }\n}\n\nconst defaultParams = {\n    _internal_dateFormat: 'yyyy-MM-dd',\n    _internal_timeFormat: '%h:%m:%s',\n    _internal_dateTimeSeparator: ' ',\n    _internal_locale: 'default',\n};\nclass DateTimeFormatter {\n    constructor(params = {}) {\n        const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n        this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n        this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n        this._private__separator = formatterParams._internal_dateTimeSeparator;\n    }\n    _internal_format(dateTime) {\n        return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n    }\n}\n\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n    const formatOptions = {};\n    switch (tickMarkType) {\n        case 0 /* TickMarkType.Year */:\n            formatOptions.year = 'numeric';\n            break;\n        case 1 /* TickMarkType.Month */:\n            formatOptions.month = 'short';\n            break;\n        case 2 /* TickMarkType.DayOfMonth */:\n            formatOptions.day = 'numeric';\n            break;\n        case 3 /* TickMarkType.Time */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            break;\n        case 4 /* TickMarkType.TimeWithSeconds */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            formatOptions.second = '2-digit';\n            break;\n    }\n    const date = timePoint._internal_businessDay === undefined\n        ? new Date(timePoint._internal_timestamp * 1000)\n        : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n    // from given date we should use only as UTC date or timestamp\n    // but to format as locale date we can convert UTC date to local date\n    const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\n\nfunction hours(count) {\n    return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n    return count * 60 * 1000;\n}\nfunction seconds(count) {\n    return count * 1000;\n}\nconst intradayWeightDivisors = [\n    { _internal_divisor: seconds(1), _internal_weight: 10 /* TickMarkWeight.Second */ },\n    { _internal_divisor: minutes(1), _internal_weight: 20 /* TickMarkWeight.Minute1 */ },\n    { _internal_divisor: minutes(5), _internal_weight: 21 /* TickMarkWeight.Minute5 */ },\n    { _internal_divisor: minutes(30), _internal_weight: 22 /* TickMarkWeight.Minute30 */ },\n    { _internal_divisor: hours(1), _internal_weight: 30 /* TickMarkWeight.Hour1 */ },\n    { _internal_divisor: hours(3), _internal_weight: 31 /* TickMarkWeight.Hour3 */ },\n    { _internal_divisor: hours(6), _internal_weight: 32 /* TickMarkWeight.Hour6 */ },\n    { _internal_divisor: hours(12), _internal_weight: 33 /* TickMarkWeight.Hour12 */ },\n];\nfunction weightByTime(currentDate, prevDate) {\n    if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n        return 70 /* TickMarkWeight.Year */;\n    }\n    else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n        return 60 /* TickMarkWeight.Month */;\n    }\n    else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n        return 50 /* TickMarkWeight.Day */;\n    }\n    for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n        if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n            return intradayWeightDivisors[i]._internal_weight;\n        }\n    }\n    return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n    return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n    if (sortedTimePoints.length === 0) {\n        return;\n    }\n    let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n    let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n    let totalTimeDiff = 0;\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n        const currentPoint = sortedTimePoints[index];\n        const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n        if (prevDate !== null) {\n            currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n        }\n        totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n        prevTime = cast(currentPoint.time)._internal_timestamp;\n        prevDate = currentDate;\n    }\n    if (startIndex === 0 && sortedTimePoints.length > 1) {\n        // let's guess a weight for the first point\n        // let's say the previous point was average time back in the history\n        const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n        const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n        sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n    }\n}\n\nfunction businessDayConverter(time) {\n    let businessDay = time;\n    if (isString(time)) {\n        businessDay = stringToBusinessDay(time);\n    }\n    if (!isBusinessDay(businessDay)) {\n        throw new Error('time must be of type BusinessDay');\n    }\n    const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n    return {\n        _internal_timestamp: Math.round(date.getTime() / 1000),\n        _internal_businessDay: businessDay,\n    };\n}\nfunction timestampConverter(time) {\n    if (!isUTCTimestamp(time)) {\n        throw new Error('time must be of type isUTCTimestamp');\n    }\n    return {\n        _internal_timestamp: time,\n    };\n}\nfunction selectTimeConverter(data) {\n    if (data.length === 0) {\n        return null;\n    }\n    if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n        return businessDayConverter;\n    }\n    return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n    if (isUTCTimestamp(time)) {\n        return timestampConverter(time);\n    }\n    if (!isBusinessDay(time)) {\n        return businessDayConverter(stringToBusinessDay(time));\n    }\n    return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n    {\n        // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n        // but parses them in 'implementation specific' way\n        // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n        // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n        // but let's do this in development build only because of perf\n        if (!validDateRegex.test(value)) {\n            throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n        }\n    }\n    const d = new Date(value);\n    if (isNaN(d.getTime())) {\n        throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n    return {\n        day: d.getUTCDate(),\n        month: d.getUTCMonth() + 1,\n        year: d.getUTCFullYear(),\n    };\n}\nfunction convertStringToBusinessDay(value) {\n    if (isString(value.time)) {\n        value.time = stringToBusinessDay(value.time);\n    }\n}\nfunction convertStringsToBusinessDays(data) {\n    return data.forEach(convertStringToBusinessDay);\n}\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n    switch (weight) {\n        case 0 /* TickMarkWeight.LessThanSecond */:\n        case 10 /* TickMarkWeight.Second */:\n            return timeVisible\n                ? (secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */)\n                : 2 /* TickMarkType.DayOfMonth */;\n        case 20 /* TickMarkWeight.Minute1 */:\n        case 21 /* TickMarkWeight.Minute5 */:\n        case 22 /* TickMarkWeight.Minute30 */:\n        case 30 /* TickMarkWeight.Hour1 */:\n        case 31 /* TickMarkWeight.Hour3 */:\n        case 32 /* TickMarkWeight.Hour6 */:\n        case 33 /* TickMarkWeight.Hour12 */:\n            return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n        case 50 /* TickMarkWeight.Day */:\n            return 2 /* TickMarkType.DayOfMonth */;\n        case 60 /* TickMarkWeight.Month */:\n            return 1 /* TickMarkType.Month */;\n        case 70 /* TickMarkWeight.Year */:\n            return 0 /* TickMarkType.Year */;\n    }\n}\nclass HorzScaleBehaviorTime {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n        this.updateFormatter(options.localization);\n    }\n    preprocessData(data) {\n        if (Array.isArray(data)) {\n            convertStringsToBusinessDays(data);\n        }\n        else {\n            convertStringToBusinessDay(data);\n        }\n    }\n    createConverterToInternalObj(data) {\n        return ensureNotNull(selectTimeConverter(data));\n    }\n    key(item) {\n        // eslint-disable-next-line no-restricted-syntax\n        if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n            return item._internal_timestamp;\n        }\n        else {\n            return this.key(this.convertHorzItemToInternal(item));\n        }\n    }\n    cacheKey(item) {\n        const time = item;\n        return time._internal_businessDay === undefined\n            ? new Date(time._internal_timestamp * 1000).getTime()\n            : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n    }\n    convertHorzItemToInternal(item) {\n        return convertTime(item);\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        const dateFormat = options.dateFormat;\n        if (this._private__options.timeScale.timeVisible) {\n            this._private__dateTimeFormatter = new DateTimeFormatter({\n                _internal_dateFormat: dateFormat,\n                _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n                _internal_dateTimeSeparator: '   ',\n                _internal_locale: options.locale,\n            });\n        }\n        else {\n            this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n        }\n    }\n    formatHorzItem(item) {\n        const tp = item;\n        return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n    }\n    formatTickmark(tickMark, localizationOptions) {\n        const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n        const options = this._private__options.timeScale;\n        if (options.tickMarkFormatter !== undefined) {\n            const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n            if (tickMarkString !== null) {\n                return tickMarkString;\n            }\n        }\n        return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n    }\n    maxTickMarkWeight(tickMarks) {\n        let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0]).weight;\n        // special case: it looks strange if 15:00 is bold but 14:00 is not\n        // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n        if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n            maxWeight = 30 /* TickMarkWeight.Hour1 */;\n        }\n        return maxWeight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        fillWeightsForPoints(sortedTimePoints, startIndex);\n    }\n    static _internal_applyDefaults(options) {\n        return merge({ localization: { dateFormat: 'dd MMM \\'yy' } }, options !== null && options !== void 0 ? options : {});\n    }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\n\nfunction isFF() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n    var _a;\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // more accurate if available\n    if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n        return navigator.userAgentData.platform === 'Windows';\n    }\n    return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    if (!navigator.userAgentData) {\n        return false;\n    }\n    return navigator.userAgentData.brands.some((brand) => {\n        return brand.brand.includes('Chromium');\n    });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n    {\n        // eslint-disable-next-line no-console\n        console.warn(msg);\n    }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n    const integerWidth = Math.floor(originalSize.width);\n    const integerHeight = Math.floor(originalSize.height);\n    const width = integerWidth - (integerWidth % 2);\n    const height = integerHeight - (integerHeight % 2);\n    return size$1({ width, height });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n    return originalHeight + (originalHeight % 2);\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n    return originalWidth + (originalWidth % 2);\n}\n\nfunction distanceBetweenPoints(pos1, pos2) {\n    return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n    const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n    return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n    const lnDumpingCoeff = Math.log(dumpingCoeff);\n    return Math.log((1 /* Constants.EpsilonDistance */ * lnDumpingCoeff) / -speed) / (lnDumpingCoeff);\n}\nclass KineticAnimation {\n    constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n        this._private__position1 = null;\n        this._private__position2 = null;\n        this._private__position3 = null;\n        this._private__position4 = null;\n        this._private__animationStartPosition = null;\n        this._private__durationMsecs = 0;\n        this._private__speedPxPerMsec = 0;\n        this._private__minSpeed = minSpeed;\n        this._private__maxSpeed = maxSpeed;\n        this._private__dumpingCoeff = dumpingCoeff;\n        this._private__minMove = minMove;\n    }\n    _internal_addPosition(position, time) {\n        if (this._private__position1 !== null) {\n            if (this._private__position1._internal_time === time) {\n                this._private__position1._internal_position = position;\n                return;\n            }\n            if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n                return;\n            }\n        }\n        this._private__position4 = this._private__position3;\n        this._private__position3 = this._private__position2;\n        this._private__position2 = this._private__position1;\n        this._private__position1 = { _internal_time: time, _internal_position: position };\n    }\n    _internal_start(position, time) {\n        if (this._private__position1 === null || this._private__position2 === null) {\n            return;\n        }\n        if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n            return;\n        }\n        // To calculate all the rest parameters we should calculate the speed af first\n        let totalDistance = 0;\n        const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n        const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n        // We're calculating weighted average speed\n        // Than more distance for a segment, than more its weight\n        const speedItems = [speed1];\n        const distanceItems = [distance1];\n        totalDistance += distance1;\n        if (this._private__position3 !== null) {\n            const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n            // stop at this moment if direction of the segment is opposite\n            if (Math.sign(speed2) === Math.sign(speed1)) {\n                const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n                speedItems.push(speed2);\n                distanceItems.push(distance2);\n                totalDistance += distance2;\n                if (this._private__position4 !== null) {\n                    const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n                    if (Math.sign(speed3) === Math.sign(speed1)) {\n                        const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n                        speedItems.push(speed3);\n                        distanceItems.push(distance3);\n                        totalDistance += distance3;\n                    }\n                }\n            }\n        }\n        let resultSpeed = 0;\n        for (let i = 0; i < speedItems.length; ++i) {\n            resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n        }\n        if (Math.abs(resultSpeed) < this._private__minSpeed) {\n            return;\n        }\n        this._private__animationStartPosition = { _internal_position: position, _internal_time: time };\n        this._private__speedPxPerMsec = resultSpeed;\n        this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n    }\n    _internal_getPosition(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const durationMsecs = time - startPosition._internal_time;\n        return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / (Math.log(this._private__dumpingCoeff));\n    }\n    _internal_finished(time) {\n        return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n    }\n    _private__progressDuration(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const progress = time - startPosition._internal_time;\n        return Math.min(progress, this._private__durationMsecs);\n    }\n}\n\nfunction createBoundCanvas(parentElement, size) {\n    const doc = ensureNotNull(parentElement.ownerDocument);\n    const canvas = doc.createElement('canvas');\n    parentElement.appendChild(canvas);\n    const binding = bindCanvasElementBitmapSizeTo(canvas, {\n        type: 'device-pixel-content-box',\n        options: {\n            allowResizeObserver: false,\n        },\n        transform: (bitmapSize, canvasElementClientSize) => ({\n            width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n            height: Math.max(bitmapSize.height, canvasElementClientSize.height),\n        }),\n    });\n    binding.resizeCanvasElement(size);\n    return binding;\n}\nfunction releaseCanvas(canvas) {\n    var _a;\n    // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n    // Seems that iOS Safari stores canvas elements for some additional time internally.\n    // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n    // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n    canvas.width = 1;\n    canvas.height = 1;\n    (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.clearRect(0, 0, 1, 1);\n}\n\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n    if (renderer._internal_drawBackground) {\n        renderer._internal_drawBackground(target, isHovered, hitTestData);\n    }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n    renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, pane) {\n    const paneViews = paneViewsGetter(source, pane);\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            drawRendererFn(renderer);\n        }\n    }\n}\n\nfunction preventScrollByWheelClick(el) {\n    if (!isChrome()) {\n        return;\n    }\n    el.addEventListener('mousedown', (e) => {\n        if (e.button === 1 /* MouseEventButton.Middle */) {\n            // prevent incorrect scrolling event\n            e.preventDefault();\n            return false;\n        }\n        return undefined;\n    });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n    constructor(target, handler, options) {\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__longTapTimeoutId = null;\n        this._private__longTapActive = false;\n        this._private__mouseMoveStartPosition = null;\n        this._private__touchMoveStartPosition = null;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__cancelClick = false;\n        this._private__cancelTap = false;\n        this._private__unsubscribeOutsideMouseEvents = null;\n        this._private__unsubscribeOutsideTouchEvents = null;\n        this._private__unsubscribeMobileSafariEvents = null;\n        this._private__unsubscribeMousemove = null;\n        this._private__unsubscribeRootMouseEvents = null;\n        this._private__unsubscribeRootTouchEvents = null;\n        this._private__startPinchMiddlePoint = null;\n        this._private__startPinchDistance = 0;\n        this._private__pinchPrevented = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__mousePressed = false;\n        this._private__lastTouchEventTimeStamp = 0;\n        // for touchstart/touchmove/touchend events we handle only first touch\n        // i.e. we don't support several active touches at the same time (except pinch event)\n        this._private__activeTouchId = null;\n        // accept all mouse leave events if it's not an iOS device\n        // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n        this._private__acceptMouseLeave = !isIOS();\n        /**\n         * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n         * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n         * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n         */\n        this._private__onFirefoxOutsideMouseUp = (mouseUpEvent) => {\n            this._private__mouseUpHandler(mouseUpEvent);\n        };\n        /**\n         * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n         * There are two possible solutions:\n         * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n         * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n         * https://developer.apple.com/forums/thread/125073\n         */\n        this._private__onMobileSafariDoubleClick = (dblClickEvent) => {\n            if (this._private__firesTouchEvents(dblClickEvent)) {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__tapCount;\n                if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n                    if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n                    }\n                    this._private__resetTapTimeout();\n                }\n            }\n            else {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__clickCount;\n                if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n                    if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n                    }\n                    this._private__resetClickTimeout();\n                }\n            }\n        };\n        this._private__target = target;\n        this._private__handler = handler;\n        this._private__options = options;\n        this._private__init();\n    }\n    _internal_destroy() {\n        if (this._private__unsubscribeOutsideMouseEvents !== null) {\n            this._private__unsubscribeOutsideMouseEvents();\n            this._private__unsubscribeOutsideMouseEvents = null;\n        }\n        if (this._private__unsubscribeOutsideTouchEvents !== null) {\n            this._private__unsubscribeOutsideTouchEvents();\n            this._private__unsubscribeOutsideTouchEvents = null;\n        }\n        if (this._private__unsubscribeMousemove !== null) {\n            this._private__unsubscribeMousemove();\n            this._private__unsubscribeMousemove = null;\n        }\n        if (this._private__unsubscribeRootMouseEvents !== null) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (this._private__unsubscribeRootTouchEvents !== null) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        if (this._private__unsubscribeMobileSafariEvents !== null) {\n            this._private__unsubscribeMobileSafariEvents();\n            this._private__unsubscribeMobileSafariEvents = null;\n        }\n        this._private__clearLongTapTimeout();\n        this._private__resetClickTimeout();\n    }\n    _private__mouseEnterHandler(enterEvent) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n        this._private__unsubscribeMousemove = () => {\n            this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n        };\n        this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n        if (this._private__firesTouchEvents(enterEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(enterEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__resetClickTimeout() {\n        if (this._private__clickTimeoutId !== null) {\n            clearTimeout(this._private__clickTimeoutId);\n        }\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__resetTapTimeout() {\n        if (this._private__tapTimeoutId !== null) {\n            clearTimeout(this._private__tapTimeoutId);\n        }\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__mouseMoveHandler(moveEvent) {\n        if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n            return;\n        }\n        if (this._private__firesTouchEvents(moveEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(moveEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__touchMoveHandler(moveEvent) {\n        const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n        if (this._private__startPinchMiddlePoint !== null) {\n            return;\n        }\n        if (this._private__preventTouchDragProcess) {\n            return;\n        }\n        // prevent pinch if move event comes faster than the second touch\n        this._private__pinchPrevented = true;\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n        const { _internal_xOffset: xOffset, _internal_yOffset: yOffset, _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n            return;\n        }\n        if (!this._private__touchMoveExceededManhattanDistance) {\n            // first time when current position exceeded manhattan distance\n            // vertical drag is more important than horizontal drag\n            // because we scroll the page vertically often than horizontally\n            const correctedXOffset = xOffset * 0.5;\n            // a drag can be only if touch page scroll isn't allowed\n            const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n            const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n            // if drag event happened then we should revert preventDefault state to original one\n            // and try to process the drag event\n            // else we shouldn't prevent default of the event and ignore processing the drag event\n            if (!isVertDrag && !isHorzDrag) {\n                this._private__preventTouchDragProcess = true;\n            }\n            this._private__touchMoveExceededManhattanDistance = true;\n            // if manhattan distance is more that 5 - we should cancel tap event\n            this._private__cancelTap = true;\n            this._private__clearLongTapTimeout();\n            this._private__resetTapTimeout();\n        }\n        if (!this._private__preventTouchDragProcess) {\n            const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n            // we should prevent default in case of touch only\n            // to prevent scroll of the page\n            preventDefault(moveEvent);\n        }\n    }\n    _private__mouseMoveWithDownHandler(moveEvent) {\n        if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n        const { _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n            // if manhattan distance is more that 5 - we should cancel click event\n            this._private__cancelClick = true;\n            this._private__resetClickTimeout();\n        }\n        if (this._private__cancelClick) {\n            // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n            const compatEvent = this._private__makeCompatEvent(moveEvent);\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n        }\n    }\n    _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n        const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n        const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n        const manhattanDistance = xOffset + yOffset;\n        return {\n            _internal_xOffset: xOffset,\n            _internal_yOffset: yOffset,\n            _internal_manhattanDistance: manhattanDistance,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _private__touchEndHandler(touchEndEvent) {\n        let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null && touchEndEvent.touches.length === 0) {\n            // something went wrong, somehow we missed the required touchend event\n            // probably the browser has not sent this event\n            touch = touchEndEvent.changedTouches[0];\n        }\n        if (touch === null) {\n            return;\n        }\n        this._private__activeTouchId = null;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n        this._private__clearLongTapTimeout();\n        this._private__touchMoveStartPosition = null;\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n            if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n            }\n            this._private__resetTapTimeout();\n        }\n        else {\n            if (!this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n                // do not fire mouse events if tap handler was executed\n                // prevent click event on new dom element (who appeared after tap)\n                if (this._private__handler._internal_tapEvent) {\n                    preventDefault(touchEndEvent);\n                }\n            }\n        }\n        // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n        // we handle mouseDoubleClickEvent here ourselves\n        if (this._private__tapCount === 0) {\n            preventDefault(touchEndEvent);\n        }\n        if (touchEndEvent.touches.length === 0) {\n            if (this._private__longTapActive) {\n                this._private__longTapActive = false;\n                // prevent native click event\n                preventDefault(touchEndEvent);\n            }\n        }\n    }\n    _private__mouseUpHandler(mouseUpEvent) {\n        if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n        this._private__mouseMoveStartPosition = null;\n        this._private__mousePressed = false;\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (isFF()) {\n            const rootElement = this._private__target.ownerDocument.documentElement;\n            rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        if (this._private__firesTouchEvents(mouseUpEvent)) {\n            return;\n        }\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n            if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n            }\n            this._private__resetClickTimeout();\n        }\n        else {\n            if (!this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n            }\n        }\n    }\n    _private__clearLongTapTimeout() {\n        if (this._private__longTapTimeoutId === null) {\n            return;\n        }\n        clearTimeout(this._private__longTapTimeoutId);\n        this._private__longTapTimeoutId = null;\n    }\n    _private__touchStartHandler(downEvent) {\n        if (this._private__activeTouchId !== null) {\n            return;\n        }\n        const touch = downEvent.changedTouches[0];\n        this._private__activeTouchId = touch.identifier;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        this._private__cancelTap = false;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__touchMoveStartPosition = getPosition(touch);\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        {\n            const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n            const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n            this._private__unsubscribeRootTouchEvents = () => {\n                rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n                rootElement.removeEventListener('touchend', boundTouchEndHandler);\n            };\n            rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, { passive: false });\n            rootElement.addEventListener('touchend', boundTouchEndHandler, { passive: false });\n            this._private__clearLongTapTimeout();\n            this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n        if (!this._private__tapTimeoutId) {\n            this._private__tapCount = 0;\n            this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__tapPosition = getPosition(touch);\n        }\n    }\n    _private__mouseDownHandler(downEvent) {\n        if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        if (isFF()) {\n            rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        this._private__cancelClick = false;\n        this._private__mouseMoveStartPosition = getPosition(downEvent);\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        {\n            const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n            const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n            this._private__unsubscribeRootMouseEvents = () => {\n                rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n                rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n            };\n            rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n            rootElement.addEventListener('mouseup', boundMouseUpHandler);\n        }\n        this._private__mousePressed = true;\n        if (this._private__firesTouchEvents(downEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n        if (!this._private__clickTimeoutId) {\n            this._private__clickCount = 0;\n            this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__clickPosition = getPosition(downEvent);\n        }\n    }\n    _private__init() {\n        this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n        // Do not show context menu when something went wrong\n        this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n        {\n            const doc = this._private__target.ownerDocument;\n            const outsideHandler = (event) => {\n                if (!this._private__handler._internal_mouseDownOutsideEvent) {\n                    return;\n                }\n                if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n                    return;\n                }\n                if (event.target && this._private__target.contains(event.target)) {\n                    return;\n                }\n                this._private__handler._internal_mouseDownOutsideEvent();\n            };\n            this._private__unsubscribeOutsideTouchEvents = () => {\n                doc.removeEventListener('touchstart', outsideHandler);\n            };\n            this._private__unsubscribeOutsideMouseEvents = () => {\n                doc.removeEventListener('mousedown', outsideHandler);\n            };\n            doc.addEventListener('mousedown', outsideHandler);\n            doc.addEventListener('touchstart', outsideHandler, { passive: true });\n        }\n        if (isIOS()) {\n            this._private__unsubscribeMobileSafariEvents = () => {\n                this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n            };\n            this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n        }\n        this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n        this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), { passive: true });\n        preventScrollByWheelClick(this._private__target);\n        this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n        this._private__initPinch();\n        // Hey mobile Safari, what's up?\n        // If mobile Safari doesn't have any touchmove handler with passive=false\n        // it treats a touchstart and the following touchmove events as cancelable=false,\n        // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n        // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n        this._private__target.addEventListener('touchmove', () => { }, { passive: false });\n    }\n    _private__initPinch() {\n        if (this._private__handler._internal_pinchStartEvent === undefined &&\n            this._private__handler._internal_pinchEvent === undefined &&\n            this._private__handler._internal_pinchEndEvent === undefined) {\n            return;\n        }\n        this._private__target.addEventListener('touchstart', (event) => this._private__checkPinchState(event.touches), { passive: true });\n        this._private__target.addEventListener('touchmove', (event) => {\n            if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n                return;\n            }\n            if (this._private__handler._internal_pinchEvent !== undefined) {\n                const currentDistance = getDistance(event.touches[0], event.touches[1]);\n                const scale = currentDistance / this._private__startPinchDistance;\n                this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n                preventDefault(event);\n            }\n        }, { passive: false });\n        this._private__target.addEventListener('touchend', (event) => {\n            this._private__checkPinchState(event.touches);\n        });\n    }\n    _private__checkPinchState(touches) {\n        if (touches.length === 1) {\n            this._private__pinchPrevented = false;\n        }\n        if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n            this._private__stopPinch();\n        }\n        else {\n            this._private__startPinch(touches);\n        }\n    }\n    _private__startPinch(touches) {\n        const box = getBoundingClientRect(this._private__target);\n        this._private__startPinchMiddlePoint = {\n            _internal_x: ((touches[0].clientX - box.left) + (touches[1].clientX - box.left)) / 2,\n            _internal_y: ((touches[0].clientY - box.top) + (touches[1].clientY - box.top)) / 2,\n        };\n        this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n        if (this._private__handler._internal_pinchStartEvent !== undefined) {\n            this._private__handler._internal_pinchStartEvent();\n        }\n        this._private__clearLongTapTimeout();\n    }\n    _private__stopPinch() {\n        if (this._private__startPinchMiddlePoint === null) {\n            return;\n        }\n        this._private__startPinchMiddlePoint = null;\n        if (this._private__handler._internal_pinchEndEvent !== undefined) {\n            this._private__handler._internal_pinchEndEvent();\n        }\n    }\n    _private__mouseLeaveHandler(event) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        if (this._private__firesTouchEvents(event)) {\n            return;\n        }\n        if (!this._private__acceptMouseLeave) {\n            // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n            // just ignore this event if there was no mouse move or mouse enter events\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n        // accept all mouse leave events if it's not an iOS device\n        this._private__acceptMouseLeave = !isIOS();\n    }\n    _private__longTapHandler(event) {\n        const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n        this._private__cancelTap = true;\n        // long tap is active until touchend event with 0 touches occurred\n        this._private__longTapActive = true;\n    }\n    _private__firesTouchEvents(e) {\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n            return e.sourceCapabilities.firesTouchEvents;\n        }\n        return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n    }\n    _private__processTouchEvent(event, callback) {\n        if (callback) {\n            callback.call(this._private__handler, event);\n        }\n    }\n    _private__processMouseEvent(event, callback) {\n        if (!callback) {\n            return;\n        }\n        callback.call(this._private__handler, event);\n    }\n    _private__makeCompatEvent(event, touch) {\n        // TouchEvent has no clientX/Y coordinates:\n        // We have to use the last Touch instead\n        const eventLike = touch || event;\n        const box = this._private__target.getBoundingClientRect() || { left: 0, top: 0 };\n        return {\n            clientX: eventLike.clientX,\n            clientY: eventLike.clientY,\n            pageX: eventLike.pageX,\n            pageY: eventLike.pageY,\n            screenX: eventLike.screenX,\n            screenY: eventLike.screenY,\n            localX: (eventLike.clientX - box.left),\n            localY: (eventLike.clientY - box.top),\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n            _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n            _internal_srcType: event.type,\n            _internal_target: eventLike.target,\n            _internal_view: event.view,\n            _internal_preventDefault: () => {\n                if (event.type !== 'touchstart') {\n                    // touchstart is passive and cannot be prevented\n                    preventDefault(event);\n                }\n            },\n        };\n    }\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect() || { left: 0, top: 0 };\n}\nfunction getDistance(p1, p2) {\n    const xDiff = p1.clientX - p2.clientX;\n    const yDiff = p1.clientY - p2.clientY;\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n    if (event.cancelable) {\n        event.preventDefault();\n    }\n}\nfunction getPosition(eventLike) {\n    return {\n        _internal_x: eventLike.pageX,\n        _internal_y: eventLike.pageY,\n    };\n}\nfunction eventTimeStamp(e) {\n    // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n    return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n    for (let i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return null;\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n    return (!reference ||\n        (item === 'top' && reference !== 'top') ||\n        (item === 'normal' && reference === 'bottom'));\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n    var _a, _b;\n    let bestPrimitiveHit;\n    let bestHitSource;\n    for (const source of sources) {\n        const primitiveHitResults = (_b = (_a = source._internal_primitiveHitTest) === null || _a === void 0 ? void 0 : _a.call(source, x, y)) !== null && _b !== void 0 ? _b : [];\n        for (const hitResult of primitiveHitResults) {\n            if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit.zOrder)) {\n                bestPrimitiveHit = hitResult;\n                bestHitSource = source;\n            }\n        }\n    }\n    if (!bestPrimitiveHit || !bestHitSource) {\n        return null;\n    }\n    return {\n        _internal_hit: bestPrimitiveHit,\n        _internal_source: bestHitSource,\n    };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n    return {\n        _internal_source: primitiveHit._internal_source,\n        _internal_object: {\n            _internal_externalId: primitiveHit._internal_hit.externalId,\n        },\n        _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle,\n    };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y) {\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null && renderer._internal_hitTest) {\n            const result = renderer._internal_hitTest(x, y);\n            if (result !== null) {\n                return {\n                    _internal_view: paneView,\n                    _internal_object: result,\n                };\n            }\n        }\n    }\n    return null;\n}\nfunction hitTestPane(pane, x, y) {\n    const sources = pane._internal_orderedSources();\n    const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n    if ((bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit.zOrder) === 'top') {\n        // a primitive hit on the 'top' layer will always beat the built-in hit tests\n        // (on normal layer) so we can return early here.\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    for (const source of sources) {\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n            // a primitive will be drawn above a built-in item like a series marker\n            // therefore it takes precedence here.\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n        const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y);\n        if (sourceResult !== null) {\n            return {\n                _internal_source: source,\n                _internal_view: sourceResult._internal_view,\n                _internal_object: sourceResult._internal_object,\n            };\n        }\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n    }\n    if (bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit) {\n        // return primitive hits for the 'bottom' layer\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    return null;\n}\n\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n    return (source) => {\n        var _a, _b, _c, _d;\n        const psId = (_b = (_a = source._internal_priceScale()) === null || _a === void 0 ? void 0 : _a._internal_id()) !== null && _b !== void 0 ? _b : '';\n        if (psId !== priceScaleId) {\n            // exclude if source is using a different price scale.\n            return [];\n        }\n        return (_d = (_c = source._internal_pricePaneViews) === null || _c === void 0 ? void 0 : _c.call(source, zOrder)) !== null && _d !== void 0 ? _d : [];\n    };\n}\nclass PriceAxisWidget {\n    constructor(pane, options, rendererOptionsProvider, side) {\n        this._private__priceScale = null;\n        this._private__size = null;\n        this._private__mousedown = false;\n        this._private__widthCache = new TextWidthCache(200);\n        this._private__font = null;\n        this._private__prevOptimalWidth = 0;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__pane = pane;\n        this._private__options = options;\n        this._private__layoutOptions = options.layout;\n        this._private__rendererOptionsProvider = rendererOptionsProvider;\n        this._private__isLeft = side === 'left';\n        this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n        this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n        this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.left = '0';\n        this._private__cell.style.position = 'relative';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        const handler = {\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n            _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n            _internal_treatVertTouchDragAsPageScroll: () => !this._private__options.handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = null;\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_rendererOptions() {\n        const options = this._private__rendererOptionsProvider._internal_options();\n        const isFontChanged = this._private__font !== options._internal_font;\n        if (isFontChanged) {\n            this._private__widthCache._internal_reset();\n            this._private__font = options._internal_font;\n        }\n        return options;\n    }\n    _internal_optimalWidth() {\n        if (this._private__priceScale === null) {\n            return 0;\n        }\n        let tickMarkMaxWidth = 0;\n        const rendererOptions = this._internal_rendererOptions();\n        const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n        ctx.save();\n        const tickMarks = this._private__priceScale._internal_marks();\n        ctx.font = this._private__baseFont();\n        if (tickMarks.length > 0) {\n            tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n        }\n        const views = this._private__backLabels();\n        for (let j = views.length; j--;) {\n            const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n            if (width > tickMarkMaxWidth) {\n                tickMarkMaxWidth = width;\n            }\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (firstValue !== null && this._private__size !== null) {\n            const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n            const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n            tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n        }\n        ctx.restore();\n        const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n        const res = Math.ceil(rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingInner +\n            rendererOptions._internal_paddingOuter +\n            5 /* Constants.LabelOffset */ +\n            resultTickMarksMaxWidth);\n        // make it even, remove this after migration to perfect fancy canvas\n        return suggestPriceScaleWidth(res);\n    }\n    _internal_setSize(newSize) {\n        if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__topCanvasBinding.resizeCanvasElement(newSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n        }\n    }\n    _internal_getWidth() {\n        return ensureNotNull(this._private__size).width;\n    }\n    _internal_setPriceScale(priceScale) {\n        if (this._private__priceScale === priceScale) {\n            return;\n        }\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = priceScale;\n        priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n    }\n    _internal_priceScale() {\n        return this._private__priceScale;\n    }\n    _internal_reset() {\n        const pane = this._private__pane._internal_state();\n        const model = this._private__pane._internal_chart()._internal_model();\n        model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n    }\n    _internal_paint(type) {\n        if (this._private__size === null) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__alignLabels();\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n                this._private__drawTickMarks(target);\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n                this._private__drawBackLabels(target);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshairLabel(topTarget);\n            this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_update() {\n        var _a;\n        // this call has side-effect - it regenerates marks on the price scale\n        (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n    }\n    _private__mouseDownEvent(e) {\n        if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = true;\n        model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n    }\n    _private__pressedMouseMoveEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        model._internal_scalePriceTo(pane, priceScale, e.localY);\n    }\n    _private__mouseDownOutsideEvent() {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        if (this._private__mousedown) {\n            this._private__mousedown = false;\n            model._internal_endScalePrice(pane, priceScale);\n        }\n    }\n    _private__mouseUpEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = false;\n        model._internal_endScalePrice(pane, this._private__priceScale);\n    }\n    _private__mouseDoubleClickEvent(e) {\n        if (this._private__options.handleScale.axisDoubleClickReset.price) {\n            this._internal_reset();\n        }\n    }\n    _private__mouseEnterEvent(e) {\n        if (this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n            this._private__setCursor(1 /* CursorType.NsResize */);\n        }\n    }\n    _private__mouseLeaveEvent(e) {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _private__backLabels() {\n        const res = [];\n        const priceScale = (this._private__priceScale === null) ? undefined : this._private__priceScale;\n        const addViewsForSources = (sources) => {\n            for (let i = 0; i < sources.length; ++i) {\n                const source = sources[i];\n                const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n                for (let j = 0; j < views.length; j++) {\n                    res.push(views[j]);\n                }\n            }\n        };\n        // calculate max and min coordinates for views on selection\n        // crosshair individually\n        addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n        return res;\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__pane._internal_state()._internal_model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, topColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio }) {\n        if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n            return;\n        }\n        ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n        const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n        let left;\n        if (this._private__isLeft) {\n            left = bitmapSize.width - borderSize;\n        }\n        else {\n            left = 0;\n        }\n        ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n    }\n    _private__drawTickMarks(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const tickMarks = this._private__priceScale._internal_marks();\n        const priceScaleOptions = this._private__priceScale._internal_options();\n        const rendererOptions = this._internal_rendererOptions();\n        const tickMarkLeftX = this._private__isLeft ?\n            (this._private__size.width - rendererOptions._internal_tickLength) :\n            0;\n        if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.fillStyle = priceScaleOptions.borderColor;\n                const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n                const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n                const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n                ctx.beginPath();\n                for (const tickMark of tickMarks) {\n                    ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            var _a;\n            ctx.font = this._private__baseFont();\n            ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n            ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            const textLeftX = this._private__isLeft ?\n                Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) :\n                Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n            const yMidCorrections = tickMarks.map((mark) => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n            for (let i = tickMarks.length; i--;) {\n                const tickMark = tickMarks[i];\n                ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n            }\n        });\n    }\n    _private__alignLabels() {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        let center = this._private__size.height / 2;\n        const views = [];\n        const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n        const pane = this._private__pane;\n        const paneState = pane._internal_state();\n        const rendererOptions = this._internal_rendererOptions();\n        // if we are default price scale, append labels from no-scale\n        const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n        if (isDefault) {\n            this._private__pane._internal_state()._internal_orderedSources().forEach((source) => {\n                if (paneState._internal_isOverlay(source)) {\n                    orderedSources.push(source);\n                }\n            });\n        }\n        // we can use any, but let's use the first source as \"center\" one\n        const centerSource = this._private__priceScale._internal_dataSources()[0];\n        const priceScale = this._private__priceScale;\n        const updateForSources = (sources) => {\n            sources.forEach((source) => {\n                const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n                // never align selected sources\n                sourceViews.forEach((view) => {\n                    view._internal_setFixedCoordinate(null);\n                    if (view._internal_isVisible()) {\n                        views.push(view);\n                    }\n                });\n                if (centerSource === source && sourceViews.length > 0) {\n                    center = sourceViews[0]._internal_coordinate();\n                }\n            });\n        };\n        // crosshair individually\n        updateForSources(orderedSources);\n        views.forEach((view) => view._internal_setFixedCoordinate(view._internal_coordinate()));\n        const options = this._private__priceScale._internal_options();\n        if (!options.alignLabels) {\n            return;\n        }\n        this._private__fixLabelOverlap(views, rendererOptions, center);\n    }\n    _private__fixLabelOverlap(views, rendererOptions, center) {\n        if (this._private__size === null) {\n            return;\n        }\n        // split into two parts\n        const top = views.filter((view) => view._internal_coordinate() <= center);\n        const bottom = views.filter((view) => view._internal_coordinate() > center);\n        // sort top from center to top\n        top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n        // share center label\n        if (top.length && bottom.length) {\n            bottom.push(top[0]);\n        }\n        bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n        for (const view of views) {\n            const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n            const coordinate = view._internal_coordinate();\n            if (coordinate > -halfHeight && coordinate < halfHeight) {\n                view._internal_setFixedCoordinate(halfHeight);\n            }\n            if (coordinate > (this._private__size.height - halfHeight) && coordinate < this._private__size.height + halfHeight) {\n                view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n            }\n        }\n        for (let i = 1; i < top.length; i++) {\n            const view = top[i];\n            const prev = top[i - 1];\n            const height = prev._internal_height(rendererOptions, false);\n            const coordinate = view._internal_coordinate();\n            const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n            if (coordinate > prevFixedCoordinate - height) {\n                view._internal_setFixedCoordinate(prevFixedCoordinate - height);\n            }\n        }\n        for (let j = 1; j < bottom.length; j++) {\n            const view = bottom[j];\n            const prev = bottom[j - 1];\n            const height = prev._internal_height(rendererOptions, true);\n            const coordinate = view._internal_coordinate();\n            const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n            if (coordinate < prevFixedCoordinate + height) {\n                view._internal_setFixedCoordinate(prevFixedCoordinate + height);\n            }\n        }\n    }\n    _private__drawBackLabels(target) {\n        if (this._private__size === null) {\n            return;\n        }\n        const views = this._private__backLabels();\n        const rendererOptions = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((view) => {\n            if (view._internal_isAxisLabelVisible()) {\n                const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n                renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n            }\n        });\n    }\n    _private__drawCrosshairLabel(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const views = []; // array of arrays\n        const pane = this._private__pane._internal_state();\n        const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n        if (v.length) {\n            views.push(v);\n        }\n        const ro = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((arr) => {\n            arr.forEach((view) => {\n                view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n            });\n        });\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n    }\n    _private__onMarksChanged() {\n        const width = this._internal_optimalWidth();\n        // avoid price scale is shrunk\n        // using < instead !== to avoid infinite changes\n        if (this._private__prevOptimalWidth < width) {\n            this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n        }\n        this._private__prevOptimalWidth = width;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n    }\n}\n\nfunction sourceBottomPaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_bottomPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourcePaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_paneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_labelPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_topPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nclass PaneWidget {\n    constructor(chart, state) {\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__leftPriceAxisWidget = null;\n        this._private__rightPriceAxisWidget = null;\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__prevPinchScale = 0;\n        this._private__longTap = false;\n        this._private__startTrackPoint = null;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__initCrosshairPosition = null;\n        this._private__scrollXAnimation = null;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__chart = chart;\n        this._private__state = state;\n        this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n        this._private__paneCell = document.createElement('td');\n        this._private__paneCell.style.padding = '0';\n        this._private__paneCell.style.position = 'relative';\n        const paneWrapper = document.createElement('div');\n        paneWrapper.style.width = '100%';\n        paneWrapper.style.height = '100%';\n        paneWrapper.style.position = 'relative';\n        paneWrapper.style.overflow = 'hidden';\n        this._private__leftAxisCell = document.createElement('td');\n        this._private__leftAxisCell.style.padding = '0';\n        this._private__rightAxisCell = document.createElement('td');\n        this._private__rightAxisCell.style.padding = '0';\n        this._private__paneCell.appendChild(paneWrapper);\n        this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.appendChild(this._private__leftAxisCell);\n        this._private__rowElement.appendChild(this._private__paneCell);\n        this._private__rowElement.appendChild(this._private__rightAxisCell);\n        this._internal_updatePriceAxisWidgetsStates();\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_destroy();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__mouseEventHandler._internal_destroy();\n    }\n    _internal_state() {\n        return ensureNotNull(this._private__state);\n    }\n    _internal_setState(pane) {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = pane;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n        }\n        this._internal_updatePriceAxisWidgetsStates();\n    }\n    _internal_chart() {\n        return this._private__chart;\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_updatePriceAxisWidgetsStates() {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__recreatePriceAxisWidgets();\n        if (this._private__model()._internal_serieses().length === 0) {\n            return;\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            const leftPriceScale = this._private__state._internal_leftPriceScale();\n            this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            const rightPriceScale = this._private__state._internal_rightPriceScale();\n            this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n        }\n    }\n    _internal_updatePriceAxisWidgets() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_update();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_update();\n        }\n    }\n    _internal_stretchFactor() {\n        return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n    }\n    _internal_setStretchFactor(stretchFactor) {\n        if (this._private__state) {\n            this._private__state._internal_setStretchFactor(stretchFactor);\n        }\n    }\n    _internal_mouseEnterEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseDownEvent(event) {\n        this._private__onMouseEvent();\n        this._private__mouseTouchDownEvent();\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseMoveEvent(event) {\n        var _a;\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n        const hitTest = this._internal_hitTest(x, y);\n        this._private__chart._internal_setCursorStyle((_a = hitTest === null || hitTest === void 0 ? void 0 : hitTest._internal_cursorStyle) !== null && _a !== void 0 ? _a : null);\n        this._private__model()._internal_setHoveredSource(hitTest && { _internal_source: hitTest._internal_source, _internal_object: hitTest._internal_object });\n    }\n    _internal_mouseClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_mouseDoubleClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n    }\n    _internal_doubleTapEvent(event) {\n        this._internal_mouseDoubleClickEvent(event);\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        this._private__onMouseEvent();\n        this._private__pressedMouseTouchMoveEvent(event);\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseUpEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__longTap = false;\n        this._private__endScroll(event);\n    }\n    _internal_tapEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_longTapEvent(event) {\n        this._private__longTap = true;\n        if (this._private__startTrackPoint === null) {\n            const point = { x: event.localX, y: event.localY };\n            this._private__startTrackingMode(point, point, event);\n        }\n    }\n    _internal_mouseLeaveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__state._internal_model()._internal_setHoveredSource(null);\n        this._private__clearCrosshairPosition();\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_pinchStartEvent() {\n        this._private__prevPinchScale = 1;\n        this._private__model()._internal_stopTimeScaleAnimation();\n    }\n    _internal_pinchEvent(middlePoint, scale) {\n        if (!this._private__chart._internal_options().handleScale.pinch) {\n            return;\n        }\n        const zoomScale = (scale - this._private__prevPinchScale) * 5;\n        this._private__prevPinchScale = scale;\n        this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n    }\n    _internal_touchStartEvent(event) {\n        this._private__longTap = false;\n        this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n        this._private__mouseTouchDownEvent();\n        const crosshair = this._private__model()._internal_crosshairSource();\n        if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n            this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n            this._private__startTrackPoint = { x: event.localX, y: event.localY };\n        }\n    }\n    _internal_touchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__startTrackPoint !== null) {\n            // tracking mode: move crosshair\n            this._private__exitTrackingModeOnNextTry = false;\n            const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n            const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n            const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n            this._private__setCrosshairPosition(newX, newY, event);\n            return;\n        }\n        this._private__pressedMouseTouchMoveEvent(event);\n    }\n    _internal_touchEndEvent(event) {\n        if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n            this._private__exitTrackingModeOnNextTry = true;\n        }\n        this._private__tryExitTrackingMode();\n        this._private__endScroll(event);\n    }\n    _internal_hitTest(x, y) {\n        const state = this._private__state;\n        if (state === null) {\n            return null;\n        }\n        return hitTestPane(state, x, y);\n    }\n    _internal_setPriceAxisSize(width, position) {\n        const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n        ensureNotNull(priceAxisWidget)._internal_setSize(size$1({ width, height: this._private__size.height }));\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (equalSizes(this._private__size, newSize)) {\n            return;\n        }\n        this._private__size = newSize;\n        this._private__isSettingSize = true;\n        this._private__canvasBinding.resizeCanvasElement(newSize);\n        this._private__topCanvasBinding.resizeCanvasElement(newSize);\n        this._private__isSettingSize = false;\n        this._private__paneCell.style.width = newSize.width + 'px';\n        this._private__paneCell.style.height = newSize.height + 'px';\n    }\n    _internal_recalculatePriceScales() {\n        const pane = ensureNotNull(this._private__state);\n        pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n        pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n        for (const source of pane._internal_dataSources()) {\n            if (pane._internal_isOverlay(source)) {\n                const priceScale = source._internal_priceScale();\n                if (priceScale !== null) {\n                    pane._internal_recalculatePriceScale(priceScale);\n                }\n                // for overlay drawings price scale is owner's price scale\n                // however owner's price scale could not contain ds\n                source._internal_updateAllViews();\n            }\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (this._private__state === null) {\n            return;\n        }\n        if (type > 1 /* InvalidationLevel.Cursor */) {\n            this._internal_recalculatePriceScales();\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_paint(type);\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_paint(type);\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                });\n                if (this._private__state) {\n                    this._private__drawSources(target, sourceBottomPaneViews$1);\n                    this._private__drawGrid(target);\n                    this._private__drawWatermark(target);\n                    this._private__drawSources(target, sourcePaneViews$1);\n                    this._private__drawSources(target, sourceLabelPaneViews);\n                }\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshair(topTarget);\n            this._private__drawSources(topTarget, sourceTopPaneViews$1);\n        }\n    }\n    _internal_leftPriceAxisWidget() {\n        return this._private__leftPriceAxisWidget;\n    }\n    _internal_rightPriceAxisWidget() {\n        return this._private__rightPriceAxisWidget;\n    }\n    _internal_drawAdditionalSources(target, paneViewsGetter) {\n        this._private__drawSources(target, paneViewsGetter);\n    }\n    _private__onStateDestroyed() {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = null;\n    }\n    _private__fireClickedDelegate(event) {\n        this._private__fireMouseClickDelegate(this._private__clicked, event);\n    }\n    _private__fireMouseClickDelegate(delegate, event) {\n        const x = event.localX;\n        const y = event.localY;\n        if (delegate._internal_hasListeners()) {\n            delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), { x, y }, event);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, bottomColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawGrid(target) {\n        const state = ensureNotNull(this._private__state);\n        const paneView = state._internal_grid()._internal_paneView();\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            renderer._internal_draw(target, false);\n        }\n    }\n    _private__drawWatermark(target) {\n        const source = this._private__model()._internal_watermarkSource();\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawBackground, source);\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, source);\n    }\n    _private__drawCrosshair(target) {\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n    }\n    _private__drawSources(target, paneViewsGetter) {\n        const state = ensureNotNull(this._private__state);\n        const sources = state._internal_orderedSources();\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n        }\n    }\n    _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n        const state = ensureNotNull(this._private__state);\n        const hoveredSource = state._internal_model()._internal_hoveredSource();\n        const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n        const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_hitTestData\n            : undefined;\n        const drawRendererFn = (renderer) => drawFn(renderer, target, isHovered, objecId);\n        drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, state);\n    }\n    _private__recreatePriceAxisWidgets() {\n        if (this._private__state === null) {\n            return;\n        }\n        const chart = this._private__chart;\n        const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n        const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n        if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n            this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n            this._private__leftPriceAxisWidget._internal_destroy();\n            this._private__leftPriceAxisWidget = null;\n        }\n        if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n            this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n            this._private__rightPriceAxisWidget._internal_destroy();\n            this._private__rightPriceAxisWidget = null;\n        }\n        const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n        if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n            this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n            this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n        }\n        if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n            this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n            this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n        }\n    }\n    _private__preventScroll(event) {\n        return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n    }\n    _private__correctXCoord(x) {\n        return Math.max(0, Math.min(x, this._private__size.width - 1));\n    }\n    _private__correctYCoord(y) {\n        return Math.max(0, Math.min(y, this._private__size.height - 1));\n    }\n    _private__setCrosshairPosition(x, y, event) {\n        this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n    }\n    _private__clearCrosshairPosition() {\n        this._private__model()._internal_clearCurrentPosition();\n    }\n    _private__tryExitTrackingMode() {\n        if (this._private__exitTrackingModeOnNextTry) {\n            this._private__startTrackPoint = null;\n            this._private__clearCrosshairPosition();\n        }\n    }\n    _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n        this._private__startTrackPoint = startTrackPoint;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n        const crosshair = this._private__model()._internal_crosshairSource();\n        this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n    }\n    _private__model() {\n        return this._private__chart._internal_model();\n    }\n    _private__endScroll(event) {\n        if (!this._private__isScrolling) {\n            return;\n        }\n        const model = this._private__model();\n        const state = this._internal_state();\n        model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        model._internal_endScrollTime();\n        if (this._private__scrollXAnimation !== null) {\n            const startAnimationTime = performance.now();\n            const timeScale = model._internal_timeScale();\n            this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n            if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n                model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n            }\n        }\n    }\n    _private__onMouseEvent() {\n        this._private__startTrackPoint = null;\n    }\n    _private__mouseTouchDownEvent() {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__model()._internal_stopTimeScaleAnimation();\n        if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n            // If any focusable element except the page itself is focused, remove the focus\n            ensureNotNull(document.activeElement).blur();\n        }\n        else {\n            // Clear selection\n            const selection = document.getSelection();\n            if (selection !== null) {\n                selection.removeAllRanges();\n            }\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n            return;\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__pressedMouseTouchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const model = this._private__model();\n        const timeScale = model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        const chartOptions = this._private__chart._internal_options();\n        const scrollOptions = chartOptions.handleScroll;\n        const kineticScrollOptions = chartOptions.kineticScroll;\n        if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) &&\n            (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n            return;\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        const now = performance.now();\n        if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n            this._private__startScrollingPos = {\n                x: event.clientX,\n                y: event.clientY,\n                _internal_timestamp: now,\n                _internal_localX: event.localX,\n                _internal_localY: event.localY,\n            };\n        }\n        if (this._private__startScrollingPos !== null &&\n            !this._private__isScrolling &&\n            (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n            if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n                const barSpacing = timeScale._internal_barSpacing();\n                this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n            }\n            else {\n                this._private__scrollXAnimation = null;\n            }\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n            }\n            model._internal_startScrollTime(event.localX);\n            this._private__isScrolling = true;\n        }\n        if (this._private__isScrolling) {\n            // this allows scrolling not default price scales\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n            }\n            model._internal_scrollTimeTo(event.localX);\n            if (this._private__scrollXAnimation !== null) {\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n            }\n        }\n    }\n}\n\nclass PriceAxisStub {\n    constructor(side, options, params, borderVisible, bottomColor) {\n        this._private__invalidated = true;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n        this._private__isLeft = side === 'left';\n        this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n        this._private__options = options;\n        this._private__borderVisible = borderVisible;\n        this._private__bottomColor = bottomColor;\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    }\n    _internal_destroy() {\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (!equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n            this._private__invalidated = true;\n        }\n    }\n    _internal_paint(type) {\n        if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n            return;\n        }\n        if (this._private__size.width === 0 || this._private__size.height === 0) {\n            return;\n        }\n        this._private__invalidated = false;\n        this._private__canvasBinding.applySuggestedBitmapSize();\n        const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n        if (target !== null) {\n            target.useBitmapCoordinateSpace((scope) => {\n                this._private__drawBackground(scope);\n                this._private__drawBorder(scope);\n            });\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (!this._private__borderVisible()) {\n            return;\n        }\n        ctx.fillStyle = this._private__options.timeScale.borderColor;\n        const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n        const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n        const left = (this._private__isLeft) ? bitmapSize.width - horzBorderSize : 0;\n        ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n    }\n}\n\nfunction buildTimeAxisViewsGetter(zOrder) {\n    return (source) => { var _a, _b; return (_b = (_a = source._internal_timePaneViews) === null || _a === void 0 ? void 0 : _a.call(source, zOrder)) !== null && _b !== void 0 ? _b : []; };\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n    constructor(chartWidget, horzScaleBehavior) {\n        this._private__leftStub = null;\n        this._private__rightStub = null;\n        this._private__rendererOptions = null;\n        this._private__mouseDown = false;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__sizeChanged = new Delegate();\n        this._private__widthCache = new TextWidthCache(5);\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__chart = chartWidget;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__options = chartWidget._internal_options().layout;\n        this._private__element = document.createElement('tr');\n        this._private__leftStubCell = document.createElement('td');\n        this._private__leftStubCell.style.padding = '0';\n        this._private__rightStubCell = document.createElement('td');\n        this._private__rightStubCell.style.padding = '0';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.height = '25px';\n        this._private__cell.style.padding = '0';\n        this._private__dv = document.createElement('div');\n        this._private__dv.style.width = '100%';\n        this._private__dv.style.height = '100%';\n        this._private__dv.style.position = 'relative';\n        this._private__dv.style.overflow = 'hidden';\n        this._private__cell.appendChild(this._private__dv);\n        this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__element.appendChild(this._private__leftStubCell);\n        this._private__element.appendChild(this._private__cell);\n        this._private__element.appendChild(this._private__rightStubCell);\n        this._private__recreateStubs();\n        this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => true,\n            _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_destroy();\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__element;\n    }\n    _internal_leftStub() {\n        return this._private__leftStub;\n    }\n    _internal_rightStub() {\n        return this._private__rightStub;\n    }\n    _internal_mouseDownEvent(event) {\n        if (this._private__mouseDown) {\n            return;\n        }\n        this._private__mouseDown = true;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_startScaleTime(event.localX);\n    }\n    _internal_touchStartEvent(event) {\n        this._internal_mouseDownEvent(event);\n    }\n    _internal_mouseDownOutsideEvent() {\n        const model = this._private__chart._internal_model();\n        if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n            this._private__mouseDown = false;\n            if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n                model._internal_endScaleTime();\n            }\n        }\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_scaleTimeTo(event.localX);\n    }\n    _internal_touchMoveEvent(event) {\n        this._internal_pressedMouseMoveEvent(event);\n    }\n    _internal_mouseUpEvent() {\n        this._private__mouseDown = false;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_endScaleTime();\n    }\n    _internal_touchEndEvent() {\n        this._internal_mouseUpEvent();\n    }\n    _internal_mouseDoubleClickEvent() {\n        if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n            this._private__chart._internal_model()._internal_resetTimeScale();\n        }\n    }\n    _internal_doubleTapEvent() {\n        this._internal_mouseDoubleClickEvent();\n    }\n    _internal_mouseEnterEvent() {\n        if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n            this._private__setCursor(1 /* CursorType.EwResize */);\n        }\n    }\n    _internal_mouseLeaveEvent() {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_sizeChanged() {\n        return this._private__sizeChanged;\n    }\n    _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n        if (!equalSizes(this._private__size, timeAxisSize)) {\n            this._private__size = timeAxisSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${timeAxisSize.width}px`;\n            this._private__cell.style.height = `${timeAxisSize.height}px`;\n            this._private__sizeChanged._internal_fire(timeAxisSize);\n        }\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_setSize(size$1({ width: leftStubWidth, height: timeAxisSize.height }));\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_setSize(size$1({ width: rightStubWidth, height: timeAxisSize.height }));\n        }\n    }\n    _internal_optimalHeight() {\n        const rendererOptions = this._private__getRendererOptions();\n        return Math.ceil(\n        // rendererOptions.offsetSize +\n        rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_paddingBottom +\n            rendererOptions._internal_labelBottomOffset);\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the time scale\n        this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                    this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n                });\n                this._private__drawTickMarks(target);\n                this._private__drawAdditionalSources(target, sourcePaneViews);\n                // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n                // so let's don't call this code at all for now\n                // this._drawLabels(this._chart.model().dataSources(), target);\n            }\n            if (this._private__leftStub !== null) {\n                this._private__leftStub._internal_paint(type);\n            }\n            if (this._private__rightStub !== null) {\n                this._private__rightStub._internal_paint(type);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n            this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n        }\n    }\n    _private__drawAdditionalSources(target, axisViewsGetter) {\n        const sources = this._private__chart._internal_model()._internal_serieses();\n        for (const source of sources) {\n            drawSourcePaneViews(axisViewsGetter, (renderer) => drawBackground(renderer, target, false, undefined), source, undefined);\n        }\n        for (const source of sources) {\n            drawSourcePaneViews(axisViewsGetter, (renderer) => drawForeground(renderer, target, false, undefined), source, undefined);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, verticalPixelRatio }) {\n        if (this._private__chart._internal_options().timeScale.borderVisible) {\n            ctx.fillStyle = this._private__lineColor();\n            const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n            ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n        }\n    }\n    _private__drawTickMarks(target) {\n        const timeScale = this._private__chart._internal_model()._internal_timeScale();\n        const tickMarks = timeScale._internal_marks();\n        if (!tickMarks || tickMarks.length === 0) {\n            return;\n        }\n        const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n        const rendererOptions = this._private__getRendererOptions();\n        const options = timeScale._internal_options();\n        if (options.borderVisible && options.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.strokeStyle = this._private__lineColor();\n                ctx.fillStyle = this._private__lineColor();\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.beginPath();\n                const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n                for (let index = tickMarks.length; index--;) {\n                    const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n                    ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const yText = (rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._private__textColor();\n            // draw base marks\n            ctx.font = this._private__baseFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight < maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n            if (this._private__chart._internal_options().timeScale.allowBoldLabels) {\n                ctx.font = this._private__baseBoldFont();\n            }\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight >= maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n        });\n    }\n    _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n        const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n        const labelWidthHalf = labelWidth / 2;\n        const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (leftTextCoordinate < 0) {\n            coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n        }\n        else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n            coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n        }\n        return coordinate;\n    }\n    _private__drawLabels(sources, target) {\n        const rendererOptions = this._private__getRendererOptions();\n        for (const source of sources) {\n            for (const view of source._internal_timeAxisViews()) {\n                view._internal_renderer()._internal_draw(target, rendererOptions);\n            }\n        }\n    }\n    _private__lineColor() {\n        return this._private__chart._internal_options().timeScale.borderColor;\n    }\n    _private__textColor() {\n        return this._private__options.textColor;\n    }\n    _private__fontSize() {\n        return this._private__options.fontSize;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n    }\n    _private__baseBoldFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n    }\n    _private__getRendererOptions() {\n        if (this._private__rendererOptions === null) {\n            this._private__rendererOptions = {\n                _internal_borderSize: 1 /* Constants.BorderSize */,\n                _internal_baselineOffset: NaN,\n                _internal_paddingTop: NaN,\n                _internal_paddingBottom: NaN,\n                _internal_paddingHorizontal: NaN,\n                _internal_tickLength: 5 /* Constants.TickLength */,\n                _internal_fontSize: NaN,\n                _internal_font: '',\n                _internal_widthCache: new TextWidthCache(),\n                _internal_labelBottomOffset: 0,\n            };\n        }\n        const rendererOptions = this._private__rendererOptions;\n        const newFont = this._private__baseFont();\n        if (rendererOptions._internal_font !== newFont) {\n            const fontSize = this._private__fontSize();\n            rendererOptions._internal_fontSize = fontSize;\n            rendererOptions._internal_font = newFont;\n            rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n            rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n            rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n            rendererOptions._internal_baselineOffset = 0;\n            rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n            rendererOptions._internal_widthCache._internal_reset();\n        }\n        return this._private__rendererOptions;\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n    }\n    _private__recreateStubs() {\n        const model = this._private__chart._internal_model();\n        const options = model._internal_options();\n        if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n            this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n            this._private__leftStub._internal_destroy();\n            this._private__leftStub = null;\n        }\n        if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n            this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n            this._private__rightStub._internal_destroy();\n            this._private__rightStub = null;\n        }\n        const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n        const params = {\n            _internal_rendererOptionsProvider: rendererOptionsProvider,\n        };\n        const borderVisibleGetter = () => {\n            return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n        };\n        const bottomColorGetter = () => model._internal_backgroundBottomColor();\n        if (options.leftPriceScale.visible && this._private__leftStub === null) {\n            this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n        }\n        if (options.rightPriceScale.visible && this._private__rightStub === null) {\n            this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n        }\n    }\n}\n\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n    constructor(container, options, horzScaleBehavior) {\n        this._private__paneWidgets = [];\n        this._private__drawRafId = 0;\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__leftPriceAxisWidth = 0;\n        this._private__rightPriceAxisWidth = 0;\n        this._private__invalidateMask = null;\n        this._private__drawPlanned = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__observer = null;\n        this._private__cursorStyleOverride = null;\n        this._private__container = container;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__element = document.createElement('div');\n        this._private__element.classList.add('tv-lightweight-charts');\n        this._private__element.style.overflow = 'hidden';\n        this._private__element.style.direction = 'ltr';\n        this._private__element.style.width = '100%';\n        this._private__element.style.height = '100%';\n        disableSelection(this._private__element);\n        this._private__tableElement = document.createElement('table');\n        this._private__tableElement.setAttribute('cellspacing', '0');\n        this._private__element.appendChild(this._private__tableElement);\n        this._private__onWheelBound = this._private__onMousewheel.bind(this);\n        if (shouldSubscribeMouseWheel(this._private__options)) {\n            this._private__setMouseWheelEventListener(true);\n        }\n        this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n        this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n        this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n        this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n        const usedObserver = options.autoSize && this._private__installObserver();\n        // observer could not fire event immediately for some cases\n        // so we have to set initial size manually\n        let width = this._private__options.width;\n        let height = this._private__options.height;\n        // ignore width/height options if observer has actually been used\n        // however respect options if installing resize observer failed\n        if (usedObserver || width === 0 || height === 0) {\n            const containerRect = container.getBoundingClientRect();\n            width = width || containerRect.width;\n            height = height || containerRect.height;\n        }\n        // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n        // or after but with adjustSize to properly update time scale\n        this._internal_resize(width, height);\n        this._private__syncGuiWithModel();\n        container.appendChild(this._private__element);\n        this._private__updateTimeAxisVisibility();\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneWidgets() {\n        return this._private__paneWidgets;\n    }\n    _internal_timeAxisWidget() {\n        return this._private__timeAxisWidget;\n    }\n    _internal_destroy() {\n        this._private__setMouseWheelEventListener(false);\n        if (this._private__drawRafId !== 0) {\n            window.cancelAnimationFrame(this._private__drawRafId);\n        }\n        this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__model._internal_destroy();\n        for (const paneWidget of this._private__paneWidgets) {\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n        }\n        this._private__paneWidgets = [];\n        // for (const paneSeparator of this._paneSeparators) {\n        // \tthis._destroySeparator(paneSeparator);\n        // }\n        // this._paneSeparators = [];\n        ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n        if (this._private__element.parentElement !== null) {\n            this._private__element.parentElement.removeChild(this._private__element);\n        }\n        this._private__crosshairMoved._internal_destroy();\n        this._private__clicked._internal_destroy();\n        this._private__dblClicked._internal_destroy();\n        this._private__uninstallObserver();\n    }\n    _internal_resize(width, height, forceRepaint = false) {\n        if (this._private__height === height && this._private__width === width) {\n            return;\n        }\n        const sizeHint = suggestChartSize(size$1({ width, height }));\n        this._private__height = sizeHint.height;\n        this._private__width = sizeHint.width;\n        const heightStr = this._private__height + 'px';\n        const widthStr = this._private__width + 'px';\n        ensureNotNull(this._private__element).style.height = heightStr;\n        ensureNotNull(this._private__element).style.width = widthStr;\n        this._private__tableElement.style.height = heightStr;\n        this._private__tableElement.style.width = widthStr;\n        if (forceRepaint) {\n            this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n        }\n        else {\n            this._private__model._internal_fullUpdate();\n        }\n    }\n    _internal_paint(invalidateMask) {\n        if (invalidateMask === undefined) {\n            invalidateMask = InvalidateMask._internal_full();\n        }\n        for (let i = 0; i < this._private__paneWidgets.length; i++) {\n            this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n        }\n        if (this._private__options.timeScale.visible) {\n            this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n        }\n    }\n    _internal_applyOptions(options) {\n        const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        // we don't need to merge options here because it's done in chart model\n        // and since both model and widget share the same object it will be done automatically for widget as well\n        // not ideal solution for sure, but it work's for now ¯\\_(ツ)_/¯\n        this._private__model._internal_applyOptions(options);\n        const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n            this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__applyAutoSizeOptions(options);\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_takeScreenshot() {\n        if (this._private__invalidateMask !== null) {\n            this._private__drawImpl(this._private__invalidateMask, performance.now());\n            this._private__invalidateMask = null;\n        }\n        const screeshotBitmapSize = this._private__traverseLayout(null);\n        const screenshotCanvas = document.createElement('canvas');\n        screenshotCanvas.width = screeshotBitmapSize.width;\n        screenshotCanvas.height = screeshotBitmapSize.height;\n        const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n        this._private__traverseLayout(ctx);\n        return screenshotCanvas;\n    }\n    _internal_getPriceAxisWidth(position) {\n        if (position === 'left' && !this._private__isLeftAxisVisible()) {\n            return 0;\n        }\n        if (position === 'right' && !this._private__isRightAxisVisible()) {\n            return 0;\n        }\n        if (this._private__paneWidgets.length === 0) {\n            return 0;\n        }\n        // we don't need to worry about exactly pane widget here\n        // because all pane widgets have the same width of price axis widget\n        // see _adjustSizeImpl\n        const priceAxisWidget = position === 'left'\n            ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget()\n            : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n        return ensureNotNull(priceAxisWidget)._internal_getWidth();\n    }\n    _internal_autoSizeActive() {\n        return this._private__options.autoSize && this._private__observer !== null;\n    }\n    _internal_element() {\n        return this._private__element;\n    }\n    _internal_setCursorStyle(style) {\n        this._private__cursorStyleOverride = style;\n        if (this._private__cursorStyleOverride) {\n            this._internal_element().style.setProperty('cursor', style);\n        }\n        else {\n            this._internal_element().style.removeProperty('cursor');\n        }\n    }\n    _internal_getCursorOverrideStyle() {\n        return this._private__cursorStyleOverride;\n    }\n    _internal_paneSize() {\n        // we currently only support a single pane.\n        return ensureDefined(this._private__paneWidgets[0])._internal_getSize();\n    }\n    // eslint-disable-next-line complexity\n    _private__applyAutoSizeOptions(options) {\n        if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n            warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n            return;\n        }\n        if (options.autoSize && !this._private__observer) {\n            // installing observer will override resize if successful\n            this._private__installObserver();\n        }\n        if (options.autoSize === false && this._private__observer !== null) {\n            this._private__uninstallObserver();\n        }\n        if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n            this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n        }\n    }\n    /**\n     * Traverses the widget's layout (pane and axis child widgets),\n     * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n     *\n     * @param ctx - if passed, used to draw the screenshot of widget\n     * @returns screenshot bitmap size\n     */\n    _private__traverseLayout(ctx) {\n        let totalWidth = 0;\n        let totalHeight = 0;\n        const firstPane = this._private__paneWidgets[0];\n        const drawPriceAxises = (position, targetX) => {\n            let targetY = 0;\n            for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n                const paneWidget = this._private__paneWidgets[paneIndex];\n                const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n                const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n                if (ctx !== null) {\n                    priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n                }\n                targetY += bitmapSize.height;\n                // if (paneIndex < this._paneWidgets.length - 1) {\n                // \tconst separator = this._paneSeparators[paneIndex];\n                // \tconst separatorBitmapSize = separator.getBitmapSize();\n                // \tif (ctx !== null) {\n                // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n                // \t}\n                // \ttargetY += separatorBitmapSize.height;\n                // }\n            }\n        };\n        // draw left price scale if exists\n        if (this._private__isLeftAxisVisible()) {\n            drawPriceAxises('left', 0);\n            const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += leftAxisBitmapWidth;\n        }\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            const bitmapSize = paneWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n            }\n            totalHeight += bitmapSize.height;\n            // if (paneIndex < this._paneWidgets.length - 1) {\n            // \tconst separator = this._paneSeparators[paneIndex];\n            // \tconst separatorBitmapSize = separator.getBitmapSize();\n            // \tif (ctx !== null) {\n            // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n            // \t}\n            // \ttotalHeight += separatorBitmapSize.height;\n            // }\n        }\n        const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n        totalWidth += firstPaneBitmapWidth;\n        // draw right price scale if exists\n        if (this._private__isRightAxisVisible()) {\n            drawPriceAxises('right', totalWidth);\n            const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += rightAxisBitmapWidth;\n        }\n        const drawStub = (position, targetX, targetY) => {\n            const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n            stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n        };\n        // draw time scale and stubs\n        if (this._private__options.timeScale.visible) {\n            const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                let targetX = 0;\n                if (this._private__isLeftAxisVisible()) {\n                    drawStub('left', targetX, totalHeight);\n                    targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n                }\n                this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n                targetX += timeAxisBitmapSize.width;\n                if (this._private__isRightAxisVisible()) {\n                    drawStub('right', targetX, totalHeight);\n                }\n            }\n            totalHeight += timeAxisBitmapSize.height;\n        }\n        return size$1({\n            width: totalWidth,\n            height: totalHeight,\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__adjustSizeImpl() {\n        let totalStretch = 0;\n        let leftPriceAxisWidth = 0;\n        let rightPriceAxisWidth = 0;\n        for (const paneWidget of this._private__paneWidgets) {\n            if (this._private__isLeftAxisVisible()) {\n                leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n            }\n            if (this._private__isRightAxisVisible()) {\n                rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n            }\n            totalStretch += paneWidget._internal_stretchFactor();\n        }\n        leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n        rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n        const width = this._private__width;\n        const height = this._private__height;\n        const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n        // const separatorCount = this._paneSeparators.length;\n        // const separatorHeight = SEPARATOR_HEIGHT;\n        const separatorsHeight = 0; // separatorHeight * separatorCount;\n        const timeAxisVisible = this._private__options.timeScale.visible;\n        let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n        timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n        const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n        const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n        const stretchPixels = totalPaneHeight / totalStretch;\n        let accumulatedHeight = 0;\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n            let paneHeight = 0;\n            let calculatePaneHeight = 0;\n            if (paneIndex === this._private__paneWidgets.length - 1) {\n                calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n            }\n            else {\n                calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n            }\n            paneHeight = Math.max(calculatePaneHeight, 2);\n            accumulatedHeight += paneHeight;\n            paneWidget._internal_setSize(size$1({ width: paneWidth, height: paneHeight }));\n            if (this._private__isLeftAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n            }\n            if (this._private__isRightAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n            }\n            if (paneWidget._internal_state()) {\n                this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n            }\n        }\n        this._private__timeAxisWidget._internal_setSizes(size$1({ width: timeAxisVisible ? paneWidth : 0, height: timeAxisHeight }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n        this._private__model._internal_setWidth(paneWidth);\n        if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n            this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n        }\n        if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n            this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n        }\n    }\n    _private__setMouseWheelEventListener(add) {\n        if (add) {\n            this._private__element.addEventListener('wheel', this._private__onWheelBound, { passive: false });\n            return;\n        }\n        this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n    }\n    _private__determineWheelSpeedAdjustment(event) {\n        switch (event.deltaMode) {\n            case event.DOM_DELTA_PAGE:\n                // one screen at time scroll mode\n                return 120;\n            case event.DOM_DELTA_LINE:\n                // one line at time scroll mode\n                return 32;\n        }\n        if (!windowsChrome) {\n            return 1;\n        }\n        // Chromium on Windows has a bug where the scroll speed isn't correctly\n        // adjusted for high density displays. We need to correct for this so that\n        // scroll speed is consistent between browsers.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n        return (1 / window.devicePixelRatio);\n    }\n    _private__onMousewheel(event) {\n        if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) &&\n            (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n            return;\n        }\n        const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n        const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n        const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n            const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n            const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n            this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n        }\n        if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n            this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n        }\n    }\n    _private__drawImpl(invalidateMask, time) {\n        var _a;\n        const invalidationType = invalidateMask._internal_fullInvalidation();\n        // actions for full invalidation ONLY (not shared with light)\n        if (invalidationType === 3 /* InvalidationLevel.Full */) {\n            this._private__updateGui();\n        }\n        // light or full invalidate actions\n        if (invalidationType === 3 /* InvalidationLevel.Full */ ||\n            invalidationType === 2 /* InvalidationLevel.Light */) {\n            this._private__applyMomentaryAutoScale(invalidateMask);\n            this._private__applyTimeScaleInvalidations(invalidateMask, time);\n            this._private__timeAxisWidget._internal_update();\n            this._private__paneWidgets.forEach((pane) => {\n                pane._internal_updatePriceAxisWidgets();\n            });\n            // In the case a full invalidation has been postponed during the draw, reapply\n            // the timescale invalidations. A full invalidation would mean there is a change\n            // in the timescale width (caused by price scale changes) that needs to be drawn\n            // right away to avoid flickering.\n            if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n                this._private__invalidateMask._internal_merge(invalidateMask);\n                this._private__updateGui();\n                this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n                this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n                invalidateMask = this._private__invalidateMask;\n                this._private__invalidateMask = null;\n            }\n        }\n        this._internal_paint(invalidateMask);\n    }\n    _private__applyTimeScaleInvalidations(invalidateMask, time) {\n        for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n        }\n    }\n    _private__applyMomentaryAutoScale(invalidateMask) {\n        const panes = this._private__model._internal_panes();\n        for (let i = 0; i < panes.length; i++) {\n            if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n                panes[i]._internal_momentaryAutoScale();\n            }\n        }\n    }\n    _private__applyTimeScaleInvalidation(invalidation, time) {\n        const timeScale = this._private__model._internal_timeScale();\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                timeScale._internal_fitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                timeScale._internal_setLogicalRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                timeScale._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                timeScale._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                timeScale._internal_restoreDefault();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                if (!invalidation._internal_value._internal_finished(time)) {\n                    timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n                }\n                break;\n        }\n    }\n    _private__invalidateHandler(invalidateMask) {\n        if (this._private__invalidateMask !== null) {\n            this._private__invalidateMask._internal_merge(invalidateMask);\n        }\n        else {\n            this._private__invalidateMask = invalidateMask;\n        }\n        if (!this._private__drawPlanned) {\n            this._private__drawPlanned = true;\n            this._private__drawRafId = window.requestAnimationFrame((time) => {\n                this._private__drawPlanned = false;\n                this._private__drawRafId = 0;\n                if (this._private__invalidateMask !== null) {\n                    const mask = this._private__invalidateMask;\n                    this._private__invalidateMask = null;\n                    this._private__drawImpl(mask, time);\n                    for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n                        if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n                            this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n    }\n    _private__updateGui() {\n        this._private__syncGuiWithModel();\n    }\n    // private _destroySeparator(separator: PaneSeparator): void {\n    // \tthis._tableElement.removeChild(separator.getElement());\n    // \tseparator.destroy();\n    // }\n    _private__syncGuiWithModel() {\n        const panes = this._private__model._internal_panes();\n        const targetPaneWidgetsCount = panes.length;\n        const actualPaneWidgetsCount = this._private__paneWidgets.length;\n        // Remove (if needed) pane widgets and separators\n        for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n            const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n            // const paneSeparator = this._paneSeparators.pop();\n            // if (paneSeparator !== undefined) {\n            // \tthis._destroySeparator(paneSeparator);\n            // }\n        }\n        // Create (if needed) new pane widgets and separators\n        for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n            const paneWidget = new PaneWidget(this, panes[i]);\n            paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n            paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this), this);\n            this._private__paneWidgets.push(paneWidget);\n            // create and insert separator\n            // if (i > 1) {\n            // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n            // \tthis._paneSeparators.push(paneSeparator);\n            // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n            // }\n            // insert paneWidget\n            this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n        }\n        for (let i = 0; i < targetPaneWidgetsCount; i++) {\n            const state = panes[i];\n            const paneWidget = this._private__paneWidgets[i];\n            if (paneWidget._internal_state() !== state) {\n                paneWidget._internal_setState(state);\n            }\n            else {\n                paneWidget._internal_updatePriceAxisWidgetsStates();\n            }\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__adjustSizeImpl();\n    }\n    _private__getMouseEventParamsImpl(index, point, event) {\n        var _a;\n        const seriesData = new Map();\n        if (index !== null) {\n            const serieses = this._private__model._internal_serieses();\n            serieses.forEach((s) => {\n                // TODO: replace with search left\n                const data = s._internal_bars()._internal_search(index);\n                if (data !== null) {\n                    seriesData.set(s, data);\n                }\n            });\n        }\n        let clientTime;\n        if (index !== null) {\n            const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a.originalTime;\n            if (timePoint !== undefined) {\n                clientTime = timePoint;\n            }\n        }\n        const hoveredSource = this._internal_model()._internal_hoveredSource();\n        const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series\n            ? hoveredSource._internal_source\n            : undefined;\n        const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_externalId\n            : undefined;\n        return {\n            _internal_originalTime: clientTime,\n            _internal_index: index !== null && index !== void 0 ? index : undefined,\n            _internal_point: point !== null && point !== void 0 ? point : undefined,\n            _internal_hoveredSeries: hoveredSeries,\n            _internal_seriesData: seriesData,\n            _internal_hoveredObject: hoveredObject,\n            _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined,\n        };\n    }\n    _private__onPaneWidgetClicked(time, point, event) {\n        this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetDblClicked(time, point, event) {\n        this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetCrosshairMoved(time, point, event) {\n        this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__updateTimeAxisVisibility() {\n        const display = this._private__options.timeScale.visible ? '' : 'none';\n        this._private__timeAxisWidget._internal_getElement().style.display = display;\n    }\n    _private__isLeftAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n    }\n    _private__isRightAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n    }\n    _private__installObserver() {\n        // eslint-disable-next-line no-restricted-syntax\n        if (!('ResizeObserver' in window)) {\n            warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n            return false;\n        }\n        else {\n            this._private__observer = new ResizeObserver((entries) => {\n                const containerEntry = entries.find((entry) => entry.target === this._private__container);\n                if (!containerEntry) {\n                    return;\n                }\n                this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n            });\n            this._private__observer.observe(this._private__container, { box: 'border-box' });\n            return true;\n        }\n    }\n    _private__uninstallObserver() {\n        if (this._private__observer !== null) {\n            this._private__observer.disconnect();\n        }\n        this._private__observer = null;\n    }\n}\nfunction disableSelection(element) {\n    element.style.userSelect = 'none';\n    // eslint-disable-next-line deprecation/deprecation\n    element.style.webkitUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.msUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.MozUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n    return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\n\nfunction isWhitespaceData(data) {\n    return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n    return (data.open !== undefined ||\n        data.value !== undefined);\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.lineColor !== undefined) {\n        res._internal_lineColor = item.lineColor;\n    }\n    if (item.topColor !== undefined) {\n        res._internal_topColor = item.topColor;\n    }\n    if (item.bottomColor !== undefined) {\n        res._internal_bottomColor = item.bottomColor;\n    }\n    return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.topLineColor !== undefined) {\n        res._internal_topLineColor = item.topLineColor;\n    }\n    if (item.bottomLineColor !== undefined) {\n        res._internal_bottomLineColor = item.bottomLineColor;\n    }\n    if (item.topFillColor1 !== undefined) {\n        res._internal_topFillColor1 = item.topFillColor1;\n    }\n    if (item.topFillColor2 !== undefined) {\n        res._internal_topFillColor2 = item.topFillColor2;\n    }\n    if (item.bottomFillColor1 !== undefined) {\n        res._internal_bottomFillColor1 = item.bottomFillColor1;\n    }\n    if (item.bottomFillColor2 !== undefined) {\n        res._internal_bottomFillColor2 = item.bottomFillColor2;\n    }\n    return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    if (item.borderColor !== undefined) {\n        res._internal_borderColor = item.borderColor;\n    }\n    if (item.wickColor !== undefined) {\n        res._internal_wickColor = item.wickColor;\n    }\n    return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n    const values = ensureDefined(dataToPlotRow)(item);\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const last = values[values.length - 1];\n    const value = [last, max, min, last];\n    const _a = item, { time: excludedTime, color } = _a, data = __rest(_a, [\"time\", \"color\"]);\n    return { _internal_index: index, _internal_time: time, _internal_value: value, _internal_originalTime: originalTime, _internal_data: data, _internal_color: color };\n}\nfunction isSeriesPlotRow(row) {\n    return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n    if (bar.customValues !== undefined) {\n        plotRow._internal_customValues = bar.customValues;\n    }\n    return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n    if (customIsWhitespace) {\n        return customIsWhitespace(bar);\n    }\n    return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n    return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n        if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n            return wrapCustomValues({ _internal_time: time, _internal_index: index, _internal_originalTime: originalTime }, bar);\n        }\n        return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n    };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n    const seriesPlotRowFnMap = {\n        Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n        Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n        Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n        Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n        Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Custom: wrapWhitespaceData(getCustomSeriesPlotRow),\n    };\n    return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n    return { _internal_index: 0, _internal_mapping: new Map(), _internal_timePoint: timePoint };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n    if (seriesRows === undefined || seriesRows.length === 0) {\n        return undefined;\n    }\n    return {\n        _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n        _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time),\n    };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n    const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n    const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n    if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n        return {\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime &&\n                firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime,\n        };\n    }\n    return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n    let result;\n    mergedPointData.forEach((v) => {\n        if (result === undefined) {\n            result = v._internal_originalTime;\n        }\n    });\n    return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n    if (data._internal_originalTime === undefined) {\n        data._internal_originalTime = data.time;\n    }\n}\nclass DataLayer {\n    constructor(horzScaleBehavior) {\n        // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n        // it's just different kind of maps to make usages/perf better\n        this._private__pointDataByTimePoint = new Map();\n        this._private__seriesRowsBySeries = new Map();\n        this._private__seriesLastTimePoint = new Map();\n        // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n        this._private__sortedTimePoints = [];\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__pointDataByTimePoint.clear();\n        this._private__seriesRowsBySeries.clear();\n        this._private__seriesLastTimePoint.clear();\n        this._private__sortedTimePoints = [];\n    }\n    _internal_setSeriesData(series, data) {\n        let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n        let isTimeScaleAffected = false;\n        // save previous series rows data before it's replaced inside this._setRowsToSeries\n        const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n        if (prevSeriesRows !== undefined) {\n            if (this._private__seriesRowsBySeries.size === 1) {\n                needCleanupPoints = false;\n                isTimeScaleAffected = true;\n                // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n                this._private__pointDataByTimePoint.clear();\n            }\n            else {\n                // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n                // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n                for (const point of this._private__sortedTimePoints) {\n                    if (point.pointData._internal_mapping.delete(series)) {\n                        isTimeScaleAffected = true;\n                    }\n                }\n            }\n        }\n        let seriesRows = [];\n        if (data.length !== 0) {\n            const originalTimes = data.map((d) => d.time);\n            const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n            const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n            const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n            const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n            seriesRows = data.map((item, index) => {\n                const time = timeConverter(item.time);\n                const horzItemKey = this._private__horzScaleBehavior.key(time);\n                let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n                if (timePointData === undefined) {\n                    // the indexes will be sync later\n                    timePointData = createEmptyTimePointData(time);\n                    this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n                    isTimeScaleAffected = true;\n                }\n                const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n                timePointData._internal_mapping.set(series, row);\n                return row;\n            });\n        }\n        if (needCleanupPoints) {\n            // we deleted the old data from mapping and added the new ones\n            // so there might be empty points now, let's remove them first\n            this._private__cleanupPointsData();\n        }\n        this._private__setRowsToSeries(series, seriesRows);\n        let firstChangedPointIndex = -1;\n        if (isTimeScaleAffected) {\n            // then generate the time scale points\n            // timeWeight will be updates in _updateTimeScalePoints later\n            const newTimeScalePoints = [];\n            this._private__pointDataByTimePoint.forEach((pointData) => {\n                newTimeScalePoints.push({\n                    timeWeight: 0,\n                    time: pointData._internal_timePoint,\n                    pointData,\n                    originalTime: timeScalePointTime(pointData._internal_mapping),\n                });\n            });\n            newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n            firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n        }\n        return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n    }\n    _internal_removeSeries(series) {\n        return this._internal_setSeriesData(series, []);\n    }\n    _internal_updateSeriesData(series, data) {\n        const extendedData = data;\n        saveOriginalTime(extendedData);\n        // convertStringToBusinessDay(data);\n        this._private__horzScaleBehavior.preprocessData(data);\n        const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n        const time = timeConverter(data.time);\n        const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n        if (lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n            throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n        }\n        let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n        // if no point data found for the new data item\n        // that means that we need to update scale\n        const affectsTimeScale = pointDataAtTime === undefined;\n        if (pointDataAtTime === undefined) {\n            // the indexes will be sync later\n            pointDataAtTime = createEmptyTimePointData(time);\n            this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n        }\n        const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n        const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n        pointDataAtTime._internal_mapping.set(series, plotRow);\n        this._private__updateLastSeriesRow(series, plotRow);\n        const info = { _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow) };\n        // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n        if (!affectsTimeScale) {\n            return this._private__getUpdateResponse(series, -1, info);\n        }\n        const newPoint = {\n            timeWeight: 0,\n            time: pointDataAtTime._internal_timePoint,\n            pointData: pointDataAtTime,\n            originalTime: timeScalePointTime(pointDataAtTime._internal_mapping),\n        };\n        const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        // yes, I know that this array is readonly and this change is intended to make it performative\n        // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n        // but this place is exceptional case due performance reasons, sorry\n        this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n        for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n            assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n        }\n        this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n        return this._private__getUpdateResponse(series, insertIndex, info);\n    }\n    _private__updateLastSeriesRow(series, plotRow) {\n        let seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            seriesData = [];\n            this._private__seriesRowsBySeries.set(series, seriesData);\n        }\n        const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n        if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData.push(plotRow);\n            }\n        }\n        else {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData[seriesData.length - 1] = plotRow;\n            }\n            else {\n                seriesData.splice(-1, 1);\n            }\n        }\n        this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n    }\n    _private__setRowsToSeries(series, seriesRows) {\n        if (seriesRows.length !== 0) {\n            this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n            this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n        }\n        else {\n            this._private__seriesRowsBySeries.delete(series);\n            this._private__seriesLastTimePoint.delete(series);\n        }\n    }\n    _private__cleanupPointsData() {\n        // let's treat all current points as \"potentially removed\"\n        // we could create an array with actually potentially removed points\n        // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n        // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n        for (const point of this._private__sortedTimePoints) {\n            if (point.pointData._internal_mapping.size === 0) {\n                this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n            }\n        }\n    }\n    /**\n     * Sets new time scale and make indexes valid for all series\n     *\n     * @returns The index of the first changed point or `-1` if there is no change.\n     */\n    _private__replaceTimeScalePoints(newTimePoints) {\n        let firstChangedPointIndex = -1;\n        // search the first different point and \"syncing\" time weight by the way\n        for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n            const oldPoint = this._private__sortedTimePoints[index];\n            const newPoint = newTimePoints[index];\n            if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n                firstChangedPointIndex = index;\n                break;\n            }\n            // re-assign point's time weight for points if time is the same (and all prior times was the same)\n            newPoint.timeWeight = oldPoint.timeWeight;\n            assignIndexToPointData(newPoint.pointData, index);\n        }\n        if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n            // the common part of the prev and the new points are the same\n            // so the first changed point is the next after the common part\n            firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n        }\n        if (firstChangedPointIndex === -1) {\n            // if no time scale changed, then do nothing\n            return -1;\n        }\n        // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n        // but first we need to synchronize indexes and re-fill time weights\n        for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n            assignIndexToPointData(newTimePoints[index].pointData, index);\n        }\n        // re-fill time weights for point after the first changed one\n        this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n        this._private__sortedTimePoints = newTimePoints;\n        return firstChangedPointIndex;\n    }\n    _private__getBaseIndex() {\n        if (this._private__seriesRowsBySeries.size === 0) {\n            // if we have no data then 'reset' the base index to null\n            return null;\n        }\n        let baseIndex = 0;\n        this._private__seriesRowsBySeries.forEach((data) => {\n            if (data.length !== 0) {\n                baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n            }\n        });\n        return baseIndex;\n    }\n    _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n        const dataUpdateResponse = {\n            _internal_series: new Map(),\n            _internal_timeScale: {\n                _internal_baseIndex: this._private__getBaseIndex(),\n            },\n        };\n        if (firstChangedPointIndex !== -1) {\n            // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n            // but let's skip for now\n            this._private__seriesRowsBySeries.forEach((data, s) => {\n                dataUpdateResponse._internal_series.set(s, {\n                    _internal_data: data,\n                    _internal_info: s === updatedSeries ? info : undefined,\n                });\n            });\n            // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n            // meaning the forEach above won't add the series to the data update response\n            // so we handle that case here\n            if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n                dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: [], _internal_info: info });\n            }\n            dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n            dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n        }\n        else {\n            const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n            // if no seriesData found that means that we just removed the series\n            dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: seriesData || [], _internal_info: info });\n        }\n        return dataUpdateResponse;\n    }\n}\nfunction assignIndexToPointData(pointData, index) {\n    // first, nevertheless update index of point data (\"make it valid\")\n    pointData._internal_index = index;\n    // and then we need to sync indexes for all series\n    pointData._internal_mapping.forEach((seriesRow) => {\n        seriesRow._internal_index = index;\n    });\n}\n\nfunction singleValueData(plotRow) {\n    const data = {\n        value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction lineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction areaData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_lineColor !== undefined) {\n        result.lineColor = plotRow._internal_lineColor;\n    }\n    if (plotRow._internal_topColor !== undefined) {\n        result.topColor = plotRow._internal_topColor;\n    }\n    if (plotRow._internal_bottomColor !== undefined) {\n        result.bottomColor = plotRow._internal_bottomColor;\n    }\n    return result;\n}\nfunction baselineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_topLineColor !== undefined) {\n        result.topLineColor = plotRow._internal_topLineColor;\n    }\n    if (plotRow._internal_bottomLineColor !== undefined) {\n        result.bottomLineColor = plotRow._internal_bottomLineColor;\n    }\n    if (plotRow._internal_topFillColor1 !== undefined) {\n        result.topFillColor1 = plotRow._internal_topFillColor1;\n    }\n    if (plotRow._internal_topFillColor2 !== undefined) {\n        result.topFillColor2 = plotRow._internal_topFillColor2;\n    }\n    if (plotRow._internal_bottomFillColor1 !== undefined) {\n        result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n    }\n    if (plotRow._internal_bottomFillColor2 !== undefined) {\n        result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n    }\n    return result;\n}\nfunction ohlcData(plotRow) {\n    const data = {\n        open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n        high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n        low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n        close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction barData(plotRow) {\n    const result = ohlcData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction candlestickData(plotRow) {\n    const result = ohlcData(plotRow);\n    const { _internal_color: color, _internal_borderColor: borderColor, _internal_wickColor: wickColor } = plotRow;\n    if (color !== undefined) {\n        result.color = color;\n    }\n    if (borderColor !== undefined) {\n        result.borderColor = borderColor;\n    }\n    if (wickColor !== undefined) {\n        result.wickColor = wickColor;\n    }\n    return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n    const seriesPlotRowToDataMap = {\n        Area: (areaData),\n        Line: (lineData),\n        Baseline: (baselineData),\n        Histogram: (lineData),\n        Bar: (barData),\n        Candlestick: (candlestickData),\n        Custom: (customData),\n    };\n    return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n    const time = plotRow._internal_originalTime;\n    return Object.assign(Object.assign({}, plotRow._internal_data), { time });\n}\n\nconst crosshairOptionsDefaults = {\n    vertLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    horzLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    mode: 1 /* CrosshairMode.Magnet */,\n};\n\nconst gridOptionsDefaults = {\n    vertLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n    horzLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n};\n\nconst layoutOptionsDefaults = {\n    background: {\n        type: \"solid\" /* ColorType.Solid */,\n        color: '#FFFFFF',\n    },\n    textColor: '#191919',\n    fontSize: 12,\n    fontFamily: defaultFontFamily,\n};\n\nconst priceScaleOptionsDefaults = {\n    autoScale: true,\n    mode: 0 /* PriceScaleMode.Normal */,\n    invertScale: false,\n    alignLabels: true,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    entireTextOnly: false,\n    visible: false,\n    ticksVisible: false,\n    scaleMargins: {\n        bottom: 0.1,\n        top: 0.2,\n    },\n    minimumWidth: 0,\n};\n\nconst timeScaleOptionsDefaults = {\n    rightOffset: 0,\n    barSpacing: 6,\n    minBarSpacing: 0.5,\n    fixLeftEdge: false,\n    fixRightEdge: false,\n    lockVisibleTimeRangeOnResize: false,\n    rightBarStaysOnScroll: false,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    visible: true,\n    timeVisible: false,\n    secondsVisible: true,\n    shiftVisibleRangeOnNewBar: true,\n    allowShiftVisibleRangeOnWhitespaceReplacement: false,\n    ticksVisible: false,\n    uniformDistribution: false,\n    minimumHeight: 0,\n    allowBoldLabels: true,\n};\n\nconst watermarkOptionsDefaults = {\n    color: 'rgba(0, 0, 0, 0)',\n    visible: false,\n    fontSize: 48,\n    fontFamily: defaultFontFamily,\n    fontStyle: '',\n    text: '',\n    horzAlign: 'center',\n    vertAlign: 'center',\n};\n\nfunction chartOptionsDefaults() {\n    return {\n        width: 0,\n        height: 0,\n        autoSize: false,\n        layout: layoutOptionsDefaults,\n        crosshair: crosshairOptionsDefaults,\n        grid: gridOptionsDefaults,\n        overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n        leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: false }),\n        rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: true }),\n        timeScale: timeScaleOptionsDefaults,\n        watermark: watermarkOptionsDefaults,\n        localization: {\n            locale: isRunningOnClientSide ? navigator.language : '',\n            dateFormat: 'dd MMM \\'yy',\n        },\n        handleScroll: {\n            mouseWheel: true,\n            pressedMouseMove: true,\n            horzTouchDrag: true,\n            vertTouchDrag: true,\n        },\n        handleScale: {\n            axisPressedMouseMove: {\n                time: true,\n                price: true,\n            },\n            axisDoubleClickReset: {\n                time: true,\n                price: true,\n            },\n            mouseWheel: true,\n            pinch: true,\n        },\n        kineticScroll: {\n            mouse: false,\n            touch: true,\n        },\n        trackingMode: {\n            exitMode: 1 /* TrackingModeExitMode.OnNextTap */,\n        },\n    };\n}\n\nclass PriceScaleApi {\n    constructor(chartWidget, priceScaleId) {\n        this._private__chartWidget = chartWidget;\n        this._private__priceScaleId = priceScaleId;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n    }\n    options() {\n        return this._private__priceScale()._internal_options();\n    }\n    width() {\n        if (!isDefaultPriceScale(this._private__priceScaleId)) {\n            return 0;\n        }\n        return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n    }\n    _private__priceScale() {\n        return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n    if (data.length === 0) {\n        return;\n    }\n    let prevTime = bh.key(data[0].time);\n    for (let i = 1; i < data.length; ++i) {\n        const currentTime = bh.key(data[i].time);\n        const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n        assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n        prevTime = currentTime;\n    }\n}\nfunction checkSeriesValuesType(type, data) {\n    data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n    switch (type) {\n        case 'Bar':\n        case 'Candlestick':\n            return checkBarItem.bind(null, type);\n        case 'Area':\n        case 'Baseline':\n        case 'Line':\n        case 'Histogram':\n            return checkLineItem.bind(null, type);\n        case 'Custom':\n            return checkCustomItem.bind(null, type);\n    }\n}\nfunction checkBarItem(type, barItem) {\n    if (!isFulfilledData(barItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n    if (!isFulfilledData(lineItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n// type: 'Custom',\n// customItem: SeriesDataItemTypeMap[typeof type]\n) {\n    // Nothing to check yet...\n    return;\n}\n\nfunction convertSeriesMarker(sm, newTime, originalTime) {\n    const values = __rest(sm, [\"time\", \"originalTime\"]);\n    /* eslint-disable @typescript-eslint/consistent-type-assertions */\n    const res = Object.assign({ time: newTime }, values);\n    /* eslint-enable @typescript-eslint/consistent-type-assertions */\n    if (originalTime !== undefined) {\n        res.originalTime = originalTime;\n    }\n    return res;\n}\n\nconst priceLineOptionsDefaults = {\n    color: '#FF0000',\n    price: 0,\n    lineStyle: 2 /* LineStyle.Dashed */,\n    lineWidth: 1,\n    lineVisible: true,\n    axisLabelVisible: true,\n    title: '',\n    axisLabelColor: '',\n    axisLabelTextColor: '',\n};\n\nclass PriceLine {\n    constructor(priceLine) {\n        this._private__priceLine = priceLine;\n    }\n    applyOptions(options) {\n        this._private__priceLine._internal_applyOptions(options);\n    }\n    options() {\n        return this._private__priceLine._internal_options();\n    }\n    _internal_priceLine() {\n        return this._private__priceLine;\n    }\n}\n\nclass SeriesApi {\n    constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior) {\n        this._private__dataChangedDelegate = new Delegate();\n        this._internal__series = series;\n        this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n        this._private__priceScaleApiProvider = priceScaleApiProvider;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._internal__chartApi = chartApi;\n    }\n    _internal_destroy() {\n        this._private__dataChangedDelegate._internal_destroy();\n    }\n    priceFormatter() {\n        return this._internal__series._internal_formatter();\n    }\n    priceToCoordinate(price) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    }\n    coordinateToPrice(coordinate) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n    }\n    barsInLogicalRange(range) {\n        if (range === null) {\n            return null;\n        }\n        // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n        const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n        const bars = this._internal__series._internal_bars();\n        if (bars._internal_isEmpty()) {\n            return null;\n        }\n        const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n        const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n        const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n        const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n        // this means that we request data in the data gap\n        // e.g. let's say we have series with data [0..10, 30..60]\n        // and we request bars info in range [15, 25]\n        // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n            return {\n                barsBefore: range.from - dataFirstIndex,\n                barsAfter: dataLastIndex - range.to,\n            };\n        }\n        const barsBefore = (dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex)\n            ? range.from - dataFirstIndex\n            : dataFirstBarInRange._internal_index - dataFirstIndex;\n        const barsAfter = (dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex)\n            ? dataLastIndex - range.to\n            : dataLastIndex - dataLastBarInRange._internal_index;\n        const result = { barsBefore, barsAfter };\n        // actually they can't exist separately\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n            result.from = dataFirstBarInRange._internal_originalTime;\n            result.to = dataLastBarInRange._internal_originalTime;\n        }\n        return result;\n    }\n    setData(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n        this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n        this._private__onDataChanged('full');\n    }\n    update(bar) {\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n        this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n        this._private__onDataChanged('update');\n    }\n    dataByIndex(logicalIndex, mismatchDirection) {\n        const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n        if (data === null) {\n            // actually it can be a whitespace\n            return null;\n        }\n        const creator = getSeriesDataCreator(this.seriesType());\n        return creator(data);\n    }\n    data() {\n        const seriesCreator = getSeriesDataCreator(this.seriesType());\n        const rows = this._internal__series._internal_bars()._internal_rows();\n        return rows.map((row) => seriesCreator(row));\n    }\n    subscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_unsubscribe(handler);\n    }\n    setMarkers(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior, true);\n        const convertedMarkers = data.map((marker) => convertSeriesMarker(marker, this._private__horzScaleBehavior.convertHorzItemToInternal(marker.time), marker.time));\n        this._internal__series._internal_setMarkers(convertedMarkers);\n    }\n    markers() {\n        return this._internal__series._internal_markers().map((internalItem) => {\n            return convertSeriesMarker(internalItem, internalItem.originalTime, undefined);\n        });\n    }\n    applyOptions(options) {\n        this._internal__series._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._internal__series._internal_options());\n    }\n    priceScale() {\n        return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n    }\n    createPriceLine(options) {\n        checkPriceLineOptions(options);\n        const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n        const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n        return new PriceLine(priceLine);\n    }\n    removePriceLine(line) {\n        this._internal__series._internal_removePriceLine(line._internal_priceLine());\n    }\n    seriesType() {\n        return this._internal__series._internal_seriesType();\n    }\n    attachPrimitive(primitive) {\n        // at this point we cast the generic to unknown because we\n        // don't want the model to know the types of the API (◑_◑)\n        this._internal__series._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                series: this,\n                requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate(),\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._internal__series._internal_detachPrimitive(primitive);\n        if (primitive.detached) {\n            primitive.detached();\n        }\n    }\n    _private__onDataChanged(scope) {\n        if (this._private__dataChangedDelegate._internal_hasListeners()) {\n            this._private__dataChangedDelegate._internal_fire(scope);\n        }\n    }\n}\n\nclass TimeScaleApi {\n    constructor(model, timeAxisWidget, horzScaleBehavior) {\n        this._private__timeRangeChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__sizeChanged = new Delegate();\n        this._private__model = model;\n        this._private__timeScale = model._internal_timeScale();\n        this._private__timeAxisWidget = timeAxisWidget;\n        this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n        this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n        this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n        this._private__timeRangeChanged._internal_destroy();\n        this._private__logicalRangeChanged._internal_destroy();\n        this._private__sizeChanged._internal_destroy();\n    }\n    scrollPosition() {\n        return this._private__timeScale._internal_rightOffset();\n    }\n    scrollToPosition(position, animated) {\n        if (!animated) {\n            this._private__model._internal_setRightOffset(position);\n            return;\n        }\n        this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n    }\n    scrollToRealTime() {\n        this._private__timeScale._internal_scrollToRealTime();\n    }\n    getVisibleRange() {\n        const timeRange = this._private__timeScale._internal_visibleTimeRange();\n        if (timeRange === null) {\n            return null;\n        }\n        return {\n            from: timeRange.from.originalTime,\n            to: timeRange.to.originalTime,\n        };\n    }\n    setVisibleRange(range) {\n        const convertedRange = {\n            from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n            to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to),\n        };\n        const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n        this._private__model._internal_setTargetLogicalRange(logicalRange);\n    }\n    getVisibleLogicalRange() {\n        const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n        if (logicalRange === null) {\n            return null;\n        }\n        return {\n            from: logicalRange._internal_left(),\n            to: logicalRange._internal_right(),\n        };\n    }\n    setVisibleLogicalRange(range) {\n        assert(range.from <= range.to, 'The from index cannot be after the to index.');\n        this._private__model._internal_setTargetLogicalRange(range);\n    }\n    resetTimeScale() {\n        this._private__model._internal_resetTimeScale();\n    }\n    fitContent() {\n        this._private__model._internal_fitContent();\n    }\n    logicalToCoordinate(logical) {\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return timeScale._internal_indexToCoordinate(logical);\n        }\n    }\n    coordinateToLogical(x) {\n        if (this._private__timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return this._private__timeScale._internal_coordinateToIndex(x);\n        }\n    }\n    timeToCoordinate(time) {\n        const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n        const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n        if (timePointIndex === null) {\n            return null;\n        }\n        return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n    }\n    coordinateToTime(x) {\n        const timeScale = this._private__model._internal_timeScale();\n        const timePointIndex = timeScale._internal_coordinateToIndex(x);\n        const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n        if (timePoint === null) {\n            return null;\n        }\n        return timePoint.originalTime;\n    }\n    width() {\n        return this._private__timeAxisWidget._internal_getSize().width;\n    }\n    height() {\n        return this._private__timeAxisWidget._internal_getSize().height;\n    }\n    subscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_subscribe(handler);\n    }\n    unsubscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._private__timeScale._internal_applyOptions(options);\n    }\n    options() {\n        return Object.assign(Object.assign({}, clone(this._private__timeScale._internal_options())), { barSpacing: this._private__timeScale._internal_barSpacing() });\n    }\n    _private__onVisibleBarsChanged() {\n        if (this._private__timeRangeChanged._internal_hasListeners()) {\n            this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n        }\n    }\n    _private__onVisibleLogicalRangeChanged() {\n        if (this._private__logicalRangeChanged._internal_hasListeners()) {\n            this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n        }\n    }\n    _private__onSizeChanged(size) {\n        this._private__sizeChanged._internal_fire(size.width, size.height);\n    }\n}\n\nfunction patchPriceFormat(priceFormat) {\n    if (priceFormat === undefined || priceFormat.type === 'custom') {\n        return;\n    }\n    const priceFormatBuiltIn = priceFormat;\n    if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n        priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n    }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n    if (isBoolean(options.handleScale)) {\n        const handleScale = options.handleScale;\n        options.handleScale = {\n            axisDoubleClickReset: {\n                time: handleScale,\n                price: handleScale,\n            },\n            axisPressedMouseMove: {\n                time: handleScale,\n                price: handleScale,\n            },\n            mouseWheel: handleScale,\n            pinch: handleScale,\n        };\n    }\n    else if (options.handleScale !== undefined) {\n        const { axisPressedMouseMove, axisDoubleClickReset } = options.handleScale;\n        if (isBoolean(axisPressedMouseMove)) {\n            options.handleScale.axisPressedMouseMove = {\n                time: axisPressedMouseMove,\n                price: axisPressedMouseMove,\n            };\n        }\n        if (isBoolean(axisDoubleClickReset)) {\n            options.handleScale.axisDoubleClickReset = {\n                time: axisDoubleClickReset,\n                price: axisDoubleClickReset,\n            };\n        }\n    }\n    const handleScroll = options.handleScroll;\n    if (isBoolean(handleScroll)) {\n        options.handleScroll = {\n            horzTouchDrag: handleScroll,\n            vertTouchDrag: handleScroll,\n            mouseWheel: handleScroll,\n            pressedMouseMove: handleScroll,\n        };\n    }\n}\nfunction toInternalOptions(options) {\n    migrateHandleScaleScrollOptions(options);\n    return options;\n}\nclass ChartApi {\n    constructor(container, horzScaleBehavior, options) {\n        this._private__seriesMap = new Map();\n        this._private__seriesMapReversed = new Map();\n        this._private__clickedDelegate = new Delegate();\n        this._private__dblClickedDelegate = new Delegate();\n        this._private__crosshairMovedDelegate = new Delegate();\n        this._private__dataLayer = new DataLayer(horzScaleBehavior);\n        const internalOptions = (options === undefined) ?\n            clone(chartOptionsDefaults()) :\n            merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n        this._private__chartWidget._internal_clicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__clickedDelegate._internal_hasListeners()) {\n                this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_dblClicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__dblClickedDelegate._internal_hasListeners()) {\n                this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_subscribe((paramSupplier) => {\n            if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n                this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        const model = this._private__chartWidget._internal_model();\n        this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._private__horzScaleBehavior);\n    }\n    remove() {\n        this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__timeScaleApi._internal_destroy();\n        this._private__chartWidget._internal_destroy();\n        this._private__seriesMap.clear();\n        this._private__seriesMapReversed.clear();\n        this._private__clickedDelegate._internal_destroy();\n        this._private__dblClickedDelegate._internal_destroy();\n        this._private__crosshairMovedDelegate._internal_destroy();\n        this._private__dataLayer._internal_destroy();\n    }\n    resize(width, height, forceRepaint) {\n        if (this.autoSizeActive()) {\n            // We return early here instead of checking this within the actual _chartWidget.resize method\n            // because this should only apply to external resize requests.\n            warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n            return;\n        }\n        this._private__chartWidget._internal_resize(width, height, forceRepaint);\n    }\n    addCustomSeries(customPaneView, options) {\n        const paneView = ensure(customPaneView);\n        const defaults = Object.assign(Object.assign({}, customStyleDefaults), paneView.defaultOptions());\n        return this._private__addSeriesImpl('Custom', defaults, options, paneView);\n    }\n    addAreaSeries(options) {\n        return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n    }\n    addBaselineSeries(options) {\n        return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n    }\n    addBarSeries(options) {\n        return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n    }\n    addCandlestickSeries(options = {}) {\n        fillUpDownCandlesticksColors(options);\n        return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n    }\n    addHistogramSeries(options) {\n        return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n    }\n    addLineSeries(options) {\n        return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n    }\n    removeSeries(seriesApi) {\n        const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n        const update = this._private__dataLayer._internal_removeSeries(series);\n        const model = this._private__chartWidget._internal_model();\n        model._internal_removeSeries(series);\n        this._private__sendUpdateToChart(update);\n        this._private__seriesMap.delete(seriesApi);\n        this._private__seriesMapReversed.delete(series);\n    }\n    _internal_applyNewData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n    }\n    _internal_updateData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n    }\n    subscribeClick(handler) {\n        this._private__clickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeClick(handler) {\n        this._private__clickedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_unsubscribe(handler);\n    }\n    priceScale(priceScaleId) {\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n    }\n    timeScale() {\n        return this._private__timeScaleApi;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n    }\n    options() {\n        return this._private__chartWidget._internal_options();\n    }\n    takeScreenshot() {\n        return this._private__chartWidget._internal_takeScreenshot();\n    }\n    autoSizeActive() {\n        return this._private__chartWidget._internal_autoSizeActive();\n    }\n    chartElement() {\n        return this._private__chartWidget._internal_element();\n    }\n    paneSize() {\n        const size = this._private__chartWidget._internal_paneSize();\n        return {\n            height: size.height,\n            width: size.width,\n        };\n    }\n    setCrosshairPosition(price, horizontalPosition, seriesApi) {\n        const series = this._private__seriesMap.get(seriesApi);\n        if (series === undefined) {\n            return;\n        }\n        const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n        if (pane === null) {\n            return;\n        }\n        this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n    }\n    clearCrosshairPosition() {\n        this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n    }\n    _private__addSeriesImpl(type, styleDefaults, options = {}, customPaneView) {\n        patchPriceFormat(options.priceFormat);\n        const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n        const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions, customPaneView);\n        const res = new SeriesApi(series, this, this, this, this._private__horzScaleBehavior);\n        this._private__seriesMap.set(res, series);\n        this._private__seriesMapReversed.set(series, res);\n        return res;\n    }\n    _private__sendUpdateToChart(update) {\n        const model = this._private__chartWidget._internal_model();\n        model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n        update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n        model._internal_recalculateAllPanes();\n    }\n    _private__mapSeriesToApi(series) {\n        return ensureDefined(this._private__seriesMapReversed.get(series));\n    }\n    _private__convertMouseParams(param) {\n        const seriesData = new Map();\n        param._internal_seriesData.forEach((plotRow, series) => {\n            const seriesType = series._internal_seriesType();\n            const data = getSeriesDataCreator(seriesType)(plotRow);\n            if (seriesType !== 'Custom') {\n                assert(isFulfilledData(data));\n            }\n            else {\n                const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n                assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n            }\n            seriesData.set(this._private__mapSeriesToApi(series), data);\n        });\n        const hoveredSeries = param._internal_hoveredSeries === undefined ||\n            !this._private__seriesMapReversed.has(param._internal_hoveredSeries)\n            ? undefined\n            : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n        return {\n            time: param._internal_originalTime,\n            logical: param._internal_index,\n            point: param._internal_point,\n            hoveredSeries,\n            hoveredObjectId: param._internal_hoveredObject,\n            seriesData,\n            sourceEvent: param._internal_touchMouseEventData,\n        };\n    }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n    let htmlElement;\n    if (isString(container)) {\n        const element = document.getElementById(container);\n        assert(element !== null, `Cannot find element in DOM with id=${container}`);\n        htmlElement = element;\n    }\n    else {\n        htmlElement = container;\n    }\n    const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n    horzScaleBehavior.setOptions(res.options());\n    return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = Object.assign(Object.assign({}, seriesOptionsDefaults), customStyleDefaults);\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n    return \"4.1.4\";\n}\n\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, customSeriesDefaultOptions, isBusinessDay, isUTCTimestamp, version };\n"],
  "mappings": "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",
  "names": ["Observable", "DevicePixelContentBoxBinding", "size", "entry", "CanvasRenderingTarget2D", "LineType", "LineStyle", "color", "size", "radius", "CrosshairMode", "finishStyledArea", "currentItem", "optimizationReplacementRe", "shapeMargin", "shapeSize", "MismatchDirection", "min", "PriceScaleMode", "TrackingModeExitMode", "LastPriceAnimationMode", "PriceLineSource", "ColorType", "TickMarkType", "add"]
}
